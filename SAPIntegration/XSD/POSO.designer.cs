// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>SAPIntegration.INOUT</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>True</OrderXMLAttrib><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>All</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace SAPIntegration.INOUT
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;


    /// <summary>
    /// Purchasing/Sales
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class ORDERS05 : System.ComponentModel.INotifyPropertyChanged
    {

        private ORDERS05IDOC iDOCField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iDOCFieldSpecified;

        /// <summary>
        /// ORDERS05 class constructor
        /// </summary>
        public ORDERS05()
        {
            this.iDOCField = new ORDERS05IDOC();
        }

        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public ORDERS05IDOC IDOC
        {
            get
            {
                return this.iDOCField;
            }
            set
            {
                if ((this.iDOCField != null))
                {
                    if ((iDOCField.Equals(value) != true))
                    {
                        this.iDOCField = value;
                        this.OnPropertyChanged("IDOC");
                    }
                }
                else
                {
                    this.iDOCField = value;
                    this.OnPropertyChanged("IDOC");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool IDOCSpecified
        {
            get
            {
                return iDOCFieldSpecified;
            }
            set
            {
                iDOCFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOC : System.ComponentModel.INotifyPropertyChanged
    {

        private ORDERS05IDOCEDI_DC40 eDI_DC40Field;

        private ORDERS05IDOCE1EDK01 e1EDK01Field;

        private List<ORDERS05IDOCE1EDK14> e1EDK14Field;

        private List<ORDERS05IDOCE1EDK03> e1EDK03Field;

        private List<ORDERS05IDOCE1EDK04> e1EDK04Field;

        private List<ORDERS05IDOCE1EDK05> e1EDK05Field;

        private List<ORDERS05IDOCE1EDKA1> e1EDKA1Field;

        private List<ORDERS05IDOCE1EDK02> e1EDK02Field;

        private List<ORDERS05IDOCE1EDK17> e1EDK17Field;

        private List<ORDERS05IDOCE1EDK18> e1EDK18Field;

        private List<ORDERS05IDOCE1EDK35> e1EDK35Field;

        private List<ORDERS05IDOCE1EDK36> e1EDK36Field;

        private List<ORDERS05IDOCE1EDKT1> e1EDKT1Field;

        private List<ORDERS05IDOCE1EDP01> e1EDP01Field;

        private List<ORDERS05IDOCE1CUCFG> e1CUCFGField;

        private List<ORDERS05IDOCE1EDL37> e1EDL37Field;

        private List<ORDERS05IDOCE1EDS01> e1EDS01Field;

        private ORDERS05IDOCBEGIN bEGINField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool eDI_DC40FieldSpecified;

        private bool e1EDK01FieldSpecified;

        private bool e1EDK14FieldSpecified;

        private bool e1EDK03FieldSpecified;

        private bool e1EDK04FieldSpecified;

        private bool e1EDK05FieldSpecified;

        private bool e1EDKA1FieldSpecified;

        private bool e1EDK02FieldSpecified;

        private bool e1EDK17FieldSpecified;

        private bool e1EDK18FieldSpecified;

        private bool e1EDK35FieldSpecified;

        private bool e1EDK36FieldSpecified;

        private bool e1EDKT1FieldSpecified;

        private bool e1EDP01FieldSpecified;

        private bool e1CUCFGFieldSpecified;

        private bool e1EDL37FieldSpecified;

        private bool e1EDS01FieldSpecified;

        private bool bEGINFieldSpecified;

        /// <summary>
        /// ORDERS05IDOC class constructor
        /// </summary>
        public ORDERS05IDOC()
        {
            this.e1EDS01Field = new List<ORDERS05IDOCE1EDS01>();
            this.e1EDL37Field = new List<ORDERS05IDOCE1EDL37>();
            this.e1CUCFGField = new List<ORDERS05IDOCE1CUCFG>();
            this.e1EDP01Field = new List<ORDERS05IDOCE1EDP01>();
            this.e1EDKT1Field = new List<ORDERS05IDOCE1EDKT1>();
            this.e1EDK36Field = new List<ORDERS05IDOCE1EDK36>();
            this.e1EDK35Field = new List<ORDERS05IDOCE1EDK35>();
            this.e1EDK18Field = new List<ORDERS05IDOCE1EDK18>();
            this.e1EDK17Field = new List<ORDERS05IDOCE1EDK17>();
            this.e1EDK02Field = new List<ORDERS05IDOCE1EDK02>();
            this.e1EDKA1Field = new List<ORDERS05IDOCE1EDKA1>();
            this.e1EDK05Field = new List<ORDERS05IDOCE1EDK05>();
            this.e1EDK04Field = new List<ORDERS05IDOCE1EDK04>();
            this.e1EDK03Field = new List<ORDERS05IDOCE1EDK03>();
            this.e1EDK14Field = new List<ORDERS05IDOCE1EDK14>();
            this.e1EDK01Field = new ORDERS05IDOCE1EDK01();
            this.eDI_DC40Field = new ORDERS05IDOCEDI_DC40();
        }

        /// <summary>
        /// IDoc Control Record for Interface to External System
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public ORDERS05IDOCEDI_DC40 EDI_DC40
        {
            get
            {
                return this.eDI_DC40Field;
            }
            set
            {
                if ((this.eDI_DC40Field != null))
                {
                    if ((eDI_DC40Field.Equals(value) != true))
                    {
                        this.eDI_DC40Field = value;
                        this.OnPropertyChanged("EDI_DC40");
                    }
                }
                else
                {
                    this.eDI_DC40Field = value;
                    this.OnPropertyChanged("EDI_DC40");
                }
            }
        }

        /// <summary>
        /// IDoc: Document header general data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public ORDERS05IDOCE1EDK01 E1EDK01
        {
            get
            {
                return this.e1EDK01Field;
            }
            set
            {
                if ((this.e1EDK01Field != null))
                {
                    if ((e1EDK01Field.Equals(value) != true))
                    {
                        this.e1EDK01Field = value;
                        this.OnPropertyChanged("E1EDK01");
                    }
                }
                else
                {
                    this.e1EDK01Field = value;
                    this.OnPropertyChanged("E1EDK01");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Organizational Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK14", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public List<ORDERS05IDOCE1EDK14> E1EDK14
        {
            get
            {
                return this.e1EDK14Field;
            }
            set
            {
                if ((this.e1EDK14Field != null))
                {
                    if ((e1EDK14Field.Equals(value) != true))
                    {
                        this.e1EDK14Field = value;
                        this.OnPropertyChanged("E1EDK14");
                    }
                }
                else
                {
                    this.e1EDK14Field = value;
                    this.OnPropertyChanged("E1EDK14");
                }
            }
        }

        /// <summary>
        /// IDoc: Document header date segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK03", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public List<ORDERS05IDOCE1EDK03> E1EDK03
        {
            get
            {
                return this.e1EDK03Field;
            }
            set
            {
                if ((this.e1EDK03Field != null))
                {
                    if ((e1EDK03Field.Equals(value) != true))
                    {
                        this.e1EDK03Field = value;
                        this.OnPropertyChanged("E1EDK03");
                    }
                }
                else
                {
                    this.e1EDK03Field = value;
                    this.OnPropertyChanged("E1EDK03");
                }
            }
        }

        /// <summary>
        /// IDoc: Document header taxes
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK04", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public List<ORDERS05IDOCE1EDK04> E1EDK04
        {
            get
            {
                return this.e1EDK04Field;
            }
            set
            {
                if ((this.e1EDK04Field != null))
                {
                    if ((e1EDK04Field.Equals(value) != true))
                    {
                        this.e1EDK04Field = value;
                        this.OnPropertyChanged("E1EDK04");
                    }
                }
                else
                {
                    this.e1EDK04Field = value;
                    this.OnPropertyChanged("E1EDK04");
                }
            }
        }

        /// <summary>
        /// IDoc: Document header conditions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK05", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public List<ORDERS05IDOCE1EDK05> E1EDK05
        {
            get
            {
                return this.e1EDK05Field;
            }
            set
            {
                if ((this.e1EDK05Field != null))
                {
                    if ((e1EDK05Field.Equals(value) != true))
                    {
                        this.e1EDK05Field = value;
                        this.OnPropertyChanged("E1EDK05");
                    }
                }
                else
                {
                    this.e1EDK05Field = value;
                    this.OnPropertyChanged("E1EDK05");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Partner Information
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDKA1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public List<ORDERS05IDOCE1EDKA1> E1EDKA1
        {
            get
            {
                return this.e1EDKA1Field;
            }
            set
            {
                if ((this.e1EDKA1Field != null))
                {
                    if ((e1EDKA1Field.Equals(value) != true))
                    {
                        this.e1EDKA1Field = value;
                        this.OnPropertyChanged("E1EDKA1");
                    }
                }
                else
                {
                    this.e1EDKA1Field = value;
                    this.OnPropertyChanged("E1EDKA1");
                }
            }
        }

        /// <summary>
        /// IDoc: Document header reference data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK02", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<ORDERS05IDOCE1EDK02> E1EDK02
        {
            get
            {
                return this.e1EDK02Field;
            }
            set
            {
                if ((this.e1EDK02Field != null))
                {
                    if ((e1EDK02Field.Equals(value) != true))
                    {
                        this.e1EDK02Field = value;
                        this.OnPropertyChanged("E1EDK02");
                    }
                }
                else
                {
                    this.e1EDK02Field = value;
                    this.OnPropertyChanged("E1EDK02");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Terms of Delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK17", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public List<ORDERS05IDOCE1EDK17> E1EDK17
        {
            get
            {
                return this.e1EDK17Field;
            }
            set
            {
                if ((this.e1EDK17Field != null))
                {
                    if ((e1EDK17Field.Equals(value) != true))
                    {
                        this.e1EDK17Field = value;
                        this.OnPropertyChanged("E1EDK17");
                    }
                }
                else
                {
                    this.e1EDK17Field = value;
                    this.OnPropertyChanged("E1EDK17");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Terms of Payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK18", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public List<ORDERS05IDOCE1EDK18> E1EDK18
        {
            get
            {
                return this.e1EDK18Field;
            }
            set
            {
                if ((this.e1EDK18Field != null))
                {
                    if ((e1EDK18Field.Equals(value) != true))
                    {
                        this.e1EDK18Field = value;
                        this.OnPropertyChanged("E1EDK18");
                    }
                }
                else
                {
                    this.e1EDK18Field = value;
                    this.OnPropertyChanged("E1EDK18");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Additional Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK35", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public List<ORDERS05IDOCE1EDK35> E1EDK35
        {
            get
            {
                return this.e1EDK35Field;
            }
            set
            {
                if ((this.e1EDK35Field != null))
                {
                    if ((e1EDK35Field.Equals(value) != true))
                    {
                        this.e1EDK35Field = value;
                        this.OnPropertyChanged("E1EDK35");
                    }
                }
                else
                {
                    this.e1EDK35Field = value;
                    this.OnPropertyChanged("E1EDK35");
                }
            }
        }

        /// <summary>
        /// IDOC: Doc.header payment cards
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDK36", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public List<ORDERS05IDOCE1EDK36> E1EDK36
        {
            get
            {
                return this.e1EDK36Field;
            }
            set
            {
                if ((this.e1EDK36Field != null))
                {
                    if ((e1EDK36Field.Equals(value) != true))
                    {
                        this.e1EDK36Field = value;
                        this.OnPropertyChanged("E1EDK36");
                    }
                }
                else
                {
                    this.e1EDK36Field = value;
                    this.OnPropertyChanged("E1EDK36");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Text Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDKT1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public List<ORDERS05IDOCE1EDKT1> E1EDKT1
        {
            get
            {
                return this.e1EDKT1Field;
            }
            set
            {
                if ((this.e1EDKT1Field != null))
                {
                    if ((e1EDKT1Field.Equals(value) != true))
                    {
                        this.e1EDKT1Field = value;
                        this.OnPropertyChanged("E1EDKT1");
                    }
                }
                else
                {
                    this.e1EDKT1Field = value;
                    this.OnPropertyChanged("E1EDKT1");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item General Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP01", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public List<ORDERS05IDOCE1EDP01> E1EDP01
        {
            get
            {
                return this.e1EDP01Field;
            }
            set
            {
                if ((this.e1EDP01Field != null))
                {
                    if ((e1EDP01Field.Equals(value) != true))
                    {
                        this.e1EDP01Field = value;
                        this.OnPropertyChanged("E1EDP01");
                    }
                }
                else
                {
                    this.e1EDP01Field = value;
                    this.OnPropertyChanged("E1EDP01");
                }
            }
        }

        /// <summary>
        /// CU: Configuration data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1CUCFG", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public List<ORDERS05IDOCE1CUCFG> E1CUCFG
        {
            get
            {
                return this.e1CUCFGField;
            }
            set
            {
                if ((this.e1CUCFGField != null))
                {
                    if ((e1CUCFGField.Equals(value) != true))
                    {
                        this.e1CUCFGField = value;
                        this.OnPropertyChanged("E1CUCFG");
                    }
                }
                else
                {
                    this.e1CUCFGField = value;
                    this.OnPropertyChanged("E1CUCFG");
                }
            }
        }

        /// <summary>
        /// Handling unit header
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDL37", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public List<ORDERS05IDOCE1EDL37> E1EDL37
        {
            get
            {
                return this.e1EDL37Field;
            }
            set
            {
                if ((this.e1EDL37Field != null))
                {
                    if ((e1EDL37Field.Equals(value) != true))
                    {
                        this.e1EDL37Field = value;
                        this.OnPropertyChanged("E1EDL37");
                    }
                }
                else
                {
                    this.e1EDL37Field = value;
                    this.OnPropertyChanged("E1EDL37");
                }
            }
        }

        /// <summary>
        /// IDoc: Summary segment general
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDS01", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public List<ORDERS05IDOCE1EDS01> E1EDS01
        {
            get
            {
                return this.e1EDS01Field;
            }
            set
            {
                if ((this.e1EDS01Field != null))
                {
                    if ((e1EDS01Field.Equals(value) != true))
                    {
                        this.e1EDS01Field = value;
                        this.OnPropertyChanged("E1EDS01");
                    }
                }
                else
                {
                    this.e1EDS01Field = value;
                    this.OnPropertyChanged("E1EDS01");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCBEGIN BEGIN
        {
            get
            {
                return this.bEGINField;
            }
            set
            {
                if ((bEGINField.Equals(value) != true))
                {
                    this.bEGINField = value;
                    this.OnPropertyChanged("BEGIN");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOC));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool EDI_DC40Specified
        {
            get
            {
                return eDI_DC40FieldSpecified;
            }
            set
            {
                eDI_DC40FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK01Specified
        {
            get
            {
                return e1EDK01FieldSpecified;
            }
            set
            {
                e1EDK01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK14Specified
        {
            get
            {
                return e1EDK14FieldSpecified;
            }
            set
            {
                e1EDK14FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK03Specified
        {
            get
            {
                return e1EDK03FieldSpecified;
            }
            set
            {
                e1EDK03FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK04Specified
        {
            get
            {
                return e1EDK04FieldSpecified;
            }
            set
            {
                e1EDK04FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK05Specified
        {
            get
            {
                return e1EDK05FieldSpecified;
            }
            set
            {
                e1EDK05FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDKA1Specified
        {
            get
            {
                return e1EDKA1FieldSpecified;
            }
            set
            {
                e1EDKA1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK02Specified
        {
            get
            {
                return e1EDK02FieldSpecified;
            }
            set
            {
                e1EDK02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK17Specified
        {
            get
            {
                return e1EDK17FieldSpecified;
            }
            set
            {
                e1EDK17FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK18Specified
        {
            get
            {
                return e1EDK18FieldSpecified;
            }
            set
            {
                e1EDK18FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK35Specified
        {
            get
            {
                return e1EDK35FieldSpecified;
            }
            set
            {
                e1EDK35FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDK36Specified
        {
            get
            {
                return e1EDK36FieldSpecified;
            }
            set
            {
                e1EDK36FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDKT1Specified
        {
            get
            {
                return e1EDKT1FieldSpecified;
            }
            set
            {
                e1EDKT1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP01Specified
        {
            get
            {
                return e1EDP01FieldSpecified;
            }
            set
            {
                e1EDP01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUCFGSpecified
        {
            get
            {
                return e1CUCFGFieldSpecified;
            }
            set
            {
                e1CUCFGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDL37Specified
        {
            get
            {
                return e1EDL37FieldSpecified;
            }
            set
            {
                e1EDL37FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDS01Specified
        {
            get
            {
                return e1EDS01FieldSpecified;
            }
            set
            {
                e1EDS01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BEGINSpecified
        {
            get
            {
                return bEGINFieldSpecified;
            }
            set
            {
                bEGINFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOC object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOC object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOC object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOC obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOC);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOC obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOC Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOC)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOC object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOC object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOC object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOC obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOC);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOC obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOC obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOC LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOC LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc Control Record for Interface to External System
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCEDI_DC40 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tABNAMField;

        private string mANDTField;

        private string dOCNUMField;

        private string dOCRELField;

        private string sTATUSField;

        private ORDERS05IDOCEDI_DC40DIRECT dIRECTField;

        private string oUTMODField;

        private string eXPRSSField;

        private string tESTField;

        private string iDOCTYPField;

        private string cIMTYPField;

        private string mESTYPField;

        private string mESCODField;

        private string mESFCTField;

        private string sTDField;

        private string sTDVRSField;

        private string sTDMESField;

        private string sNDPORField;

        private string sNDPRTField;

        private string sNDPFCField;

        private string sNDPRNField;

        private string sNDSADField;

        private string sNDLADField;

        private string rCVPORField;

        private string rCVPRTField;

        private string rCVPFCField;

        private string rCVPRNField;

        private string rCVSADField;

        private string rCVLADField;

        private string cREDATField;

        private string cRETIMField;

        private string rEFINTField;

        private string rEFGRPField;

        private string rEFMESField;

        private string aRCKEYField;

        private string sERIALField;

        private ORDERS05IDOCEDI_DC40SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tABNAMFieldSpecified;

        private bool mANDTFieldSpecified;

        private bool dOCNUMFieldSpecified;

        private bool dOCRELFieldSpecified;

        private bool sTATUSFieldSpecified;

        private bool dIRECTFieldSpecified;

        private bool oUTMODFieldSpecified;

        private bool eXPRSSFieldSpecified;

        private bool tESTFieldSpecified;

        private bool iDOCTYPFieldSpecified;

        private bool cIMTYPFieldSpecified;

        private bool mESTYPFieldSpecified;

        private bool mESCODFieldSpecified;

        private bool mESFCTFieldSpecified;

        private bool sTDFieldSpecified;

        private bool sTDVRSFieldSpecified;

        private bool sTDMESFieldSpecified;

        private bool sNDPORFieldSpecified;

        private bool sNDPRTFieldSpecified;

        private bool sNDPFCFieldSpecified;

        private bool sNDPRNFieldSpecified;

        private bool sNDSADFieldSpecified;

        private bool sNDLADFieldSpecified;

        private bool rCVPORFieldSpecified;

        private bool rCVPRTFieldSpecified;

        private bool rCVPFCFieldSpecified;

        private bool rCVPRNFieldSpecified;

        private bool rCVSADFieldSpecified;

        private bool rCVLADFieldSpecified;

        private bool cREDATFieldSpecified;

        private bool cRETIMFieldSpecified;

        private bool rEFINTFieldSpecified;

        private bool rEFGRPFieldSpecified;

        private bool rEFMESFieldSpecified;

        private bool aRCKEYFieldSpecified;

        private bool sERIALFieldSpecified;

        private bool sEGMENTFieldSpecified;

        public ORDERS05IDOCEDI_DC40()
        {
            this.tABNAMField = "EDI_DC40";
            this.iDOCTYPField = "ORDERS05";
            this.cIMTYPField = "";
        }

        /// <summary>
        /// Name of Table Structure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TABNAM
        {
            get
            {
                return this.tABNAMField;
            }
            set
            {
                if ((this.tABNAMField != null))
                {
                    if ((tABNAMField.Equals(value) != true))
                    {
                        this.tABNAMField = value;
                        this.OnPropertyChanged("TABNAM");
                    }
                }
                else
                {
                    this.tABNAMField = value;
                    this.OnPropertyChanged("TABNAM");
                }
            }
        }

        /// <summary>
        /// Client
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string MANDT
        {
            get
            {
                return this.mANDTField;
            }
            set
            {
                if ((this.mANDTField != null))
                {
                    if ((mANDTField.Equals(value) != true))
                    {
                        this.mANDTField = value;
                        this.OnPropertyChanged("MANDT");
                    }
                }
                else
                {
                    this.mANDTField = value;
                    this.OnPropertyChanged("MANDT");
                }
            }
        }

        /// <summary>
        /// IDoc number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string DOCNUM
        {
            get
            {
                return this.dOCNUMField;
            }
            set
            {
                if ((this.dOCNUMField != null))
                {
                    if ((dOCNUMField.Equals(value) != true))
                    {
                        this.dOCNUMField = value;
                        this.OnPropertyChanged("DOCNUM");
                    }
                }
                else
                {
                    this.dOCNUMField = value;
                    this.OnPropertyChanged("DOCNUM");
                }
            }
        }

        /// <summary>
        /// SAP Release for IDoc
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string DOCREL
        {
            get
            {
                return this.dOCRELField;
            }
            set
            {
                if ((this.dOCRELField != null))
                {
                    if ((dOCRELField.Equals(value) != true))
                    {
                        this.dOCRELField = value;
                        this.OnPropertyChanged("DOCREL");
                    }
                }
                else
                {
                    this.dOCRELField = value;
                    this.OnPropertyChanged("DOCREL");
                }
            }
        }

        /// <summary>
        /// Status of IDoc
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string STATUS
        {
            get
            {
                return this.sTATUSField;
            }
            set
            {
                if ((this.sTATUSField != null))
                {
                    if ((sTATUSField.Equals(value) != true))
                    {
                        this.sTATUSField = value;
                        this.OnPropertyChanged("STATUS");
                    }
                }
                else
                {
                    this.sTATUSField = value;
                    this.OnPropertyChanged("STATUS");
                }
            }
        }

        /// <summary>
        /// Direction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public ORDERS05IDOCEDI_DC40DIRECT DIRECT
        {
            get
            {
                return this.dIRECTField;
            }
            set
            {
                if ((dIRECTField.Equals(value) != true))
                {
                    this.dIRECTField = value;
                    this.OnPropertyChanged("DIRECT");
                }
            }
        }

        /// <summary>
        /// Output mode
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string OUTMOD
        {
            get
            {
                return this.oUTMODField;
            }
            set
            {
                if ((this.oUTMODField != null))
                {
                    if ((oUTMODField.Equals(value) != true))
                    {
                        this.oUTMODField = value;
                        this.OnPropertyChanged("OUTMOD");
                    }
                }
                else
                {
                    this.oUTMODField = value;
                    this.OnPropertyChanged("OUTMOD");
                }
            }
        }

        /// <summary>
        /// Overriding in inbound processing
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string EXPRSS
        {
            get
            {
                return this.eXPRSSField;
            }
            set
            {
                if ((this.eXPRSSField != null))
                {
                    if ((eXPRSSField.Equals(value) != true))
                    {
                        this.eXPRSSField = value;
                        this.OnPropertyChanged("EXPRSS");
                    }
                }
                else
                {
                    this.eXPRSSField = value;
                    this.OnPropertyChanged("EXPRSS");
                }
            }
        }

        /// <summary>
        /// Test flag
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string TEST
        {
            get
            {
                return this.tESTField;
            }
            set
            {
                if ((this.tESTField != null))
                {
                    if ((tESTField.Equals(value) != true))
                    {
                        this.tESTField = value;
                        this.OnPropertyChanged("TEST");
                    }
                }
                else
                {
                    this.tESTField = value;
                    this.OnPropertyChanged("TEST");
                }
            }
        }

        /// <summary>
        /// Name of basic type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string IDOCTYP
        {
            get
            {
                return this.iDOCTYPField;
            }
            set
            {
                if ((this.iDOCTYPField != null))
                {
                    if ((iDOCTYPField.Equals(value) != true))
                    {
                        this.iDOCTYPField = value;
                        this.OnPropertyChanged("IDOCTYP");
                    }
                }
                else
                {
                    this.iDOCTYPField = value;
                    this.OnPropertyChanged("IDOCTYP");
                }
            }
        }

        /// <summary>
        /// Extension (defined by customer)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string CIMTYP
        {
            get
            {
                return this.cIMTYPField;
            }
            set
            {
                if ((this.cIMTYPField != null))
                {
                    if ((cIMTYPField.Equals(value) != true))
                    {
                        this.cIMTYPField = value;
                        this.OnPropertyChanged("CIMTYP");
                    }
                }
                else
                {
                    this.cIMTYPField = value;
                    this.OnPropertyChanged("CIMTYP");
                }
            }
        }

        /// <summary>
        /// Message type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MESTYP
        {
            get
            {
                return this.mESTYPField;
            }
            set
            {
                if ((this.mESTYPField != null))
                {
                    if ((mESTYPField.Equals(value) != true))
                    {
                        this.mESTYPField = value;
                        this.OnPropertyChanged("MESTYP");
                    }
                }
                else
                {
                    this.mESTYPField = value;
                    this.OnPropertyChanged("MESTYP");
                }
            }
        }

        /// <summary>
        /// Message code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string MESCOD
        {
            get
            {
                return this.mESCODField;
            }
            set
            {
                if ((this.mESCODField != null))
                {
                    if ((mESCODField.Equals(value) != true))
                    {
                        this.mESCODField = value;
                        this.OnPropertyChanged("MESCOD");
                    }
                }
                else
                {
                    this.mESCODField = value;
                    this.OnPropertyChanged("MESCOD");
                }
            }
        }

        /// <summary>
        /// Message Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string MESFCT
        {
            get
            {
                return this.mESFCTField;
            }
            set
            {
                if ((this.mESFCTField != null))
                {
                    if ((mESFCTField.Equals(value) != true))
                    {
                        this.mESFCTField = value;
                        this.OnPropertyChanged("MESFCT");
                    }
                }
                else
                {
                    this.mESFCTField = value;
                    this.OnPropertyChanged("MESFCT");
                }
            }
        }

        /// <summary>
        /// EDI standard, flag
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string STD
        {
            get
            {
                return this.sTDField;
            }
            set
            {
                if ((this.sTDField != null))
                {
                    if ((sTDField.Equals(value) != true))
                    {
                        this.sTDField = value;
                        this.OnPropertyChanged("STD");
                    }
                }
                else
                {
                    this.sTDField = value;
                    this.OnPropertyChanged("STD");
                }
            }
        }

        /// <summary>
        /// EDI standard, version and release
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string STDVRS
        {
            get
            {
                return this.sTDVRSField;
            }
            set
            {
                if ((this.sTDVRSField != null))
                {
                    if ((sTDVRSField.Equals(value) != true))
                    {
                        this.sTDVRSField = value;
                        this.OnPropertyChanged("STDVRS");
                    }
                }
                else
                {
                    this.sTDVRSField = value;
                    this.OnPropertyChanged("STDVRS");
                }
            }
        }

        /// <summary>
        /// EDI message type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string STDMES
        {
            get
            {
                return this.sTDMESField;
            }
            set
            {
                if ((this.sTDMESField != null))
                {
                    if ((sTDMESField.Equals(value) != true))
                    {
                        this.sTDMESField = value;
                        this.OnPropertyChanged("STDMES");
                    }
                }
                else
                {
                    this.sTDMESField = value;
                    this.OnPropertyChanged("STDMES");
                }
            }
        }

        /// <summary>
        /// Sender port (SAP System, external subsystem)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string SNDPOR
        {
            get
            {
                return this.sNDPORField;
            }
            set
            {
                if ((this.sNDPORField != null))
                {
                    if ((sNDPORField.Equals(value) != true))
                    {
                        this.sNDPORField = value;
                        this.OnPropertyChanged("SNDPOR");
                    }
                }
                else
                {
                    this.sNDPORField = value;
                    this.OnPropertyChanged("SNDPOR");
                }
            }
        }

        /// <summary>
        /// Partner type of sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string SNDPRT
        {
            get
            {
                return this.sNDPRTField;
            }
            set
            {
                if ((this.sNDPRTField != null))
                {
                    if ((sNDPRTField.Equals(value) != true))
                    {
                        this.sNDPRTField = value;
                        this.OnPropertyChanged("SNDPRT");
                    }
                }
                else
                {
                    this.sNDPRTField = value;
                    this.OnPropertyChanged("SNDPRT");
                }
            }
        }

        /// <summary>
        /// Partner Function of Sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string SNDPFC
        {
            get
            {
                return this.sNDPFCField;
            }
            set
            {
                if ((this.sNDPFCField != null))
                {
                    if ((sNDPFCField.Equals(value) != true))
                    {
                        this.sNDPFCField = value;
                        this.OnPropertyChanged("SNDPFC");
                    }
                }
                else
                {
                    this.sNDPFCField = value;
                    this.OnPropertyChanged("SNDPFC");
                }
            }
        }

        /// <summary>
        /// Partner Number of Sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string SNDPRN
        {
            get
            {
                return this.sNDPRNField;
            }
            set
            {
                if ((this.sNDPRNField != null))
                {
                    if ((sNDPRNField.Equals(value) != true))
                    {
                        this.sNDPRNField = value;
                        this.OnPropertyChanged("SNDPRN");
                    }
                }
                else
                {
                    this.sNDPRNField = value;
                    this.OnPropertyChanged("SNDPRN");
                }
            }
        }

        /// <summary>
        /// Sender address (SADR)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string SNDSAD
        {
            get
            {
                return this.sNDSADField;
            }
            set
            {
                if ((this.sNDSADField != null))
                {
                    if ((sNDSADField.Equals(value) != true))
                    {
                        this.sNDSADField = value;
                        this.OnPropertyChanged("SNDSAD");
                    }
                }
                else
                {
                    this.sNDSADField = value;
                    this.OnPropertyChanged("SNDSAD");
                }
            }
        }

        /// <summary>
        /// Logical address of sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string SNDLAD
        {
            get
            {
                return this.sNDLADField;
            }
            set
            {
                if ((this.sNDLADField != null))
                {
                    if ((sNDLADField.Equals(value) != true))
                    {
                        this.sNDLADField = value;
                        this.OnPropertyChanged("SNDLAD");
                    }
                }
                else
                {
                    this.sNDLADField = value;
                    this.OnPropertyChanged("SNDLAD");
                }
            }
        }

        /// <summary>
        /// Receiver port
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string RCVPOR
        {
            get
            {
                return this.rCVPORField;
            }
            set
            {
                if ((this.rCVPORField != null))
                {
                    if ((rCVPORField.Equals(value) != true))
                    {
                        this.rCVPORField = value;
                        this.OnPropertyChanged("RCVPOR");
                    }
                }
                else
                {
                    this.rCVPORField = value;
                    this.OnPropertyChanged("RCVPOR");
                }
            }
        }

        /// <summary>
        /// Partner Type of Receiver
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string RCVPRT
        {
            get
            {
                return this.rCVPRTField;
            }
            set
            {
                if ((this.rCVPRTField != null))
                {
                    if ((rCVPRTField.Equals(value) != true))
                    {
                        this.rCVPRTField = value;
                        this.OnPropertyChanged("RCVPRT");
                    }
                }
                else
                {
                    this.rCVPRTField = value;
                    this.OnPropertyChanged("RCVPRT");
                }
            }
        }

        /// <summary>
        /// Partner function of recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string RCVPFC
        {
            get
            {
                return this.rCVPFCField;
            }
            set
            {
                if ((this.rCVPFCField != null))
                {
                    if ((rCVPFCField.Equals(value) != true))
                    {
                        this.rCVPFCField = value;
                        this.OnPropertyChanged("RCVPFC");
                    }
                }
                else
                {
                    this.rCVPFCField = value;
                    this.OnPropertyChanged("RCVPFC");
                }
            }
        }

        /// <summary>
        /// Partner Number of Receiver
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string RCVPRN
        {
            get
            {
                return this.rCVPRNField;
            }
            set
            {
                if ((this.rCVPRNField != null))
                {
                    if ((rCVPRNField.Equals(value) != true))
                    {
                        this.rCVPRNField = value;
                        this.OnPropertyChanged("RCVPRN");
                    }
                }
                else
                {
                    this.rCVPRNField = value;
                    this.OnPropertyChanged("RCVPRN");
                }
            }
        }

        /// <summary>
        /// Recipient address (SADR)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string RCVSAD
        {
            get
            {
                return this.rCVSADField;
            }
            set
            {
                if ((this.rCVSADField != null))
                {
                    if ((rCVSADField.Equals(value) != true))
                    {
                        this.rCVSADField = value;
                        this.OnPropertyChanged("RCVSAD");
                    }
                }
                else
                {
                    this.rCVSADField = value;
                    this.OnPropertyChanged("RCVSAD");
                }
            }
        }

        /// <summary>
        /// Logical address of recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string RCVLAD
        {
            get
            {
                return this.rCVLADField;
            }
            set
            {
                if ((this.rCVLADField != null))
                {
                    if ((rCVLADField.Equals(value) != true))
                    {
                        this.rCVLADField = value;
                        this.OnPropertyChanged("RCVLAD");
                    }
                }
                else
                {
                    this.rCVLADField = value;
                    this.OnPropertyChanged("RCVLAD");
                }
            }
        }

        /// <summary>
        /// Created on
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string CREDAT
        {
            get
            {
                return this.cREDATField;
            }
            set
            {
                if ((this.cREDATField != null))
                {
                    if ((cREDATField.Equals(value) != true))
                    {
                        this.cREDATField = value;
                        this.OnPropertyChanged("CREDAT");
                    }
                }
                else
                {
                    this.cREDATField = value;
                    this.OnPropertyChanged("CREDAT");
                }
            }
        }

        /// <summary>
        /// Created at
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string CRETIM
        {
            get
            {
                return this.cRETIMField;
            }
            set
            {
                if ((this.cRETIMField != null))
                {
                    if ((cRETIMField.Equals(value) != true))
                    {
                        this.cRETIMField = value;
                        this.OnPropertyChanged("CRETIM");
                    }
                }
                else
                {
                    this.cRETIMField = value;
                    this.OnPropertyChanged("CRETIM");
                }
            }
        }

        /// <summary>
        /// Transmission file (EDI Interchange)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string REFINT
        {
            get
            {
                return this.rEFINTField;
            }
            set
            {
                if ((this.rEFINTField != null))
                {
                    if ((rEFINTField.Equals(value) != true))
                    {
                        this.rEFINTField = value;
                        this.OnPropertyChanged("REFINT");
                    }
                }
                else
                {
                    this.rEFINTField = value;
                    this.OnPropertyChanged("REFINT");
                }
            }
        }

        /// <summary>
        /// Message group (EDI Message Group)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string REFGRP
        {
            get
            {
                return this.rEFGRPField;
            }
            set
            {
                if ((this.rEFGRPField != null))
                {
                    if ((rEFGRPField.Equals(value) != true))
                    {
                        this.rEFGRPField = value;
                        this.OnPropertyChanged("REFGRP");
                    }
                }
                else
                {
                    this.rEFGRPField = value;
                    this.OnPropertyChanged("REFGRP");
                }
            }
        }

        /// <summary>
        /// Message (EDI Message)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string REFMES
        {
            get
            {
                return this.rEFMESField;
            }
            set
            {
                if ((this.rEFMESField != null))
                {
                    if ((rEFMESField.Equals(value) != true))
                    {
                        this.rEFMESField = value;
                        this.OnPropertyChanged("REFMES");
                    }
                }
                else
                {
                    this.rEFMESField = value;
                    this.OnPropertyChanged("REFMES");
                }
            }
        }

        /// <summary>
        /// Key for external message archive
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string ARCKEY
        {
            get
            {
                return this.aRCKEYField;
            }
            set
            {
                if ((this.aRCKEYField != null))
                {
                    if ((aRCKEYField.Equals(value) != true))
                    {
                        this.aRCKEYField = value;
                        this.OnPropertyChanged("ARCKEY");
                    }
                }
                else
                {
                    this.aRCKEYField = value;
                    this.OnPropertyChanged("ARCKEY");
                }
            }
        }

        /// <summary>
        /// Serialization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string SERIAL
        {
            get
            {
                return this.sERIALField;
            }
            set
            {
                if ((this.sERIALField != null))
                {
                    if ((sERIALField.Equals(value) != true))
                    {
                        this.sERIALField = value;
                        this.OnPropertyChanged("SERIAL");
                    }
                }
                else
                {
                    this.sERIALField = value;
                    this.OnPropertyChanged("SERIAL");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCEDI_DC40SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCEDI_DC40));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TABNAMSpecified
        {
            get
            {
                return tABNAMFieldSpecified;
            }
            set
            {
                tABNAMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MANDTSpecified
        {
            get
            {
                return mANDTFieldSpecified;
            }
            set
            {
                mANDTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DOCNUMSpecified
        {
            get
            {
                return dOCNUMFieldSpecified;
            }
            set
            {
                dOCNUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DOCRELSpecified
        {
            get
            {
                return dOCRELFieldSpecified;
            }
            set
            {
                dOCRELFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STATUSSpecified
        {
            get
            {
                return sTATUSFieldSpecified;
            }
            set
            {
                sTATUSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DIRECTSpecified
        {
            get
            {
                return dIRECTFieldSpecified;
            }
            set
            {
                dIRECTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OUTMODSpecified
        {
            get
            {
                return oUTMODFieldSpecified;
            }
            set
            {
                oUTMODFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXPRSSSpecified
        {
            get
            {
                return eXPRSSFieldSpecified;
            }
            set
            {
                eXPRSSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TESTSpecified
        {
            get
            {
                return tESTFieldSpecified;
            }
            set
            {
                tESTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IDOCTYPSpecified
        {
            get
            {
                return iDOCTYPFieldSpecified;
            }
            set
            {
                iDOCTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CIMTYPSpecified
        {
            get
            {
                return cIMTYPFieldSpecified;
            }
            set
            {
                cIMTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MESTYPSpecified
        {
            get
            {
                return mESTYPFieldSpecified;
            }
            set
            {
                mESTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MESCODSpecified
        {
            get
            {
                return mESCODFieldSpecified;
            }
            set
            {
                mESCODFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MESFCTSpecified
        {
            get
            {
                return mESFCTFieldSpecified;
            }
            set
            {
                mESFCTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STDSpecified
        {
            get
            {
                return sTDFieldSpecified;
            }
            set
            {
                sTDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STDVRSSpecified
        {
            get
            {
                return sTDVRSFieldSpecified;
            }
            set
            {
                sTDVRSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STDMESSpecified
        {
            get
            {
                return sTDMESFieldSpecified;
            }
            set
            {
                sTDMESFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDPORSpecified
        {
            get
            {
                return sNDPORFieldSpecified;
            }
            set
            {
                sNDPORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDPRTSpecified
        {
            get
            {
                return sNDPRTFieldSpecified;
            }
            set
            {
                sNDPRTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDPFCSpecified
        {
            get
            {
                return sNDPFCFieldSpecified;
            }
            set
            {
                sNDPFCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDPRNSpecified
        {
            get
            {
                return sNDPRNFieldSpecified;
            }
            set
            {
                sNDPRNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDSADSpecified
        {
            get
            {
                return sNDSADFieldSpecified;
            }
            set
            {
                sNDSADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SNDLADSpecified
        {
            get
            {
                return sNDLADFieldSpecified;
            }
            set
            {
                sNDLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVPORSpecified
        {
            get
            {
                return rCVPORFieldSpecified;
            }
            set
            {
                rCVPORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVPRTSpecified
        {
            get
            {
                return rCVPRTFieldSpecified;
            }
            set
            {
                rCVPRTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVPFCSpecified
        {
            get
            {
                return rCVPFCFieldSpecified;
            }
            set
            {
                rCVPFCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVPRNSpecified
        {
            get
            {
                return rCVPRNFieldSpecified;
            }
            set
            {
                rCVPRNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVSADSpecified
        {
            get
            {
                return rCVSADFieldSpecified;
            }
            set
            {
                rCVSADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RCVLADSpecified
        {
            get
            {
                return rCVLADFieldSpecified;
            }
            set
            {
                rCVLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CREDATSpecified
        {
            get
            {
                return cREDATFieldSpecified;
            }
            set
            {
                cREDATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CRETIMSpecified
        {
            get
            {
                return cRETIMFieldSpecified;
            }
            set
            {
                cRETIMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REFINTSpecified
        {
            get
            {
                return rEFINTFieldSpecified;
            }
            set
            {
                rEFINTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REFGRPSpecified
        {
            get
            {
                return rEFGRPFieldSpecified;
            }
            set
            {
                rEFGRPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REFMESSpecified
        {
            get
            {
                return rEFMESFieldSpecified;
            }
            set
            {
                rEFMESFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ARCKEYSpecified
        {
            get
            {
                return aRCKEYFieldSpecified;
            }
            set
            {
                aRCKEYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SERIALSpecified
        {
            get
            {
                return sERIALFieldSpecified;
            }
            set
            {
                sERIALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCEDI_DC40 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCEDI_DC40 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCEDI_DC40 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCEDI_DC40);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCEDI_DC40 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCEDI_DC40 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCEDI_DC40)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCEDI_DC40 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCEDI_DC40 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCEDI_DC40 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCEDI_DC40);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCEDI_DC40 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCEDI_DC40 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCEDI_DC40 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCEDI_DC40DIRECT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCEDI_DC40SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document header general data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK01 : System.ComponentModel.INotifyPropertyChanged
    {

        private string aCTIONField;

        private string kZABSField;

        private string cURCYField;

        private string hWAERField;

        private string wKURSField;

        private string zTERMField;

        private string kUNDEUINRField;

        private string eIGENUINRField;

        private string bSARTField;

        private string bELNRField;

        private string nTGEWField;

        private string bRGEWField;

        private string gEWEIField;

        private string fKART_RLField;

        private string aBLADField;

        private string bSTZDField;

        private string vSARTField;

        private string vSART_BEZField;

        private string rECIPNT_NOField;

        private string kZAZUField;

        private string aUTLFField;

        private string aUGRUField;

        private string aUGRU_BEZField;

        private string aBRVWField;

        private string aBRVW_BEZField;

        private string fKTYPField;

        private string lIFSKField;

        private string lIFSK_BEZField;

        private string eMPSTField;

        private string aBTNRField;

        private string dELCOField;

        private string wKURS_MField;

        private ORDERS05IDOCE1EDK01SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool aCTIONFieldSpecified;

        private bool kZABSFieldSpecified;

        private bool cURCYFieldSpecified;

        private bool hWAERFieldSpecified;

        private bool wKURSFieldSpecified;

        private bool zTERMFieldSpecified;

        private bool kUNDEUINRFieldSpecified;

        private bool eIGENUINRFieldSpecified;

        private bool bSARTFieldSpecified;

        private bool bELNRFieldSpecified;

        private bool nTGEWFieldSpecified;

        private bool bRGEWFieldSpecified;

        private bool gEWEIFieldSpecified;

        private bool fKART_RLFieldSpecified;

        private bool aBLADFieldSpecified;

        private bool bSTZDFieldSpecified;

        private bool vSARTFieldSpecified;

        private bool vSART_BEZFieldSpecified;

        private bool rECIPNT_NOFieldSpecified;

        private bool kZAZUFieldSpecified;

        private bool aUTLFFieldSpecified;

        private bool aUGRUFieldSpecified;

        private bool aUGRU_BEZFieldSpecified;

        private bool aBRVWFieldSpecified;

        private bool aBRVW_BEZFieldSpecified;

        private bool fKTYPFieldSpecified;

        private bool lIFSKFieldSpecified;

        private bool lIFSK_BEZFieldSpecified;

        private bool eMPSTFieldSpecified;

        private bool aBTNRFieldSpecified;

        private bool dELCOFieldSpecified;

        private bool wKURS_MFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Action code for the whole EDI message
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ACTION
        {
            get
            {
                return this.aCTIONField;
            }
            set
            {
                if ((this.aCTIONField != null))
                {
                    if ((aCTIONField.Equals(value) != true))
                    {
                        this.aCTIONField = value;
                        this.OnPropertyChanged("ACTION");
                    }
                }
                else
                {
                    this.aCTIONField = value;
                    this.OnPropertyChanged("ACTION");
                }
            }
        }

        /// <summary>
        /// Flag: order acknowledgment required
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string KZABS
        {
            get
            {
                return this.kZABSField;
            }
            set
            {
                if ((this.kZABSField != null))
                {
                    if ((kZABSField.Equals(value) != true))
                    {
                        this.kZABSField = value;
                        this.OnPropertyChanged("KZABS");
                    }
                }
                else
                {
                    this.kZABSField = value;
                    this.OnPropertyChanged("KZABS");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CURCY
        {
            get
            {
                return this.cURCYField;
            }
            set
            {
                if ((this.cURCYField != null))
                {
                    if ((cURCYField.Equals(value) != true))
                    {
                        this.cURCYField = value;
                        this.OnPropertyChanged("CURCY");
                    }
                }
                else
                {
                    this.cURCYField = value;
                    this.OnPropertyChanged("CURCY");
                }
            }
        }

        /// <summary>
        /// EDI local currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string HWAER
        {
            get
            {
                return this.hWAERField;
            }
            set
            {
                if ((this.hWAERField != null))
                {
                    if ((hWAERField.Equals(value) != true))
                    {
                        this.hWAERField = value;
                        this.OnPropertyChanged("HWAER");
                    }
                }
                else
                {
                    this.hWAERField = value;
                    this.OnPropertyChanged("HWAER");
                }
            }
        }

        /// <summary>
        /// Exchange rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string WKURS
        {
            get
            {
                return this.wKURSField;
            }
            set
            {
                if ((this.wKURSField != null))
                {
                    if ((wKURSField.Equals(value) != true))
                    {
                        this.wKURSField = value;
                        this.OnPropertyChanged("WKURS");
                    }
                }
                else
                {
                    this.wKURSField = value;
                    this.OnPropertyChanged("WKURS");
                }
            }
        }

        /// <summary>
        /// Terms of payment key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string ZTERM
        {
            get
            {
                return this.zTERMField;
            }
            set
            {
                if ((this.zTERMField != null))
                {
                    if ((zTERMField.Equals(value) != true))
                    {
                        this.zTERMField = value;
                        this.OnPropertyChanged("ZTERM");
                    }
                }
                else
                {
                    this.zTERMField = value;
                    this.OnPropertyChanged("ZTERM");
                }
            }
        }

        /// <summary>
        /// VAT Registration Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string KUNDEUINR
        {
            get
            {
                return this.kUNDEUINRField;
            }
            set
            {
                if ((this.kUNDEUINRField != null))
                {
                    if ((kUNDEUINRField.Equals(value) != true))
                    {
                        this.kUNDEUINRField = value;
                        this.OnPropertyChanged("KUNDEUINR");
                    }
                }
                else
                {
                    this.kUNDEUINRField = value;
                    this.OnPropertyChanged("KUNDEUINR");
                }
            }
        }

        /// <summary>
        /// VAT Registration Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string EIGENUINR
        {
            get
            {
                return this.eIGENUINRField;
            }
            set
            {
                if ((this.eIGENUINRField != null))
                {
                    if ((eIGENUINRField.Equals(value) != true))
                    {
                        this.eIGENUINRField = value;
                        this.OnPropertyChanged("EIGENUINR");
                    }
                }
                else
                {
                    this.eIGENUINRField = value;
                    this.OnPropertyChanged("EIGENUINR");
                }
            }
        }

        /// <summary>
        /// Document type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string BSART
        {
            get
            {
                return this.bSARTField;
            }
            set
            {
                if ((this.bSARTField != null))
                {
                    if ((bSARTField.Equals(value) != true))
                    {
                        this.bSARTField = value;
                        this.OnPropertyChanged("BSART");
                    }
                }
                else
                {
                    this.bSARTField = value;
                    this.OnPropertyChanged("BSART");
                }
            }
        }

        /// <summary>
        /// IDOC document number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string BELNR
        {
            get
            {
                return this.bELNRField;
            }
            set
            {
                if ((this.bELNRField != null))
                {
                    if ((bELNRField.Equals(value) != true))
                    {
                        this.bELNRField = value;
                        this.OnPropertyChanged("BELNR");
                    }
                }
                else
                {
                    this.bELNRField = value;
                    this.OnPropertyChanged("BELNR");
                }
            }
        }

        /// <summary>
        /// Net weight
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string NTGEW
        {
            get
            {
                return this.nTGEWField;
            }
            set
            {
                if ((this.nTGEWField != null))
                {
                    if ((nTGEWField.Equals(value) != true))
                    {
                        this.nTGEWField = value;
                        this.OnPropertyChanged("NTGEW");
                    }
                }
                else
                {
                    this.nTGEWField = value;
                    this.OnPropertyChanged("NTGEW");
                }
            }
        }

        /// <summary>
        /// Net weight
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string BRGEW
        {
            get
            {
                return this.bRGEWField;
            }
            set
            {
                if ((this.bRGEWField != null))
                {
                    if ((bRGEWField.Equals(value) != true))
                    {
                        this.bRGEWField = value;
                        this.OnPropertyChanged("BRGEW");
                    }
                }
                else
                {
                    this.bRGEWField = value;
                    this.OnPropertyChanged("BRGEW");
                }
            }
        }

        /// <summary>
        /// Weight unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string GEWEI
        {
            get
            {
                return this.gEWEIField;
            }
            set
            {
                if ((this.gEWEIField != null))
                {
                    if ((gEWEIField.Equals(value) != true))
                    {
                        this.gEWEIField = value;
                        this.OnPropertyChanged("GEWEI");
                    }
                }
                else
                {
                    this.gEWEIField = value;
                    this.OnPropertyChanged("GEWEI");
                }
            }
        }

        /// <summary>
        /// Invoice list type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string FKART_RL
        {
            get
            {
                return this.fKART_RLField;
            }
            set
            {
                if ((this.fKART_RLField != null))
                {
                    if ((fKART_RLField.Equals(value) != true))
                    {
                        this.fKART_RLField = value;
                        this.OnPropertyChanged("FKART_RL");
                    }
                }
                else
                {
                    this.fKART_RLField = value;
                    this.OnPropertyChanged("FKART_RL");
                }
            }
        }

        /// <summary>
        /// Unloading Point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string ABLAD
        {
            get
            {
                return this.aBLADField;
            }
            set
            {
                if ((this.aBLADField != null))
                {
                    if ((aBLADField.Equals(value) != true))
                    {
                        this.aBLADField = value;
                        this.OnPropertyChanged("ABLAD");
                    }
                }
                else
                {
                    this.aBLADField = value;
                    this.OnPropertyChanged("ABLAD");
                }
            }
        }

        /// <summary>
        /// Purchase order number supplement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string BSTZD
        {
            get
            {
                return this.bSTZDField;
            }
            set
            {
                if ((this.bSTZDField != null))
                {
                    if ((bSTZDField.Equals(value) != true))
                    {
                        this.bSTZDField = value;
                        this.OnPropertyChanged("BSTZD");
                    }
                }
                else
                {
                    this.bSTZDField = value;
                    this.OnPropertyChanged("BSTZD");
                }
            }
        }

        /// <summary>
        /// Shipping Conditions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string VSART
        {
            get
            {
                return this.vSARTField;
            }
            set
            {
                if ((this.vSARTField != null))
                {
                    if ((vSARTField.Equals(value) != true))
                    {
                        this.vSARTField = value;
                        this.OnPropertyChanged("VSART");
                    }
                }
                else
                {
                    this.vSARTField = value;
                    this.OnPropertyChanged("VSART");
                }
            }
        }

        /// <summary>
        /// Description of the Shipping Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string VSART_BEZ
        {
            get
            {
                return this.vSART_BEZField;
            }
            set
            {
                if ((this.vSART_BEZField != null))
                {
                    if ((vSART_BEZField.Equals(value) != true))
                    {
                        this.vSART_BEZField = value;
                        this.OnPropertyChanged("VSART_BEZ");
                    }
                }
                else
                {
                    this.vSART_BEZField = value;
                    this.OnPropertyChanged("VSART_BEZ");
                }
            }
        }

        /// <summary>
        /// Number of recipient (for control via the ALE model)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string RECIPNT_NO
        {
            get
            {
                return this.rECIPNT_NOField;
            }
            set
            {
                if ((this.rECIPNT_NOField != null))
                {
                    if ((rECIPNT_NOField.Equals(value) != true))
                    {
                        this.rECIPNT_NOField = value;
                        this.OnPropertyChanged("RECIPNT_NO");
                    }
                }
                else
                {
                    this.rECIPNT_NOField = value;
                    this.OnPropertyChanged("RECIPNT_NO");
                }
            }
        }

        /// <summary>
        /// Order Combination Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string KZAZU
        {
            get
            {
                return this.kZAZUField;
            }
            set
            {
                if ((this.kZAZUField != null))
                {
                    if ((kZAZUField.Equals(value) != true))
                    {
                        this.kZAZUField = value;
                        this.OnPropertyChanged("KZAZU");
                    }
                }
                else
                {
                    this.kZAZUField = value;
                    this.OnPropertyChanged("KZAZU");
                }
            }
        }

        /// <summary>
        /// Complete delivery defined for each sales order?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string AUTLF
        {
            get
            {
                return this.aUTLFField;
            }
            set
            {
                if ((this.aUTLFField != null))
                {
                    if ((aUTLFField.Equals(value) != true))
                    {
                        this.aUTLFField = value;
                        this.OnPropertyChanged("AUTLF");
                    }
                }
                else
                {
                    this.aUTLFField = value;
                    this.OnPropertyChanged("AUTLF");
                }
            }
        }

        /// <summary>
        /// Order reason (reason for the business transaction)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string AUGRU
        {
            get
            {
                return this.aUGRUField;
            }
            set
            {
                if ((this.aUGRUField != null))
                {
                    if ((aUGRUField.Equals(value) != true))
                    {
                        this.aUGRUField = value;
                        this.OnPropertyChanged("AUGRU");
                    }
                }
                else
                {
                    this.aUGRUField = value;
                    this.OnPropertyChanged("AUGRU");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string AUGRU_BEZ
        {
            get
            {
                return this.aUGRU_BEZField;
            }
            set
            {
                if ((this.aUGRU_BEZField != null))
                {
                    if ((aUGRU_BEZField.Equals(value) != true))
                    {
                        this.aUGRU_BEZField = value;
                        this.OnPropertyChanged("AUGRU_BEZ");
                    }
                }
                else
                {
                    this.aUGRU_BEZField = value;
                    this.OnPropertyChanged("AUGRU_BEZ");
                }
            }
        }

        /// <summary>
        /// Usage Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string ABRVW
        {
            get
            {
                return this.aBRVWField;
            }
            set
            {
                if ((this.aBRVWField != null))
                {
                    if ((aBRVWField.Equals(value) != true))
                    {
                        this.aBRVWField = value;
                        this.OnPropertyChanged("ABRVW");
                    }
                }
                else
                {
                    this.aBRVWField = value;
                    this.OnPropertyChanged("ABRVW");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string ABRVW_BEZ
        {
            get
            {
                return this.aBRVW_BEZField;
            }
            set
            {
                if ((this.aBRVW_BEZField != null))
                {
                    if ((aBRVW_BEZField.Equals(value) != true))
                    {
                        this.aBRVW_BEZField = value;
                        this.OnPropertyChanged("ABRVW_BEZ");
                    }
                }
                else
                {
                    this.aBRVW_BEZField = value;
                    this.OnPropertyChanged("ABRVW_BEZ");
                }
            }
        }

        /// <summary>
        /// Billing category
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string FKTYP
        {
            get
            {
                return this.fKTYPField;
            }
            set
            {
                if ((this.fKTYPField != null))
                {
                    if ((fKTYPField.Equals(value) != true))
                    {
                        this.fKTYPField = value;
                        this.OnPropertyChanged("FKTYP");
                    }
                }
                else
                {
                    this.fKTYPField = value;
                    this.OnPropertyChanged("FKTYP");
                }
            }
        }

        /// <summary>
        /// Delivery block (document header)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string LIFSK
        {
            get
            {
                return this.lIFSKField;
            }
            set
            {
                if ((this.lIFSKField != null))
                {
                    if ((lIFSKField.Equals(value) != true))
                    {
                        this.lIFSKField = value;
                        this.OnPropertyChanged("LIFSK");
                    }
                }
                else
                {
                    this.lIFSKField = value;
                    this.OnPropertyChanged("LIFSK");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string LIFSK_BEZ
        {
            get
            {
                return this.lIFSK_BEZField;
            }
            set
            {
                if ((this.lIFSK_BEZField != null))
                {
                    if ((lIFSK_BEZField.Equals(value) != true))
                    {
                        this.lIFSK_BEZField = value;
                        this.OnPropertyChanged("LIFSK_BEZ");
                    }
                }
                else
                {
                    this.lIFSK_BEZField = value;
                    this.OnPropertyChanged("LIFSK_BEZ");
                }
            }
        }

        /// <summary>
        /// Receiving point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string EMPST
        {
            get
            {
                return this.eMPSTField;
            }
            set
            {
                if ((this.eMPSTField != null))
                {
                    if ((eMPSTField.Equals(value) != true))
                    {
                        this.eMPSTField = value;
                        this.OnPropertyChanged("EMPST");
                    }
                }
                else
                {
                    this.eMPSTField = value;
                    this.OnPropertyChanged("EMPST");
                }
            }
        }

        /// <summary>
        /// Department number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string ABTNR
        {
            get
            {
                return this.aBTNRField;
            }
            set
            {
                if ((this.aBTNRField != null))
                {
                    if ((aBTNRField.Equals(value) != true))
                    {
                        this.aBTNRField = value;
                        this.OnPropertyChanged("ABTNR");
                    }
                }
                else
                {
                    this.aBTNRField = value;
                    this.OnPropertyChanged("ABTNR");
                }
            }
        }

        /// <summary>
        /// Agreed delivery time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string DELCO
        {
            get
            {
                return this.dELCOField;
            }
            set
            {
                if ((this.dELCOField != null))
                {
                    if ((dELCOField.Equals(value) != true))
                    {
                        this.dELCOField = value;
                        this.OnPropertyChanged("DELCO");
                    }
                }
                else
                {
                    this.dELCOField = value;
                    this.OnPropertyChanged("DELCO");
                }
            }
        }

        /// <summary>
        /// Indirectly quoted exchange rate in an IDoc segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string WKURS_M
        {
            get
            {
                return this.wKURS_MField;
            }
            set
            {
                if ((this.wKURS_MField != null))
                {
                    if ((wKURS_MField.Equals(value) != true))
                    {
                        this.wKURS_MField = value;
                        this.OnPropertyChanged("WKURS_M");
                    }
                }
                else
                {
                    this.wKURS_MField = value;
                    this.OnPropertyChanged("WKURS_M");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK01SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK01));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool ACTIONSpecified
        {
            get
            {
                return aCTIONFieldSpecified;
            }
            set
            {
                aCTIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KZABSSpecified
        {
            get
            {
                return kZABSFieldSpecified;
            }
            set
            {
                kZABSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CURCYSpecified
        {
            get
            {
                return cURCYFieldSpecified;
            }
            set
            {
                cURCYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HWAERSpecified
        {
            get
            {
                return hWAERFieldSpecified;
            }
            set
            {
                hWAERFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WKURSSpecified
        {
            get
            {
                return wKURSFieldSpecified;
            }
            set
            {
                wKURSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZTERMSpecified
        {
            get
            {
                return zTERMFieldSpecified;
            }
            set
            {
                zTERMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KUNDEUINRSpecified
        {
            get
            {
                return kUNDEUINRFieldSpecified;
            }
            set
            {
                kUNDEUINRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EIGENUINRSpecified
        {
            get
            {
                return eIGENUINRFieldSpecified;
            }
            set
            {
                eIGENUINRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BSARTSpecified
        {
            get
            {
                return bSARTFieldSpecified;
            }
            set
            {
                bSARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BELNRSpecified
        {
            get
            {
                return bELNRFieldSpecified;
            }
            set
            {
                bELNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NTGEWSpecified
        {
            get
            {
                return nTGEWFieldSpecified;
            }
            set
            {
                nTGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BRGEWSpecified
        {
            get
            {
                return bRGEWFieldSpecified;
            }
            set
            {
                bRGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GEWEISpecified
        {
            get
            {
                return gEWEIFieldSpecified;
            }
            set
            {
                gEWEIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FKART_RLSpecified
        {
            get
            {
                return fKART_RLFieldSpecified;
            }
            set
            {
                fKART_RLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABLADSpecified
        {
            get
            {
                return aBLADFieldSpecified;
            }
            set
            {
                aBLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BSTZDSpecified
        {
            get
            {
                return bSTZDFieldSpecified;
            }
            set
            {
                bSTZDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VSARTSpecified
        {
            get
            {
                return vSARTFieldSpecified;
            }
            set
            {
                vSARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VSART_BEZSpecified
        {
            get
            {
                return vSART_BEZFieldSpecified;
            }
            set
            {
                vSART_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RECIPNT_NOSpecified
        {
            get
            {
                return rECIPNT_NOFieldSpecified;
            }
            set
            {
                rECIPNT_NOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KZAZUSpecified
        {
            get
            {
                return kZAZUFieldSpecified;
            }
            set
            {
                kZAZUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUTLFSpecified
        {
            get
            {
                return aUTLFFieldSpecified;
            }
            set
            {
                aUTLFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUGRUSpecified
        {
            get
            {
                return aUGRUFieldSpecified;
            }
            set
            {
                aUGRUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUGRU_BEZSpecified
        {
            get
            {
                return aUGRU_BEZFieldSpecified;
            }
            set
            {
                aUGRU_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABRVWSpecified
        {
            get
            {
                return aBRVWFieldSpecified;
            }
            set
            {
                aBRVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABRVW_BEZSpecified
        {
            get
            {
                return aBRVW_BEZFieldSpecified;
            }
            set
            {
                aBRVW_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FKTYPSpecified
        {
            get
            {
                return fKTYPFieldSpecified;
            }
            set
            {
                fKTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LIFSKSpecified
        {
            get
            {
                return lIFSKFieldSpecified;
            }
            set
            {
                lIFSKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LIFSK_BEZSpecified
        {
            get
            {
                return lIFSK_BEZFieldSpecified;
            }
            set
            {
                lIFSK_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EMPSTSpecified
        {
            get
            {
                return eMPSTFieldSpecified;
            }
            set
            {
                eMPSTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABTNRSpecified
        {
            get
            {
                return aBTNRFieldSpecified;
            }
            set
            {
                aBTNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DELCOSpecified
        {
            get
            {
                return dELCOFieldSpecified;
            }
            set
            {
                dELCOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WKURS_MSpecified
        {
            get
            {
                return wKURS_MFieldSpecified;
            }
            set
            {
                wKURS_MFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK01 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK01 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK01);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK01 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK01 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK01)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK01 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK01 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK01);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK01 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK01 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK01 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK01 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK01SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Organizational Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK14 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string oRGIDField;

        private ORDERS05IDOCE1EDK14SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool oRGIDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifer organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ORGID
        {
            get
            {
                return this.oRGIDField;
            }
            set
            {
                if ((this.oRGIDField != null))
                {
                    if ((oRGIDField.Equals(value) != true))
                    {
                        this.oRGIDField = value;
                        this.OnPropertyChanged("ORGID");
                    }
                }
                else
                {
                    this.oRGIDField = value;
                    this.OnPropertyChanged("ORGID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK14SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK14));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORGIDSpecified
        {
            get
            {
                return oRGIDFieldSpecified;
            }
            set
            {
                oRGIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK14 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK14 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK14 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK14 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK14);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK14 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK14 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK14)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK14 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK14 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK14 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK14 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK14);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK14 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK14 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK14 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK14 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK14SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document header date segment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK03 : System.ComponentModel.INotifyPropertyChanged
    {

        private string iDDATField;

        private string dATUMField;

        private string uZEITField;

        private ORDERS05IDOCE1EDK03SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iDDATFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for IDOC date segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string IDDAT
        {
            get
            {
                return this.iDDATField;
            }
            set
            {
                if ((this.iDDATField != null))
                {
                    if ((iDDATField.Equals(value) != true))
                    {
                        this.iDDATField = value;
                        this.OnPropertyChanged("IDDAT");
                    }
                }
                else
                {
                    this.iDDATField = value;
                    this.OnPropertyChanged("IDDAT");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK03SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK03));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool IDDATSpecified
        {
            get
            {
                return iDDATFieldSpecified;
            }
            set
            {
                iDDATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK03 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK03 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK03);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK03 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK03 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK03)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK03 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK03 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK03);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK03 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK03 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK03 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK03 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK03SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document header taxes
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK04 : System.ComponentModel.INotifyPropertyChanged
    {

        private string mWSKZField;

        private string mSATZField;

        private string mWSBTField;

        private string tXJCDField;

        private string kTEXTField;

        private ORDERS05IDOCE1EDK04SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool mWSBTFieldSpecified;

        private bool tXJCDFieldSpecified;

        private bool kTEXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        /// <summary>
        /// Value added tax amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string MWSBT
        {
            get
            {
                return this.mWSBTField;
            }
            set
            {
                if ((this.mWSBTField != null))
                {
                    if ((mWSBTField.Equals(value) != true))
                    {
                        this.mWSBTField = value;
                        this.OnPropertyChanged("MWSBT");
                    }
                }
                else
                {
                    this.mWSBTField = value;
                    this.OnPropertyChanged("MWSBT");
                }
            }
        }

        /// <summary>
        /// Tax Jurisdiction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TXJCD
        {
            get
            {
                return this.tXJCDField;
            }
            set
            {
                if ((this.tXJCDField != null))
                {
                    if ((tXJCDField.Equals(value) != true))
                    {
                        this.tXJCDField = value;
                        this.OnPropertyChanged("TXJCD");
                    }
                }
                else
                {
                    this.tXJCDField = value;
                    this.OnPropertyChanged("TXJCD");
                }
            }
        }

        /// <summary>
        /// Text Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KTEXT
        {
            get
            {
                return this.kTEXTField;
            }
            set
            {
                if ((this.kTEXTField != null))
                {
                    if ((kTEXTField.Equals(value) != true))
                    {
                        this.kTEXTField = value;
                        this.OnPropertyChanged("KTEXT");
                    }
                }
                else
                {
                    this.kTEXTField = value;
                    this.OnPropertyChanged("KTEXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK04SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK04));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSBTSpecified
        {
            get
            {
                return mWSBTFieldSpecified;
            }
            set
            {
                mWSBTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TXJCDSpecified
        {
            get
            {
                return tXJCDFieldSpecified;
            }
            set
            {
                tXJCDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTEXTSpecified
        {
            get
            {
                return kTEXTFieldSpecified;
            }
            set
            {
                kTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK04 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK04 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK04);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK04 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK04 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK04)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK04 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK04 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK04);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK04 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK04 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK04 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK04 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK04SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document header conditions
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK05 : System.ComponentModel.INotifyPropertyChanged
    {

        private string aLCKZField;

        private string kSCHLField;

        private string kOTXTField;

        private string bETRGField;

        private string kPERCField;

        private string kRATEField;

        private string uPRBSField;

        private string mEAUNField;

        private string kOBTRField;

        private string mWSKZField;

        private string mSATZField;

        private string kOEINField;

        private ORDERS05IDOCE1EDK05SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool aLCKZFieldSpecified;

        private bool kSCHLFieldSpecified;

        private bool kOTXTFieldSpecified;

        private bool bETRGFieldSpecified;

        private bool kPERCFieldSpecified;

        private bool kRATEFieldSpecified;

        private bool uPRBSFieldSpecified;

        private bool mEAUNFieldSpecified;

        private bool kOBTRFieldSpecified;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool kOEINFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Surcharge or discount indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ALCKZ
        {
            get
            {
                return this.aLCKZField;
            }
            set
            {
                if ((this.aLCKZField != null))
                {
                    if ((aLCKZField.Equals(value) != true))
                    {
                        this.aLCKZField = value;
                        this.OnPropertyChanged("ALCKZ");
                    }
                }
                else
                {
                    this.aLCKZField = value;
                    this.OnPropertyChanged("ALCKZ");
                }
            }
        }

        /// <summary>
        /// Condition type (coded)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string KSCHL
        {
            get
            {
                return this.kSCHLField;
            }
            set
            {
                if ((this.kSCHLField != null))
                {
                    if ((kSCHLField.Equals(value) != true))
                    {
                        this.kSCHLField = value;
                        this.OnPropertyChanged("KSCHL");
                    }
                }
                else
                {
                    this.kSCHLField = value;
                    this.OnPropertyChanged("KSCHL");
                }
            }
        }

        /// <summary>
        /// Condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string KOTXT
        {
            get
            {
                return this.kOTXTField;
            }
            set
            {
                if ((this.kOTXTField != null))
                {
                    if ((kOTXTField.Equals(value) != true))
                    {
                        this.kOTXTField = value;
                        this.OnPropertyChanged("KOTXT");
                    }
                }
                else
                {
                    this.kOTXTField = value;
                    this.OnPropertyChanged("KOTXT");
                }
            }
        }

        /// <summary>
        /// Fixed surcharge/discount on total gross
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BETRG
        {
            get
            {
                return this.bETRGField;
            }
            set
            {
                if ((this.bETRGField != null))
                {
                    if ((bETRGField.Equals(value) != true))
                    {
                        this.bETRGField = value;
                        this.OnPropertyChanged("BETRG");
                    }
                }
                else
                {
                    this.bETRGField = value;
                    this.OnPropertyChanged("BETRG");
                }
            }
        }

        /// <summary>
        /// Condition percentage rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KPERC
        {
            get
            {
                return this.kPERCField;
            }
            set
            {
                if ((this.kPERCField != null))
                {
                    if ((kPERCField.Equals(value) != true))
                    {
                        this.kPERCField = value;
                        this.OnPropertyChanged("KPERC");
                    }
                }
                else
                {
                    this.kPERCField = value;
                    this.OnPropertyChanged("KPERC");
                }
            }
        }

        /// <summary>
        /// Condition record per unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string KRATE
        {
            get
            {
                return this.kRATEField;
            }
            set
            {
                if ((this.kRATEField != null))
                {
                    if ((kRATEField.Equals(value) != true))
                    {
                        this.kRATEField = value;
                        this.OnPropertyChanged("KRATE");
                    }
                }
                else
                {
                    this.kRATEField = value;
                    this.OnPropertyChanged("KRATE");
                }
            }
        }

        /// <summary>
        /// Price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string UPRBS
        {
            get
            {
                return this.uPRBSField;
            }
            set
            {
                if ((this.uPRBSField != null))
                {
                    if ((uPRBSField.Equals(value) != true))
                    {
                        this.uPRBSField = value;
                        this.OnPropertyChanged("UPRBS");
                    }
                }
                else
                {
                    this.uPRBSField = value;
                    this.OnPropertyChanged("UPRBS");
                }
            }
        }

        /// <summary>
        /// Unit of measurement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string MEAUN
        {
            get
            {
                return this.mEAUNField;
            }
            set
            {
                if ((this.mEAUNField != null))
                {
                    if ((mEAUNField.Equals(value) != true))
                    {
                        this.mEAUNField = value;
                        this.OnPropertyChanged("MEAUN");
                    }
                }
                else
                {
                    this.mEAUNField = value;
                    this.OnPropertyChanged("MEAUN");
                }
            }
        }

        /// <summary>
        /// IDoc condition end amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string KOBTR
        {
            get
            {
                return this.kOBTRField;
            }
            set
            {
                if ((this.kOBTRField != null))
                {
                    if ((kOBTRField.Equals(value) != true))
                    {
                        this.kOBTRField = value;
                        this.OnPropertyChanged("KOBTR");
                    }
                }
                else
                {
                    this.kOBTRField = value;
                    this.OnPropertyChanged("KOBTR");
                }
            }
        }

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string KOEIN
        {
            get
            {
                return this.kOEINField;
            }
            set
            {
                if ((this.kOEINField != null))
                {
                    if ((kOEINField.Equals(value) != true))
                    {
                        this.kOEINField = value;
                        this.OnPropertyChanged("KOEIN");
                    }
                }
                else
                {
                    this.kOEINField = value;
                    this.OnPropertyChanged("KOEIN");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK05SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK05));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool ALCKZSpecified
        {
            get
            {
                return aLCKZFieldSpecified;
            }
            set
            {
                aLCKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KSCHLSpecified
        {
            get
            {
                return kSCHLFieldSpecified;
            }
            set
            {
                kSCHLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOTXTSpecified
        {
            get
            {
                return kOTXTFieldSpecified;
            }
            set
            {
                kOTXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BETRGSpecified
        {
            get
            {
                return bETRGFieldSpecified;
            }
            set
            {
                bETRGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KPERCSpecified
        {
            get
            {
                return kPERCFieldSpecified;
            }
            set
            {
                kPERCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KRATESpecified
        {
            get
            {
                return kRATEFieldSpecified;
            }
            set
            {
                kRATEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UPRBSSpecified
        {
            get
            {
                return uPRBSFieldSpecified;
            }
            set
            {
                uPRBSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MEAUNSpecified
        {
            get
            {
                return mEAUNFieldSpecified;
            }
            set
            {
                mEAUNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOBTRSpecified
        {
            get
            {
                return kOBTRFieldSpecified;
            }
            set
            {
                kOBTRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOEINSpecified
        {
            get
            {
                return kOEINFieldSpecified;
            }
            set
            {
                kOEINFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK05 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK05 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK05);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK05 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK05 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK05)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK05 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK05 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK05);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK05 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK05 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK05 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK05 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK05SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Partner Information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDKA1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string pARVWField;

        private string pARTNField;

        private string lIFNRField;

        private string nAME1Field;

        private string nAME2Field;

        private string nAME3Field;

        private string nAME4Field;

        private string sTRASField;

        private string sTRS2Field;

        private string pFACHField;

        private string oRT01Field;

        private string cOUNCField;

        private string pSTLZField;

        private string pSTL2Field;

        private string lAND1Field;

        private string aBLADField;

        private string pERNRField;

        private string pARNRField;

        private string tELF1Field;

        private string tELF2Field;

        private string tELBXField;

        private string tELFXField;

        private string tELTXField;

        private string tELX1Field;

        private string sPRASField;

        private string aNREDField;

        private string oRT02Field;

        private string hAUSNField;

        private string sTOCKField;

        private string rEGIOField;

        private string pARGEField;

        private string iSOALField;

        private string iSONUField;

        private string fCODEField;

        private string iHREZField;

        private string bNAMEField;

        private string pAORGField;

        private string oRGTXField;

        private string pAGRUField;

        private string kNREFField;

        private string iLNNRField;

        private string pFORTField;

        private string sPRAS_ISOField;

        private string tITLEField;

        private List<ORDERS05IDOCE1EDKA1E1EDKA3> e1EDKA3Field;

        private ORDERS05IDOCE1EDKA1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pARVWFieldSpecified;

        private bool pARTNFieldSpecified;

        private bool lIFNRFieldSpecified;

        private bool nAME1FieldSpecified;

        private bool nAME2FieldSpecified;

        private bool nAME3FieldSpecified;

        private bool nAME4FieldSpecified;

        private bool sTRASFieldSpecified;

        private bool sTRS2FieldSpecified;

        private bool pFACHFieldSpecified;

        private bool oRT01FieldSpecified;

        private bool cOUNCFieldSpecified;

        private bool pSTLZFieldSpecified;

        private bool pSTL2FieldSpecified;

        private bool lAND1FieldSpecified;

        private bool aBLADFieldSpecified;

        private bool pERNRFieldSpecified;

        private bool pARNRFieldSpecified;

        private bool tELF1FieldSpecified;

        private bool tELF2FieldSpecified;

        private bool tELBXFieldSpecified;

        private bool tELFXFieldSpecified;

        private bool tELTXFieldSpecified;

        private bool tELX1FieldSpecified;

        private bool sPRASFieldSpecified;

        private bool aNREDFieldSpecified;

        private bool oRT02FieldSpecified;

        private bool hAUSNFieldSpecified;

        private bool sTOCKFieldSpecified;

        private bool rEGIOFieldSpecified;

        private bool pARGEFieldSpecified;

        private bool iSOALFieldSpecified;

        private bool iSONUFieldSpecified;

        private bool fCODEFieldSpecified;

        private bool iHREZFieldSpecified;

        private bool bNAMEFieldSpecified;

        private bool pAORGFieldSpecified;

        private bool oRGTXFieldSpecified;

        private bool pAGRUFieldSpecified;

        private bool kNREFFieldSpecified;

        private bool iLNNRFieldSpecified;

        private bool pFORTFieldSpecified;

        private bool sPRAS_ISOFieldSpecified;

        private bool tITLEFieldSpecified;

        private bool e1EDKA3FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDKA1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDKA1()
        {
            this.e1EDKA3Field = new List<ORDERS05IDOCE1EDKA1E1EDKA3>();
        }

        /// <summary>
        /// Partner function (e.g. sold-to party, ship-to party, ...)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string PARVW
        {
            get
            {
                return this.pARVWField;
            }
            set
            {
                if ((this.pARVWField != null))
                {
                    if ((pARVWField.Equals(value) != true))
                    {
                        this.pARVWField = value;
                        this.OnPropertyChanged("PARVW");
                    }
                }
                else
                {
                    this.pARVWField = value;
                    this.OnPropertyChanged("PARVW");
                }
            }
        }

        /// <summary>
        /// Partner number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string PARTN
        {
            get
            {
                return this.pARTNField;
            }
            set
            {
                if ((this.pARTNField != null))
                {
                    if ((pARTNField.Equals(value) != true))
                    {
                        this.pARTNField = value;
                        this.OnPropertyChanged("PARTN");
                    }
                }
                else
                {
                    this.pARTNField = value;
                    this.OnPropertyChanged("PARTN");
                }
            }
        }

        /// <summary>
        /// Vendor number at customer location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string NAME1
        {
            get
            {
                return this.nAME1Field;
            }
            set
            {
                if ((this.nAME1Field != null))
                {
                    if ((nAME1Field.Equals(value) != true))
                    {
                        this.nAME1Field = value;
                        this.OnPropertyChanged("NAME1");
                    }
                }
                else
                {
                    this.nAME1Field = value;
                    this.OnPropertyChanged("NAME1");
                }
            }
        }

        /// <summary>
        /// Name 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string NAME2
        {
            get
            {
                return this.nAME2Field;
            }
            set
            {
                if ((this.nAME2Field != null))
                {
                    if ((nAME2Field.Equals(value) != true))
                    {
                        this.nAME2Field = value;
                        this.OnPropertyChanged("NAME2");
                    }
                }
                else
                {
                    this.nAME2Field = value;
                    this.OnPropertyChanged("NAME2");
                }
            }
        }

        /// <summary>
        /// Name 3
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string NAME3
        {
            get
            {
                return this.nAME3Field;
            }
            set
            {
                if ((this.nAME3Field != null))
                {
                    if ((nAME3Field.Equals(value) != true))
                    {
                        this.nAME3Field = value;
                        this.OnPropertyChanged("NAME3");
                    }
                }
                else
                {
                    this.nAME3Field = value;
                    this.OnPropertyChanged("NAME3");
                }
            }
        }

        /// <summary>
        /// Name 4
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string NAME4
        {
            get
            {
                return this.nAME4Field;
            }
            set
            {
                if ((this.nAME4Field != null))
                {
                    if ((nAME4Field.Equals(value) != true))
                    {
                        this.nAME4Field = value;
                        this.OnPropertyChanged("NAME4");
                    }
                }
                else
                {
                    this.nAME4Field = value;
                    this.OnPropertyChanged("NAME4");
                }
            }
        }

        /// <summary>
        /// Street and house number 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string STRAS
        {
            get
            {
                return this.sTRASField;
            }
            set
            {
                if ((this.sTRASField != null))
                {
                    if ((sTRASField.Equals(value) != true))
                    {
                        this.sTRASField = value;
                        this.OnPropertyChanged("STRAS");
                    }
                }
                else
                {
                    this.sTRASField = value;
                    this.OnPropertyChanged("STRAS");
                }
            }
        }

        /// <summary>
        /// Street and house number 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string STRS2
        {
            get
            {
                return this.sTRS2Field;
            }
            set
            {
                if ((this.sTRS2Field != null))
                {
                    if ((sTRS2Field.Equals(value) != true))
                    {
                        this.sTRS2Field = value;
                        this.OnPropertyChanged("STRS2");
                    }
                }
                else
                {
                    this.sTRS2Field = value;
                    this.OnPropertyChanged("STRS2");
                }
            }
        }

        /// <summary>
        /// PO Box
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string PFACH
        {
            get
            {
                return this.pFACHField;
            }
            set
            {
                if ((this.pFACHField != null))
                {
                    if ((pFACHField.Equals(value) != true))
                    {
                        this.pFACHField = value;
                        this.OnPropertyChanged("PFACH");
                    }
                }
                else
                {
                    this.pFACHField = value;
                    this.OnPropertyChanged("PFACH");
                }
            }
        }

        /// <summary>
        /// City
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string ORT01
        {
            get
            {
                return this.oRT01Field;
            }
            set
            {
                if ((this.oRT01Field != null))
                {
                    if ((oRT01Field.Equals(value) != true))
                    {
                        this.oRT01Field = value;
                        this.OnPropertyChanged("ORT01");
                    }
                }
                else
                {
                    this.oRT01Field = value;
                    this.OnPropertyChanged("ORT01");
                }
            }
        }

        /// <summary>
        /// County code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string COUNC
        {
            get
            {
                return this.cOUNCField;
            }
            set
            {
                if ((this.cOUNCField != null))
                {
                    if ((cOUNCField.Equals(value) != true))
                    {
                        this.cOUNCField = value;
                        this.OnPropertyChanged("COUNC");
                    }
                }
                else
                {
                    this.cOUNCField = value;
                    this.OnPropertyChanged("COUNC");
                }
            }
        }

        /// <summary>
        /// Postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string PSTLZ
        {
            get
            {
                return this.pSTLZField;
            }
            set
            {
                if ((this.pSTLZField != null))
                {
                    if ((pSTLZField.Equals(value) != true))
                    {
                        this.pSTLZField = value;
                        this.OnPropertyChanged("PSTLZ");
                    }
                }
                else
                {
                    this.pSTLZField = value;
                    this.OnPropertyChanged("PSTLZ");
                }
            }
        }

        /// <summary>
        /// P.O. Box postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string PSTL2
        {
            get
            {
                return this.pSTL2Field;
            }
            set
            {
                if ((this.pSTL2Field != null))
                {
                    if ((pSTL2Field.Equals(value) != true))
                    {
                        this.pSTL2Field = value;
                        this.OnPropertyChanged("PSTL2");
                    }
                }
                else
                {
                    this.pSTL2Field = value;
                    this.OnPropertyChanged("PSTL2");
                }
            }
        }

        /// <summary>
        /// Country Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string LAND1
        {
            get
            {
                return this.lAND1Field;
            }
            set
            {
                if ((this.lAND1Field != null))
                {
                    if ((lAND1Field.Equals(value) != true))
                    {
                        this.lAND1Field = value;
                        this.OnPropertyChanged("LAND1");
                    }
                }
                else
                {
                    this.lAND1Field = value;
                    this.OnPropertyChanged("LAND1");
                }
            }
        }

        /// <summary>
        /// Unloading Point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string ABLAD
        {
            get
            {
                return this.aBLADField;
            }
            set
            {
                if ((this.aBLADField != null))
                {
                    if ((aBLADField.Equals(value) != true))
                    {
                        this.aBLADField = value;
                        this.OnPropertyChanged("ABLAD");
                    }
                }
                else
                {
                    this.aBLADField = value;
                    this.OnPropertyChanged("ABLAD");
                }
            }
        }

        /// <summary>
        /// Contact person's personnel number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        /// <summary>
        /// Contact person's number (not personnel number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string PARNR
        {
            get
            {
                return this.pARNRField;
            }
            set
            {
                if ((this.pARNRField != null))
                {
                    if ((pARNRField.Equals(value) != true))
                    {
                        this.pARNRField = value;
                        this.OnPropertyChanged("PARNR");
                    }
                }
                else
                {
                    this.pARNRField = value;
                    this.OnPropertyChanged("PARNR");
                }
            }
        }

        /// <summary>
        /// 1st telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// 2nd telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string TELF2
        {
            get
            {
                return this.tELF2Field;
            }
            set
            {
                if ((this.tELF2Field != null))
                {
                    if ((tELF2Field.Equals(value) != true))
                    {
                        this.tELF2Field = value;
                        this.OnPropertyChanged("TELF2");
                    }
                }
                else
                {
                    this.tELF2Field = value;
                    this.OnPropertyChanged("TELF2");
                }
            }
        }

        /// <summary>
        /// Telebox number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string TELBX
        {
            get
            {
                return this.tELBXField;
            }
            set
            {
                if ((this.tELBXField != null))
                {
                    if ((tELBXField.Equals(value) != true))
                    {
                        this.tELBXField = value;
                        this.OnPropertyChanged("TELBX");
                    }
                }
                else
                {
                    this.tELBXField = value;
                    this.OnPropertyChanged("TELBX");
                }
            }
        }

        /// <summary>
        /// Fax number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string TELFX
        {
            get
            {
                return this.tELFXField;
            }
            set
            {
                if ((this.tELFXField != null))
                {
                    if ((tELFXField.Equals(value) != true))
                    {
                        this.tELFXField = value;
                        this.OnPropertyChanged("TELFX");
                    }
                }
                else
                {
                    this.tELFXField = value;
                    this.OnPropertyChanged("TELFX");
                }
            }
        }

        /// <summary>
        /// Teletex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string TELTX
        {
            get
            {
                return this.tELTXField;
            }
            set
            {
                if ((this.tELTXField != null))
                {
                    if ((tELTXField.Equals(value) != true))
                    {
                        this.tELTXField = value;
                        this.OnPropertyChanged("TELTX");
                    }
                }
                else
                {
                    this.tELTXField = value;
                    this.OnPropertyChanged("TELTX");
                }
            }
        }

        /// <summary>
        /// Telex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string TELX1
        {
            get
            {
                return this.tELX1Field;
            }
            set
            {
                if ((this.tELX1Field != null))
                {
                    if ((tELX1Field.Equals(value) != true))
                    {
                        this.tELX1Field = value;
                        this.OnPropertyChanged("TELX1");
                    }
                }
                else
                {
                    this.tELX1Field = value;
                    this.OnPropertyChanged("TELX1");
                }
            }
        }

        /// <summary>
        /// Language key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Form of Address
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string ANRED
        {
            get
            {
                return this.aNREDField;
            }
            set
            {
                if ((this.aNREDField != null))
                {
                    if ((aNREDField.Equals(value) != true))
                    {
                        this.aNREDField = value;
                        this.OnPropertyChanged("ANRED");
                    }
                }
                else
                {
                    this.aNREDField = value;
                    this.OnPropertyChanged("ANRED");
                }
            }
        }

        /// <summary>
        /// District
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string ORT02
        {
            get
            {
                return this.oRT02Field;
            }
            set
            {
                if ((this.oRT02Field != null))
                {
                    if ((oRT02Field.Equals(value) != true))
                    {
                        this.oRT02Field = value;
                        this.OnPropertyChanged("ORT02");
                    }
                }
                else
                {
                    this.oRT02Field = value;
                    this.OnPropertyChanged("ORT02");
                }
            }
        }

        /// <summary>
        /// House number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string HAUSN
        {
            get
            {
                return this.hAUSNField;
            }
            set
            {
                if ((this.hAUSNField != null))
                {
                    if ((hAUSNField.Equals(value) != true))
                    {
                        this.hAUSNField = value;
                        this.OnPropertyChanged("HAUSN");
                    }
                }
                else
                {
                    this.hAUSNField = value;
                    this.OnPropertyChanged("HAUSN");
                }
            }
        }

        /// <summary>
        /// Floor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string STOCK
        {
            get
            {
                return this.sTOCKField;
            }
            set
            {
                if ((this.sTOCKField != null))
                {
                    if ((sTOCKField.Equals(value) != true))
                    {
                        this.sTOCKField = value;
                        this.OnPropertyChanged("STOCK");
                    }
                }
                else
                {
                    this.sTOCKField = value;
                    this.OnPropertyChanged("STOCK");
                }
            }
        }

        /// <summary>
        /// Region
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string REGIO
        {
            get
            {
                return this.rEGIOField;
            }
            set
            {
                if ((this.rEGIOField != null))
                {
                    if ((rEGIOField.Equals(value) != true))
                    {
                        this.rEGIOField = value;
                        this.OnPropertyChanged("REGIO");
                    }
                }
                else
                {
                    this.rEGIOField = value;
                    this.OnPropertyChanged("REGIO");
                }
            }
        }

        /// <summary>
        /// Partner's gender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string PARGE
        {
            get
            {
                return this.pARGEField;
            }
            set
            {
                if ((this.pARGEField != null))
                {
                    if ((pARGEField.Equals(value) != true))
                    {
                        this.pARGEField = value;
                        this.OnPropertyChanged("PARGE");
                    }
                }
                else
                {
                    this.pARGEField = value;
                    this.OnPropertyChanged("PARGE");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string ISOAL
        {
            get
            {
                return this.iSOALField;
            }
            set
            {
                if ((this.iSOALField != null))
                {
                    if ((iSOALField.Equals(value) != true))
                    {
                        this.iSOALField = value;
                        this.OnPropertyChanged("ISOAL");
                    }
                }
                else
                {
                    this.iSOALField = value;
                    this.OnPropertyChanged("ISOAL");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string ISONU
        {
            get
            {
                return this.iSONUField;
            }
            set
            {
                if ((this.iSONUField != null))
                {
                    if ((iSONUField.Equals(value) != true))
                    {
                        this.iSONUField = value;
                        this.OnPropertyChanged("ISONU");
                    }
                }
                else
                {
                    this.iSONUField = value;
                    this.OnPropertyChanged("ISONU");
                }
            }
        }

        /// <summary>
        /// Company key (France)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string FCODE
        {
            get
            {
                return this.fCODEField;
            }
            set
            {
                if ((this.fCODEField != null))
                {
                    if ((fCODEField.Equals(value) != true))
                    {
                        this.fCODEField = value;
                        this.OnPropertyChanged("FCODE");
                    }
                }
                else
                {
                    this.fCODEField = value;
                    this.OnPropertyChanged("FCODE");
                }
            }
        }

        /// <summary>
        /// Your reference (Partner)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string IHREZ
        {
            get
            {
                return this.iHREZField;
            }
            set
            {
                if ((this.iHREZField != null))
                {
                    if ((iHREZField.Equals(value) != true))
                    {
                        this.iHREZField = value;
                        this.OnPropertyChanged("IHREZ");
                    }
                }
                else
                {
                    this.iHREZField = value;
                    this.OnPropertyChanged("IHREZ");
                }
            }
        }

        /// <summary>
        /// IDoc user name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string BNAME
        {
            get
            {
                return this.bNAMEField;
            }
            set
            {
                if ((this.bNAMEField != null))
                {
                    if ((bNAMEField.Equals(value) != true))
                    {
                        this.bNAMEField = value;
                        this.OnPropertyChanged("BNAME");
                    }
                }
                else
                {
                    this.bNAMEField = value;
                    this.OnPropertyChanged("BNAME");
                }
            }
        }

        /// <summary>
        /// IDOC organization code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string PAORG
        {
            get
            {
                return this.pAORGField;
            }
            set
            {
                if ((this.pAORGField != null))
                {
                    if ((pAORGField.Equals(value) != true))
                    {
                        this.pAORGField = value;
                        this.OnPropertyChanged("PAORG");
                    }
                }
                else
                {
                    this.pAORGField = value;
                    this.OnPropertyChanged("PAORG");
                }
            }
        }

        /// <summary>
        /// IDoc organization code text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string ORGTX
        {
            get
            {
                return this.oRGTXField;
            }
            set
            {
                if ((this.oRGTXField != null))
                {
                    if ((oRGTXField.Equals(value) != true))
                    {
                        this.oRGTXField = value;
                        this.OnPropertyChanged("ORGTX");
                    }
                }
                else
                {
                    this.oRGTXField = value;
                    this.OnPropertyChanged("ORGTX");
                }
            }
        }

        /// <summary>
        /// IDoc group code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string PAGRU
        {
            get
            {
                return this.pAGRUField;
            }
            set
            {
                if ((this.pAGRUField != null))
                {
                    if ((pAGRUField.Equals(value) != true))
                    {
                        this.pAGRUField = value;
                        this.OnPropertyChanged("PAGRU");
                    }
                }
                else
                {
                    this.pAGRUField = value;
                    this.OnPropertyChanged("PAGRU");
                }
            }
        }

        /// <summary>
        /// Customer description of partner (plant, storage location)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string KNREF
        {
            get
            {
                return this.kNREFField;
            }
            set
            {
                if ((this.kNREFField != null))
                {
                    if ((kNREFField.Equals(value) != true))
                    {
                        this.kNREFField = value;
                        this.OnPropertyChanged("KNREF");
                    }
                }
                else
                {
                    this.kNREFField = value;
                    this.OnPropertyChanged("KNREF");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string ILNNR
        {
            get
            {
                return this.iLNNRField;
            }
            set
            {
                if ((this.iLNNRField != null))
                {
                    if ((iLNNRField.Equals(value) != true))
                    {
                        this.iLNNRField = value;
                        this.OnPropertyChanged("ILNNR");
                    }
                }
                else
                {
                    this.iLNNRField = value;
                    this.OnPropertyChanged("ILNNR");
                }
            }
        }

        /// <summary>
        /// PO Box city
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string PFORT
        {
            get
            {
                return this.pFORTField;
            }
            set
            {
                if ((this.pFORTField != null))
                {
                    if ((pFORTField.Equals(value) != true))
                    {
                        this.pFORTField = value;
                        this.OnPropertyChanged("PFORT");
                    }
                }
                else
                {
                    this.pFORTField = value;
                    this.OnPropertyChanged("PFORT");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string SPRAS_ISO
        {
            get
            {
                return this.sPRAS_ISOField;
            }
            set
            {
                if ((this.sPRAS_ISOField != null))
                {
                    if ((sPRAS_ISOField.Equals(value) != true))
                    {
                        this.sPRAS_ISOField = value;
                        this.OnPropertyChanged("SPRAS_ISO");
                    }
                }
                else
                {
                    this.sPRAS_ISOField = value;
                    this.OnPropertyChanged("SPRAS_ISO");
                }
            }
        }

        /// <summary>
        /// Title
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string TITLE
        {
            get
            {
                return this.tITLEField;
            }
            set
            {
                if ((this.tITLEField != null))
                {
                    if ((tITLEField.Equals(value) != true))
                    {
                        this.tITLEField = value;
                        this.OnPropertyChanged("TITLE");
                    }
                }
                else
                {
                    this.tITLEField = value;
                    this.OnPropertyChanged("TITLE");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Partner Information Additional Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDKA3", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public List<ORDERS05IDOCE1EDKA1E1EDKA3> E1EDKA3
        {
            get
            {
                return this.e1EDKA3Field;
            }
            set
            {
                if ((this.e1EDKA3Field != null))
                {
                    if ((e1EDKA3Field.Equals(value) != true))
                    {
                        this.e1EDKA3Field = value;
                        this.OnPropertyChanged("E1EDKA3");
                    }
                }
                else
                {
                    this.e1EDKA3Field = value;
                    this.OnPropertyChanged("E1EDKA3");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDKA1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDKA1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool PARVWSpecified
        {
            get
            {
                return pARVWFieldSpecified;
            }
            set
            {
                pARVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARTNSpecified
        {
            get
            {
                return pARTNFieldSpecified;
            }
            set
            {
                pARTNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LIFNRSpecified
        {
            get
            {
                return lIFNRFieldSpecified;
            }
            set
            {
                lIFNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME1Specified
        {
            get
            {
                return nAME1FieldSpecified;
            }
            set
            {
                nAME1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME2Specified
        {
            get
            {
                return nAME2FieldSpecified;
            }
            set
            {
                nAME2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME3Specified
        {
            get
            {
                return nAME3FieldSpecified;
            }
            set
            {
                nAME3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME4Specified
        {
            get
            {
                return nAME4FieldSpecified;
            }
            set
            {
                nAME4FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRASSpecified
        {
            get
            {
                return sTRASFieldSpecified;
            }
            set
            {
                sTRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRS2Specified
        {
            get
            {
                return sTRS2FieldSpecified;
            }
            set
            {
                sTRS2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PFACHSpecified
        {
            get
            {
                return pFACHFieldSpecified;
            }
            set
            {
                pFACHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT01Specified
        {
            get
            {
                return oRT01FieldSpecified;
            }
            set
            {
                oRT01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool COUNCSpecified
        {
            get
            {
                return cOUNCFieldSpecified;
            }
            set
            {
                cOUNCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTLZSpecified
        {
            get
            {
                return pSTLZFieldSpecified;
            }
            set
            {
                pSTLZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTL2Specified
        {
            get
            {
                return pSTL2FieldSpecified;
            }
            set
            {
                pSTL2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LAND1Specified
        {
            get
            {
                return lAND1FieldSpecified;
            }
            set
            {
                lAND1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABLADSpecified
        {
            get
            {
                return aBLADFieldSpecified;
            }
            set
            {
                aBLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERNRSpecified
        {
            get
            {
                return pERNRFieldSpecified;
            }
            set
            {
                pERNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARNRSpecified
        {
            get
            {
                return pARNRFieldSpecified;
            }
            set
            {
                pARNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF1Specified
        {
            get
            {
                return tELF1FieldSpecified;
            }
            set
            {
                tELF1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF2Specified
        {
            get
            {
                return tELF2FieldSpecified;
            }
            set
            {
                tELF2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELBXSpecified
        {
            get
            {
                return tELBXFieldSpecified;
            }
            set
            {
                tELBXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELFXSpecified
        {
            get
            {
                return tELFXFieldSpecified;
            }
            set
            {
                tELFXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELTXSpecified
        {
            get
            {
                return tELTXFieldSpecified;
            }
            set
            {
                tELTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELX1Specified
        {
            get
            {
                return tELX1FieldSpecified;
            }
            set
            {
                tELX1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SPRASSpecified
        {
            get
            {
                return sPRASFieldSpecified;
            }
            set
            {
                sPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANREDSpecified
        {
            get
            {
                return aNREDFieldSpecified;
            }
            set
            {
                aNREDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT02Specified
        {
            get
            {
                return oRT02FieldSpecified;
            }
            set
            {
                oRT02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HAUSNSpecified
        {
            get
            {
                return hAUSNFieldSpecified;
            }
            set
            {
                hAUSNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STOCKSpecified
        {
            get
            {
                return sTOCKFieldSpecified;
            }
            set
            {
                sTOCKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REGIOSpecified
        {
            get
            {
                return rEGIOFieldSpecified;
            }
            set
            {
                rEGIOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARGESpecified
        {
            get
            {
                return pARGEFieldSpecified;
            }
            set
            {
                pARGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISOALSpecified
        {
            get
            {
                return iSOALFieldSpecified;
            }
            set
            {
                iSOALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISONUSpecified
        {
            get
            {
                return iSONUFieldSpecified;
            }
            set
            {
                iSONUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FCODESpecified
        {
            get
            {
                return fCODEFieldSpecified;
            }
            set
            {
                fCODEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IHREZSpecified
        {
            get
            {
                return iHREZFieldSpecified;
            }
            set
            {
                iHREZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BNAMESpecified
        {
            get
            {
                return bNAMEFieldSpecified;
            }
            set
            {
                bNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAORGSpecified
        {
            get
            {
                return pAORGFieldSpecified;
            }
            set
            {
                pAORGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORGTXSpecified
        {
            get
            {
                return oRGTXFieldSpecified;
            }
            set
            {
                oRGTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAGRUSpecified
        {
            get
            {
                return pAGRUFieldSpecified;
            }
            set
            {
                pAGRUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KNREFSpecified
        {
            get
            {
                return kNREFFieldSpecified;
            }
            set
            {
                kNREFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ILNNRSpecified
        {
            get
            {
                return iLNNRFieldSpecified;
            }
            set
            {
                iLNNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PFORTSpecified
        {
            get
            {
                return pFORTFieldSpecified;
            }
            set
            {
                pFORTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SPRAS_ISOSpecified
        {
            get
            {
                return sPRAS_ISOFieldSpecified;
            }
            set
            {
                sPRAS_ISOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TITLESpecified
        {
            get
            {
                return tITLEFieldSpecified;
            }
            set
            {
                tITLEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDKA3Specified
        {
            get
            {
                return e1EDKA3FieldSpecified;
            }
            set
            {
                e1EDKA3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKA1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDKA1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKA1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKA1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKA1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDKA1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKA1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDKA1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDKA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKA1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKA1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKA1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKA1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDKA1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc: Document Header Partner Information Additional Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDKA1E1EDKA3 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALPField;

        private string sTDPNField;

        private ORDERS05IDOCE1EDKA1E1EDKA3SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALPFieldSpecified;

        private bool sTDPNFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC Partner identification (e.g.Dun&Bradstreet number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALP
        {
            get
            {
                return this.qUALPField;
            }
            set
            {
                if ((this.qUALPField != null))
                {
                    if ((qUALPField.Equals(value) != true))
                    {
                        this.qUALPField = value;
                        this.OnPropertyChanged("QUALP");
                    }
                }
                else
                {
                    this.qUALPField = value;
                    this.OnPropertyChanged("QUALP");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string STDPN
        {
            get
            {
                return this.sTDPNField;
            }
            set
            {
                if ((this.sTDPNField != null))
                {
                    if ((sTDPNField.Equals(value) != true))
                    {
                        this.sTDPNField = value;
                        this.OnPropertyChanged("STDPN");
                    }
                }
                else
                {
                    this.sTDPNField = value;
                    this.OnPropertyChanged("STDPN");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDKA1E1EDKA3SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDKA1E1EDKA3));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALPSpecified
        {
            get
            {
                return qUALPFieldSpecified;
            }
            set
            {
                qUALPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STDPNSpecified
        {
            get
            {
                return sTDPNFieldSpecified;
            }
            set
            {
                sTDPNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKA1E1EDKA3 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDKA1E1EDKA3 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKA1E1EDKA3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKA1E1EDKA3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKA1E1EDKA3);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKA1E1EDKA3 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKA1E1EDKA3 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDKA1E1EDKA3)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKA1E1EDKA3 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDKA1E1EDKA3 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKA1E1EDKA3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDKA1E1EDKA3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKA1E1EDKA3);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKA1E1EDKA3 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKA1E1EDKA3 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKA1E1EDKA3 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDKA1E1EDKA3 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDKA1E1EDKA3SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDKA1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document header reference data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK02 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string bELNRField;

        private string pOSNRField;

        private string dATUMField;

        private string uZEITField;

        private ORDERS05IDOCE1EDK02SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool bELNRFieldSpecified;

        private bool pOSNRFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier reference document
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC document number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string BELNR
        {
            get
            {
                return this.bELNRField;
            }
            set
            {
                if ((this.bELNRField != null))
                {
                    if ((bELNRField.Equals(value) != true))
                    {
                        this.bELNRField = value;
                        this.OnPropertyChanged("BELNR");
                    }
                }
                else
                {
                    this.bELNRField = value;
                    this.OnPropertyChanged("BELNR");
                }
            }
        }

        /// <summary>
        /// Item number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string POSNR
        {
            get
            {
                return this.pOSNRField;
            }
            set
            {
                if ((this.pOSNRField != null))
                {
                    if ((pOSNRField.Equals(value) != true))
                    {
                        this.pOSNRField = value;
                        this.OnPropertyChanged("POSNR");
                    }
                }
                else
                {
                    this.pOSNRField = value;
                    this.OnPropertyChanged("POSNR");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK02SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK02));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BELNRSpecified
        {
            get
            {
                return bELNRFieldSpecified;
            }
            set
            {
                bELNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool POSNRSpecified
        {
            get
            {
                return pOSNRFieldSpecified;
            }
            set
            {
                pOSNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK02 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK02 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK02);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK02 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK02 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK02)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK02 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK02 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK02);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK02 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK02 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK02 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK02 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK02SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Terms of Delivery
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK17 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string lKONDField;

        private string lKTEXTField;

        private ORDERS05IDOCE1EDK17SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool lKONDFieldSpecified;

        private bool lKTEXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LKOND
        {
            get
            {
                return this.lKONDField;
            }
            set
            {
                if ((this.lKONDField != null))
                {
                    if ((lKONDField.Equals(value) != true))
                    {
                        this.lKONDField = value;
                        this.OnPropertyChanged("LKOND");
                    }
                }
                else
                {
                    this.lKONDField = value;
                    this.OnPropertyChanged("LKOND");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LKTEXT
        {
            get
            {
                return this.lKTEXTField;
            }
            set
            {
                if ((this.lKTEXTField != null))
                {
                    if ((lKTEXTField.Equals(value) != true))
                    {
                        this.lKTEXTField = value;
                        this.OnPropertyChanged("LKTEXT");
                    }
                }
                else
                {
                    this.lKTEXTField = value;
                    this.OnPropertyChanged("LKTEXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK17SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK17));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKONDSpecified
        {
            get
            {
                return lKONDFieldSpecified;
            }
            set
            {
                lKONDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKTEXTSpecified
        {
            get
            {
                return lKTEXTFieldSpecified;
            }
            set
            {
                lKTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK17 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK17 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK17);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK17 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK17 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK17)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK17 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK17 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK17);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK17 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK17 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK17 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK17 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK17SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Terms of Payment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK18 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string tAGEField;

        private string pRZNTField;

        private string zTERM_TXTField;

        private ORDERS05IDOCE1EDK18SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool tAGEFieldSpecified;

        private bool pRZNTFieldSpecified;

        private bool zTERM_TXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC Number of days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TAGE
        {
            get
            {
                return this.tAGEField;
            }
            set
            {
                if ((this.tAGEField != null))
                {
                    if ((tAGEField.Equals(value) != true))
                    {
                        this.tAGEField = value;
                        this.OnPropertyChanged("TAGE");
                    }
                }
                else
                {
                    this.tAGEField = value;
                    this.OnPropertyChanged("TAGE");
                }
            }
        }

        /// <summary>
        /// IDOC percentage for terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string PRZNT
        {
            get
            {
                return this.pRZNTField;
            }
            set
            {
                if ((this.pRZNTField != null))
                {
                    if ((pRZNTField.Equals(value) != true))
                    {
                        this.pRZNTField = value;
                        this.OnPropertyChanged("PRZNT");
                    }
                }
                else
                {
                    this.pRZNTField = value;
                    this.OnPropertyChanged("PRZNT");
                }
            }
        }

        /// <summary>
        /// Text line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ZTERM_TXT
        {
            get
            {
                return this.zTERM_TXTField;
            }
            set
            {
                if ((this.zTERM_TXTField != null))
                {
                    if ((zTERM_TXTField.Equals(value) != true))
                    {
                        this.zTERM_TXTField = value;
                        this.OnPropertyChanged("ZTERM_TXT");
                    }
                }
                else
                {
                    this.zTERM_TXTField = value;
                    this.OnPropertyChanged("ZTERM_TXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK18SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK18));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TAGESpecified
        {
            get
            {
                return tAGEFieldSpecified;
            }
            set
            {
                tAGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PRZNTSpecified
        {
            get
            {
                return pRZNTFieldSpecified;
            }
            set
            {
                pRZNTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZTERM_TXTSpecified
        {
            get
            {
                return zTERM_TXTFieldSpecified;
            }
            set
            {
                zTERM_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK18 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK18 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK18);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK18 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK18 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK18)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK18 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK18 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK18);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK18 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK18 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK18 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK18 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK18SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Additional Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK35 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALZField;

        private string cUSADDField;

        private string cUSADD_BEZField;

        private ORDERS05IDOCE1EDK35SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALZFieldSpecified;

        private bool cUSADDFieldSpecified;

        private bool cUSADD_BEZFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for IDoc additional data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALZ
        {
            get
            {
                return this.qUALZField;
            }
            set
            {
                if ((this.qUALZField != null))
                {
                    if ((qUALZField.Equals(value) != true))
                    {
                        this.qUALZField = value;
                        this.OnPropertyChanged("QUALZ");
                    }
                }
                else
                {
                    this.qUALZField = value;
                    this.OnPropertyChanged("QUALZ");
                }
            }
        }

        /// <summary>
        /// Data Element Type CHAR Length 35
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CUSADD
        {
            get
            {
                return this.cUSADDField;
            }
            set
            {
                if ((this.cUSADDField != null))
                {
                    if ((cUSADDField.Equals(value) != true))
                    {
                        this.cUSADDField = value;
                        this.OnPropertyChanged("CUSADD");
                    }
                }
                else
                {
                    this.cUSADDField = value;
                    this.OnPropertyChanged("CUSADD");
                }
            }
        }

        /// <summary>
        /// Character field of length 40
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CUSADD_BEZ
        {
            get
            {
                return this.cUSADD_BEZField;
            }
            set
            {
                if ((this.cUSADD_BEZField != null))
                {
                    if ((cUSADD_BEZField.Equals(value) != true))
                    {
                        this.cUSADD_BEZField = value;
                        this.OnPropertyChanged("CUSADD_BEZ");
                    }
                }
                else
                {
                    this.cUSADD_BEZField = value;
                    this.OnPropertyChanged("CUSADD_BEZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK35SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK35));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALZSpecified
        {
            get
            {
                return qUALZFieldSpecified;
            }
            set
            {
                qUALZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CUSADDSpecified
        {
            get
            {
                return cUSADDFieldSpecified;
            }
            set
            {
                cUSADDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CUSADD_BEZSpecified
        {
            get
            {
                return cUSADD_BEZFieldSpecified;
            }
            set
            {
                cUSADD_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK35 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK35 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK35 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK35 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK35);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK35 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK35 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK35)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK35 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK35 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK35 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK35 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK35);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK35 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK35 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK35 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK35 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK35SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDOC: Doc.header payment cards
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDK36 : System.ComponentModel.INotifyPropertyChanged
    {

        private string cCINSField;

        private string cCINS_BEZEIField;

        private string cCNUMField;

        private string eXDATBIField;

        private string cCNAMEField;

        private string fAKWRField;

        private ORDERS05IDOCE1EDK36SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool cCINSFieldSpecified;

        private bool cCINS_BEZEIFieldSpecified;

        private bool cCNUMFieldSpecified;

        private bool eXDATBIFieldSpecified;

        private bool cCNAMEFieldSpecified;

        private bool fAKWRFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Payment cards: Card type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string CCINS
        {
            get
            {
                return this.cCINSField;
            }
            set
            {
                if ((this.cCINSField != null))
                {
                    if ((cCINSField.Equals(value) != true))
                    {
                        this.cCINSField = value;
                        this.OnPropertyChanged("CCINS");
                    }
                }
                else
                {
                    this.cCINSField = value;
                    this.OnPropertyChanged("CCINS");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CCINS_BEZEI
        {
            get
            {
                return this.cCINS_BEZEIField;
            }
            set
            {
                if ((this.cCINS_BEZEIField != null))
                {
                    if ((cCINS_BEZEIField.Equals(value) != true))
                    {
                        this.cCINS_BEZEIField = value;
                        this.OnPropertyChanged("CCINS_BEZEI");
                    }
                }
                else
                {
                    this.cCINS_BEZEIField = value;
                    this.OnPropertyChanged("CCINS_BEZEI");
                }
            }
        }

        /// <summary>
        /// Payment cards: Card number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CCNUM
        {
            get
            {
                return this.cCNUMField;
            }
            set
            {
                if ((this.cCNUMField != null))
                {
                    if ((cCNUMField.Equals(value) != true))
                    {
                        this.cCNUMField = value;
                        this.OnPropertyChanged("CCNUM");
                    }
                }
                else
                {
                    this.cCNUMField = value;
                    this.OnPropertyChanged("CCNUM");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string EXDATBI
        {
            get
            {
                return this.eXDATBIField;
            }
            set
            {
                if ((this.eXDATBIField != null))
                {
                    if ((eXDATBIField.Equals(value) != true))
                    {
                        this.eXDATBIField = value;
                        this.OnPropertyChanged("EXDATBI");
                    }
                }
                else
                {
                    this.eXDATBIField = value;
                    this.OnPropertyChanged("EXDATBI");
                }
            }
        }

        /// <summary>
        /// Payment cards: Name of cardholder
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string CCNAME
        {
            get
            {
                return this.cCNAMEField;
            }
            set
            {
                if ((this.cCNAMEField != null))
                {
                    if ((cCNAMEField.Equals(value) != true))
                    {
                        this.cCNAMEField = value;
                        this.OnPropertyChanged("CCNAME");
                    }
                }
                else
                {
                    this.cCNAMEField = value;
                    this.OnPropertyChanged("CCNAME");
                }
            }
        }

        /// <summary>
        /// Maximum amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string FAKWR
        {
            get
            {
                return this.fAKWRField;
            }
            set
            {
                if ((this.fAKWRField != null))
                {
                    if ((fAKWRField.Equals(value) != true))
                    {
                        this.fAKWRField = value;
                        this.OnPropertyChanged("FAKWR");
                    }
                }
                else
                {
                    this.fAKWRField = value;
                    this.OnPropertyChanged("FAKWR");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDK36SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDK36));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool CCINSSpecified
        {
            get
            {
                return cCINSFieldSpecified;
            }
            set
            {
                cCINSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CCINS_BEZEISpecified
        {
            get
            {
                return cCINS_BEZEIFieldSpecified;
            }
            set
            {
                cCINS_BEZEIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CCNUMSpecified
        {
            get
            {
                return cCNUMFieldSpecified;
            }
            set
            {
                cCNUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXDATBISpecified
        {
            get
            {
                return eXDATBIFieldSpecified;
            }
            set
            {
                eXDATBIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CCNAMESpecified
        {
            get
            {
                return cCNAMEFieldSpecified;
            }
            set
            {
                cCNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FAKWRSpecified
        {
            get
            {
                return fAKWRFieldSpecified;
            }
            set
            {
                fAKWRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK36 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDK36 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK36 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK36 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK36);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDK36 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK36 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDK36)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDK36 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDK36 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDK36 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDK36 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDK36);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK36 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDK36 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDK36 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDK36 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDK36SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Header Text Identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDKT1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDIDField;

        private string tSSPRASField;

        private string tSSPRAS_ISOField;

        private string tDOBJECTField;

        private string tDOBNAMEField;

        private List<ORDERS05IDOCE1EDKT1E1EDKT2> e1EDKT2Field;

        private ORDERS05IDOCE1EDKT1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDIDFieldSpecified;

        private bool tSSPRASFieldSpecified;

        private bool tSSPRAS_ISOFieldSpecified;

        private bool tDOBJECTFieldSpecified;

        private bool tDOBNAMEFieldSpecified;

        private bool e1EDKT2FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDKT1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDKT1()
        {
            this.e1EDKT2Field = new List<ORDERS05IDOCE1EDKT1E1EDKT2>();
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TSSPRAS
        {
            get
            {
                return this.tSSPRASField;
            }
            set
            {
                if ((this.tSSPRASField != null))
                {
                    if ((tSSPRASField.Equals(value) != true))
                    {
                        this.tSSPRASField = value;
                        this.OnPropertyChanged("TSSPRAS");
                    }
                }
                else
                {
                    this.tSSPRASField = value;
                    this.OnPropertyChanged("TSSPRAS");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TSSPRAS_ISO
        {
            get
            {
                return this.tSSPRAS_ISOField;
            }
            set
            {
                if ((this.tSSPRAS_ISOField != null))
                {
                    if ((tSSPRAS_ISOField.Equals(value) != true))
                    {
                        this.tSSPRAS_ISOField = value;
                        this.OnPropertyChanged("TSSPRAS_ISO");
                    }
                }
                else
                {
                    this.tSSPRAS_ISOField = value;
                    this.OnPropertyChanged("TSSPRAS_ISO");
                }
            }
        }

        /// <summary>
        /// Texts: Application Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TDOBJECT
        {
            get
            {
                return this.tDOBJECTField;
            }
            set
            {
                if ((this.tDOBJECTField != null))
                {
                    if ((tDOBJECTField.Equals(value) != true))
                    {
                        this.tDOBJECTField = value;
                        this.OnPropertyChanged("TDOBJECT");
                    }
                }
                else
                {
                    this.tDOBJECTField = value;
                    this.OnPropertyChanged("TDOBJECT");
                }
            }
        }

        /// <summary>
        /// Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string TDOBNAME
        {
            get
            {
                return this.tDOBNAMEField;
            }
            set
            {
                if ((this.tDOBNAMEField != null))
                {
                    if ((tDOBNAMEField.Equals(value) != true))
                    {
                        this.tDOBNAMEField = value;
                        this.OnPropertyChanged("TDOBNAME");
                    }
                }
                else
                {
                    this.tDOBNAMEField = value;
                    this.OnPropertyChanged("TDOBNAME");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Header Texts
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDKT2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public List<ORDERS05IDOCE1EDKT1E1EDKT2> E1EDKT2
        {
            get
            {
                return this.e1EDKT2Field;
            }
            set
            {
                if ((this.e1EDKT2Field != null))
                {
                    if ((e1EDKT2Field.Equals(value) != true))
                    {
                        this.e1EDKT2Field = value;
                        this.OnPropertyChanged("E1EDKT2");
                    }
                }
                else
                {
                    this.e1EDKT2Field = value;
                    this.OnPropertyChanged("E1EDKT2");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDKT1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDKT1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDIDSpecified
        {
            get
            {
                return tDIDFieldSpecified;
            }
            set
            {
                tDIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TSSPRASSpecified
        {
            get
            {
                return tSSPRASFieldSpecified;
            }
            set
            {
                tSSPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TSSPRAS_ISOSpecified
        {
            get
            {
                return tSSPRAS_ISOFieldSpecified;
            }
            set
            {
                tSSPRAS_ISOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDOBJECTSpecified
        {
            get
            {
                return tDOBJECTFieldSpecified;
            }
            set
            {
                tDOBJECTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDOBNAMESpecified
        {
            get
            {
                return tDOBNAMEFieldSpecified;
            }
            set
            {
                tDOBNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDKT2Specified
        {
            get
            {
                return e1EDKT2FieldSpecified;
            }
            set
            {
                e1EDKT2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKT1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDKT1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKT1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKT1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKT1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDKT1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKT1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDKT1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDKT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKT1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKT1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKT1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKT1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDKT1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc: Document Header Texts
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDKT1E1EDKT2 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDLINEField;

        private string tDFORMATField;

        private ORDERS05IDOCE1EDKT1E1EDKT2SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDLINEFieldSpecified;

        private bool tDFORMATFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Text line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDKT1E1EDKT2SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDKT1E1EDKT2));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDLINESpecified
        {
            get
            {
                return tDLINEFieldSpecified;
            }
            set
            {
                tDLINEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDFORMATSpecified
        {
            get
            {
                return tDFORMATFieldSpecified;
            }
            set
            {
                tDFORMATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKT1E1EDKT2 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDKT1E1EDKT2 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKT1E1EDKT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKT1E1EDKT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKT1E1EDKT2);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDKT1E1EDKT2 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKT1E1EDKT2 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDKT1E1EDKT2)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDKT1E1EDKT2 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDKT1E1EDKT2 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDKT1E1EDKT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDKT1E1EDKT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDKT1E1EDKT2);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKT1E1EDKT2 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDKT1E1EDKT2 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDKT1E1EDKT2 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDKT1E1EDKT2 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDKT1E1EDKT2SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDKT1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item General Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01 : System.ComponentModel.INotifyPropertyChanged
    {

        private string pOSEXField;

        private string aCTIONField;

        private string pSTYPField;

        private string kZABSField;

        private string mENGEField;

        private string mENEEField;

        private string bMNG2Field;

        private string pMENEField;

        private string aBFTZField;

        private string vPREIField;

        private string pEINHField;

        private string nETWRField;

        private string aNETWField;

        private string sKFBPField;

        private string nTGEWField;

        private string gEWEIField;

        private string eINKZField;

        private string cURCYField;

        private string pREISField;

        private string mATKLField;

        private string uEPOSField;

        private string gRKORField;

        private string eVERSField;

        private string bPUMNField;

        private string bPUMZField;

        private string aBGRUField;

        private string aBGRTField;

        private string aNTLFField;

        private string fIXMGField;

        private string kZAZUField;

        private string bRGEWField;

        private string pSTYVField;

        private string eMPSTField;

        private string aBTNRField;

        private string aBRVWField;

        private string wERKSField;

        private string lPRIOField;

        private string lPRIO_BEZField;

        private string rOUTEField;

        private string rOUTE_BEZField;

        private string lGORTField;

        private string vSTELField;

        private string dELCOField;

        private string mATNRField;

        private string vALTGField;

        private string hIPOSField;

        private string hIEVWField;

        private string pOSGUIDField;

        private string mATNR_EXTERNALField;

        private string mATNR_VERSIONField;

        private string mATNR_GUIDField;

        private List<ORDERS05IDOCE1EDP01E1EDP02> e1EDP02Field;

        private ORDERS05IDOCE1EDP01E1CUREF e1CUREFField;

        private List<ORDERS05IDOCE1EDP01E1ADDI1> e1ADDI1Field;

        private List<ORDERS05IDOCE1EDP01E1EDP03> e1EDP03Field;

        private List<ORDERS05IDOCE1EDP01E1EDP04> e1EDP04Field;

        private List<ORDERS05IDOCE1EDP01E1EDP05> e1EDP05Field;

        private List<ORDERS05IDOCE1EDP01E1EDP20> e1EDP20Field;

        private List<ORDERS05IDOCE1EDP01E1EDPA1> e1EDPA1Field;

        private List<ORDERS05IDOCE1EDP01E1EDP19> e1EDP19Field;

        private ORDERS05IDOCE1EDP01E1EDPAD e1EDPADField;

        private List<ORDERS05IDOCE1EDP01E1EDP17> e1EDP17Field;

        private List<ORDERS05IDOCE1EDP01E1EDP18> e1EDP18Field;

        private List<ORDERS05IDOCE1EDP01E1EDP35> e1EDP35Field;

        private List<ORDERS05IDOCE1EDP01E1EDPT1> e1EDPT1Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01> e1EDC01Field;

        private ORDERS05IDOCE1EDP01SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pOSEXFieldSpecified;

        private bool aCTIONFieldSpecified;

        private bool pSTYPFieldSpecified;

        private bool kZABSFieldSpecified;

        private bool mENGEFieldSpecified;

        private bool mENEEFieldSpecified;

        private bool bMNG2FieldSpecified;

        private bool pMENEFieldSpecified;

        private bool aBFTZFieldSpecified;

        private bool vPREIFieldSpecified;

        private bool pEINHFieldSpecified;

        private bool nETWRFieldSpecified;

        private bool aNETWFieldSpecified;

        private bool sKFBPFieldSpecified;

        private bool nTGEWFieldSpecified;

        private bool gEWEIFieldSpecified;

        private bool eINKZFieldSpecified;

        private bool cURCYFieldSpecified;

        private bool pREISFieldSpecified;

        private bool mATKLFieldSpecified;

        private bool uEPOSFieldSpecified;

        private bool gRKORFieldSpecified;

        private bool eVERSFieldSpecified;

        private bool bPUMNFieldSpecified;

        private bool bPUMZFieldSpecified;

        private bool aBGRUFieldSpecified;

        private bool aBGRTFieldSpecified;

        private bool aNTLFFieldSpecified;

        private bool fIXMGFieldSpecified;

        private bool kZAZUFieldSpecified;

        private bool bRGEWFieldSpecified;

        private bool pSTYVFieldSpecified;

        private bool eMPSTFieldSpecified;

        private bool aBTNRFieldSpecified;

        private bool aBRVWFieldSpecified;

        private bool wERKSFieldSpecified;

        private bool lPRIOFieldSpecified;

        private bool lPRIO_BEZFieldSpecified;

        private bool rOUTEFieldSpecified;

        private bool rOUTE_BEZFieldSpecified;

        private bool lGORTFieldSpecified;

        private bool vSTELFieldSpecified;

        private bool dELCOFieldSpecified;

        private bool mATNRFieldSpecified;

        private bool vALTGFieldSpecified;

        private bool hIPOSFieldSpecified;

        private bool hIEVWFieldSpecified;

        private bool pOSGUIDFieldSpecified;

        private bool mATNR_EXTERNALFieldSpecified;

        private bool mATNR_VERSIONFieldSpecified;

        private bool mATNR_GUIDFieldSpecified;

        private bool e1EDP02FieldSpecified;

        private bool e1CUREFFieldSpecified;

        private bool e1ADDI1FieldSpecified;

        private bool e1EDP03FieldSpecified;

        private bool e1EDP04FieldSpecified;

        private bool e1EDP05FieldSpecified;

        private bool e1EDP20FieldSpecified;

        private bool e1EDPA1FieldSpecified;

        private bool e1EDP19FieldSpecified;

        private bool e1EDPADFieldSpecified;

        private bool e1EDP17FieldSpecified;

        private bool e1EDP18FieldSpecified;

        private bool e1EDP35FieldSpecified;

        private bool e1EDPT1FieldSpecified;

        private bool e1EDC01FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01()
        {
            this.e1EDC01Field = new List<ORDERS05IDOCE1EDP01E1EDC01>();
            this.e1EDPT1Field = new List<ORDERS05IDOCE1EDP01E1EDPT1>();
            this.e1EDP35Field = new List<ORDERS05IDOCE1EDP01E1EDP35>();
            this.e1EDP18Field = new List<ORDERS05IDOCE1EDP01E1EDP18>();
            this.e1EDP17Field = new List<ORDERS05IDOCE1EDP01E1EDP17>();
            this.e1EDPADField = new ORDERS05IDOCE1EDP01E1EDPAD();
            this.e1EDP19Field = new List<ORDERS05IDOCE1EDP01E1EDP19>();
            this.e1EDPA1Field = new List<ORDERS05IDOCE1EDP01E1EDPA1>();
            this.e1EDP20Field = new List<ORDERS05IDOCE1EDP01E1EDP20>();
            this.e1EDP05Field = new List<ORDERS05IDOCE1EDP01E1EDP05>();
            this.e1EDP04Field = new List<ORDERS05IDOCE1EDP01E1EDP04>();
            this.e1EDP03Field = new List<ORDERS05IDOCE1EDP01E1EDP03>();
            this.e1ADDI1Field = new List<ORDERS05IDOCE1EDP01E1ADDI1>();
            this.e1CUREFField = new ORDERS05IDOCE1EDP01E1CUREF();
            this.e1EDP02Field = new List<ORDERS05IDOCE1EDP01E1EDP02>();
        }

        /// <summary>
        /// Item number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string POSEX
        {
            get
            {
                return this.pOSEXField;
            }
            set
            {
                if ((this.pOSEXField != null))
                {
                    if ((pOSEXField.Equals(value) != true))
                    {
                        this.pOSEXField = value;
                        this.OnPropertyChanged("POSEX");
                    }
                }
                else
                {
                    this.pOSEXField = value;
                    this.OnPropertyChanged("POSEX");
                }
            }
        }

        /// <summary>
        /// Action code for the item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ACTION
        {
            get
            {
                return this.aCTIONField;
            }
            set
            {
                if ((this.aCTIONField != null))
                {
                    if ((aCTIONField.Equals(value) != true))
                    {
                        this.aCTIONField = value;
                        this.OnPropertyChanged("ACTION");
                    }
                }
                else
                {
                    this.aCTIONField = value;
                    this.OnPropertyChanged("ACTION");
                }
            }
        }

        /// <summary>
        /// Item Category
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string PSTYP
        {
            get
            {
                return this.pSTYPField;
            }
            set
            {
                if ((this.pSTYPField != null))
                {
                    if ((pSTYPField.Equals(value) != true))
                    {
                        this.pSTYPField = value;
                        this.OnPropertyChanged("PSTYP");
                    }
                }
                else
                {
                    this.pSTYPField = value;
                    this.OnPropertyChanged("PSTYP");
                }
            }
        }

        /// <summary>
        /// Flag: order acknowledgment required
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string KZABS
        {
            get
            {
                return this.kZABSField;
            }
            set
            {
                if ((this.kZABSField != null))
                {
                    if ((kZABSField.Equals(value) != true))
                    {
                        this.kZABSField = value;
                        this.OnPropertyChanged("KZABS");
                    }
                }
                else
                {
                    this.kZABSField = value;
                    this.OnPropertyChanged("KZABS");
                }
            }
        }

        /// <summary>
        /// Quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string MENGE
        {
            get
            {
                return this.mENGEField;
            }
            set
            {
                if ((this.mENGEField != null))
                {
                    if ((mENGEField.Equals(value) != true))
                    {
                        this.mENGEField = value;
                        this.OnPropertyChanged("MENGE");
                    }
                }
                else
                {
                    this.mENGEField = value;
                    this.OnPropertyChanged("MENGE");
                }
            }
        }

        /// <summary>
        /// Unit of measure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string MENEE
        {
            get
            {
                return this.mENEEField;
            }
            set
            {
                if ((this.mENEEField != null))
                {
                    if ((mENEEField.Equals(value) != true))
                    {
                        this.mENEEField = value;
                        this.OnPropertyChanged("MENEE");
                    }
                }
                else
                {
                    this.mENEEField = value;
                    this.OnPropertyChanged("MENEE");
                }
            }
        }

        /// <summary>
        /// Quantity in price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string BMNG2
        {
            get
            {
                return this.bMNG2Field;
            }
            set
            {
                if ((this.bMNG2Field != null))
                {
                    if ((bMNG2Field.Equals(value) != true))
                    {
                        this.bMNG2Field = value;
                        this.OnPropertyChanged("BMNG2");
                    }
                }
                else
                {
                    this.bMNG2Field = value;
                    this.OnPropertyChanged("BMNG2");
                }
            }
        }

        /// <summary>
        /// Price Unit of Measure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string PMENE
        {
            get
            {
                return this.pMENEField;
            }
            set
            {
                if ((this.pMENEField != null))
                {
                    if ((pMENEField.Equals(value) != true))
                    {
                        this.pMENEField = value;
                        this.OnPropertyChanged("PMENE");
                    }
                }
                else
                {
                    this.pMENEField = value;
                    this.OnPropertyChanged("PMENE");
                }
            }
        }

        /// <summary>
        /// Agreed cumulative quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string ABFTZ
        {
            get
            {
                return this.aBFTZField;
            }
            set
            {
                if ((this.aBFTZField != null))
                {
                    if ((aBFTZField.Equals(value) != true))
                    {
                        this.aBFTZField = value;
                        this.OnPropertyChanged("ABFTZ");
                    }
                }
                else
                {
                    this.aBFTZField = value;
                    this.OnPropertyChanged("ABFTZ");
                }
            }
        }

        /// <summary>
        /// Price (net)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string VPREI
        {
            get
            {
                return this.vPREIField;
            }
            set
            {
                if ((this.vPREIField != null))
                {
                    if ((vPREIField.Equals(value) != true))
                    {
                        this.vPREIField = value;
                        this.OnPropertyChanged("VPREI");
                    }
                }
                else
                {
                    this.vPREIField = value;
                    this.OnPropertyChanged("VPREI");
                }
            }
        }

        /// <summary>
        /// Price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string PEINH
        {
            get
            {
                return this.pEINHField;
            }
            set
            {
                if ((this.pEINHField != null))
                {
                    if ((pEINHField.Equals(value) != true))
                    {
                        this.pEINHField = value;
                        this.OnPropertyChanged("PEINH");
                    }
                }
                else
                {
                    this.pEINHField = value;
                    this.OnPropertyChanged("PEINH");
                }
            }
        }

        /// <summary>
        /// Item value (net)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string NETWR
        {
            get
            {
                return this.nETWRField;
            }
            set
            {
                if ((this.nETWRField != null))
                {
                    if ((nETWRField.Equals(value) != true))
                    {
                        this.nETWRField = value;
                        this.OnPropertyChanged("NETWR");
                    }
                }
                else
                {
                    this.nETWRField = value;
                    this.OnPropertyChanged("NETWR");
                }
            }
        }

        /// <summary>
        /// Absolute net value of item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string ANETW
        {
            get
            {
                return this.aNETWField;
            }
            set
            {
                if ((this.aNETWField != null))
                {
                    if ((aNETWField.Equals(value) != true))
                    {
                        this.aNETWField = value;
                        this.OnPropertyChanged("ANETW");
                    }
                }
                else
                {
                    this.aNETWField = value;
                    this.OnPropertyChanged("ANETW");
                }
            }
        }

        /// <summary>
        /// Amount qualifying for cash discount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string SKFBP
        {
            get
            {
                return this.sKFBPField;
            }
            set
            {
                if ((this.sKFBPField != null))
                {
                    if ((sKFBPField.Equals(value) != true))
                    {
                        this.sKFBPField = value;
                        this.OnPropertyChanged("SKFBP");
                    }
                }
                else
                {
                    this.sKFBPField = value;
                    this.OnPropertyChanged("SKFBP");
                }
            }
        }

        /// <summary>
        /// Net weight
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string NTGEW
        {
            get
            {
                return this.nTGEWField;
            }
            set
            {
                if ((this.nTGEWField != null))
                {
                    if ((nTGEWField.Equals(value) != true))
                    {
                        this.nTGEWField = value;
                        this.OnPropertyChanged("NTGEW");
                    }
                }
                else
                {
                    this.nTGEWField = value;
                    this.OnPropertyChanged("NTGEW");
                }
            }
        }

        /// <summary>
        /// Weight unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string GEWEI
        {
            get
            {
                return this.gEWEIField;
            }
            set
            {
                if ((this.gEWEIField != null))
                {
                    if ((gEWEIField.Equals(value) != true))
                    {
                        this.gEWEIField = value;
                        this.OnPropertyChanged("GEWEI");
                    }
                }
                else
                {
                    this.gEWEIField = value;
                    this.OnPropertyChanged("GEWEI");
                }
            }
        }

        /// <summary>
        /// Flag: More than one schedule line for the item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string EINKZ
        {
            get
            {
                return this.eINKZField;
            }
            set
            {
                if ((this.eINKZField != null))
                {
                    if ((eINKZField.Equals(value) != true))
                    {
                        this.eINKZField = value;
                        this.OnPropertyChanged("EINKZ");
                    }
                }
                else
                {
                    this.eINKZField = value;
                    this.OnPropertyChanged("EINKZ");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string CURCY
        {
            get
            {
                return this.cURCYField;
            }
            set
            {
                if ((this.cURCYField != null))
                {
                    if ((cURCYField.Equals(value) != true))
                    {
                        this.cURCYField = value;
                        this.OnPropertyChanged("CURCY");
                    }
                }
                else
                {
                    this.cURCYField = value;
                    this.OnPropertyChanged("CURCY");
                }
            }
        }

        /// <summary>
        /// Gross price
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string PREIS
        {
            get
            {
                return this.pREISField;
            }
            set
            {
                if ((this.pREISField != null))
                {
                    if ((pREISField.Equals(value) != true))
                    {
                        this.pREISField = value;
                        this.OnPropertyChanged("PREIS");
                    }
                }
                else
                {
                    this.pREISField = value;
                    this.OnPropertyChanged("PREIS");
                }
            }
        }

        /// <summary>
        /// IDOC material class
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string MATKL
        {
            get
            {
                return this.mATKLField;
            }
            set
            {
                if ((this.mATKLField != null))
                {
                    if ((mATKLField.Equals(value) != true))
                    {
                        this.mATKLField = value;
                        this.OnPropertyChanged("MATKL");
                    }
                }
                else
                {
                    this.mATKLField = value;
                    this.OnPropertyChanged("MATKL");
                }
            }
        }

        /// <summary>
        /// Higher-Level Item in BOM Structures
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string UEPOS
        {
            get
            {
                return this.uEPOSField;
            }
            set
            {
                if ((this.uEPOSField != null))
                {
                    if ((uEPOSField.Equals(value) != true))
                    {
                        this.uEPOSField = value;
                        this.OnPropertyChanged("UEPOS");
                    }
                }
                else
                {
                    this.uEPOSField = value;
                    this.OnPropertyChanged("UEPOS");
                }
            }
        }

        /// <summary>
        /// Delivery group (items delivered together)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string GRKOR
        {
            get
            {
                return this.gRKORField;
            }
            set
            {
                if ((this.gRKORField != null))
                {
                    if ((gRKORField.Equals(value) != true))
                    {
                        this.gRKORField = value;
                        this.OnPropertyChanged("GRKOR");
                    }
                }
                else
                {
                    this.gRKORField = value;
                    this.OnPropertyChanged("GRKOR");
                }
            }
        }

        /// <summary>
        /// Shipping instructions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string EVERS
        {
            get
            {
                return this.eVERSField;
            }
            set
            {
                if ((this.eVERSField != null))
                {
                    if ((eVERSField.Equals(value) != true))
                    {
                        this.eVERSField = value;
                        this.OnPropertyChanged("EVERS");
                    }
                }
                else
                {
                    this.eVERSField = value;
                    this.OnPropertyChanged("EVERS");
                }
            }
        }

        /// <summary>
        /// Denominator for Conv. of Order Price Unit into Order Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string BPUMN
        {
            get
            {
                return this.bPUMNField;
            }
            set
            {
                if ((this.bPUMNField != null))
                {
                    if ((bPUMNField.Equals(value) != true))
                    {
                        this.bPUMNField = value;
                        this.OnPropertyChanged("BPUMN");
                    }
                }
                else
                {
                    this.bPUMNField = value;
                    this.OnPropertyChanged("BPUMN");
                }
            }
        }

        /// <summary>
        /// Numerator for Conversion of Order Price Unit into Order Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string BPUMZ
        {
            get
            {
                return this.bPUMZField;
            }
            set
            {
                if ((this.bPUMZField != null))
                {
                    if ((bPUMZField.Equals(value) != true))
                    {
                        this.bPUMZField = value;
                        this.OnPropertyChanged("BPUMZ");
                    }
                }
                else
                {
                    this.bPUMZField = value;
                    this.OnPropertyChanged("BPUMZ");
                }
            }
        }

        /// <summary>
        /// Reason for rejection of quotations and sales orders
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string ABGRU
        {
            get
            {
                return this.aBGRUField;
            }
            set
            {
                if ((this.aBGRUField != null))
                {
                    if ((aBGRUField.Equals(value) != true))
                    {
                        this.aBGRUField = value;
                        this.OnPropertyChanged("ABGRU");
                    }
                }
                else
                {
                    this.aBGRUField = value;
                    this.OnPropertyChanged("ABGRU");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string ABGRT
        {
            get
            {
                return this.aBGRTField;
            }
            set
            {
                if ((this.aBGRTField != null))
                {
                    if ((aBGRTField.Equals(value) != true))
                    {
                        this.aBGRTField = value;
                        this.OnPropertyChanged("ABGRT");
                    }
                }
                else
                {
                    this.aBGRTField = value;
                    this.OnPropertyChanged("ABGRT");
                }
            }
        }

        /// <summary>
        /// Maximum number of partial deliveries allowed per item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string ANTLF
        {
            get
            {
                return this.aNTLFField;
            }
            set
            {
                if ((this.aNTLFField != null))
                {
                    if ((aNTLFField.Equals(value) != true))
                    {
                        this.aNTLFField = value;
                        this.OnPropertyChanged("ANTLF");
                    }
                }
                else
                {
                    this.aNTLFField = value;
                    this.OnPropertyChanged("ANTLF");
                }
            }
        }

        /// <summary>
        /// Delivery date and quantity fixed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string FIXMG
        {
            get
            {
                return this.fIXMGField;
            }
            set
            {
                if ((this.fIXMGField != null))
                {
                    if ((fIXMGField.Equals(value) != true))
                    {
                        this.fIXMGField = value;
                        this.OnPropertyChanged("FIXMG");
                    }
                }
                else
                {
                    this.fIXMGField = value;
                    this.OnPropertyChanged("FIXMG");
                }
            }
        }

        /// <summary>
        /// Order Combination Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string KZAZU
        {
            get
            {
                return this.kZAZUField;
            }
            set
            {
                if ((this.kZAZUField != null))
                {
                    if ((kZAZUField.Equals(value) != true))
                    {
                        this.kZAZUField = value;
                        this.OnPropertyChanged("KZAZU");
                    }
                }
                else
                {
                    this.kZAZUField = value;
                    this.OnPropertyChanged("KZAZU");
                }
            }
        }

        /// <summary>
        /// Total weight
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string BRGEW
        {
            get
            {
                return this.bRGEWField;
            }
            set
            {
                if ((this.bRGEWField != null))
                {
                    if ((bRGEWField.Equals(value) != true))
                    {
                        this.bRGEWField = value;
                        this.OnPropertyChanged("BRGEW");
                    }
                }
                else
                {
                    this.bRGEWField = value;
                    this.OnPropertyChanged("BRGEW");
                }
            }
        }

        /// <summary>
        /// Sales document item category
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string PSTYV
        {
            get
            {
                return this.pSTYVField;
            }
            set
            {
                if ((this.pSTYVField != null))
                {
                    if ((pSTYVField.Equals(value) != true))
                    {
                        this.pSTYVField = value;
                        this.OnPropertyChanged("PSTYV");
                    }
                }
                else
                {
                    this.pSTYVField = value;
                    this.OnPropertyChanged("PSTYV");
                }
            }
        }

        /// <summary>
        /// Receiving point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string EMPST
        {
            get
            {
                return this.eMPSTField;
            }
            set
            {
                if ((this.eMPSTField != null))
                {
                    if ((eMPSTField.Equals(value) != true))
                    {
                        this.eMPSTField = value;
                        this.OnPropertyChanged("EMPST");
                    }
                }
                else
                {
                    this.eMPSTField = value;
                    this.OnPropertyChanged("EMPST");
                }
            }
        }

        /// <summary>
        /// Department number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string ABTNR
        {
            get
            {
                return this.aBTNRField;
            }
            set
            {
                if ((this.aBTNRField != null))
                {
                    if ((aBTNRField.Equals(value) != true))
                    {
                        this.aBTNRField = value;
                        this.OnPropertyChanged("ABTNR");
                    }
                }
                else
                {
                    this.aBTNRField = value;
                    this.OnPropertyChanged("ABTNR");
                }
            }
        }

        /// <summary>
        /// Usage Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string ABRVW
        {
            get
            {
                return this.aBRVWField;
            }
            set
            {
                if ((this.aBRVWField != null))
                {
                    if ((aBRVWField.Equals(value) != true))
                    {
                        this.aBRVWField = value;
                        this.OnPropertyChanged("ABRVW");
                    }
                }
                else
                {
                    this.aBRVWField = value;
                    this.OnPropertyChanged("ABRVW");
                }
            }
        }

        /// <summary>
        /// Plant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string WERKS
        {
            get
            {
                return this.wERKSField;
            }
            set
            {
                if ((this.wERKSField != null))
                {
                    if ((wERKSField.Equals(value) != true))
                    {
                        this.wERKSField = value;
                        this.OnPropertyChanged("WERKS");
                    }
                }
                else
                {
                    this.wERKSField = value;
                    this.OnPropertyChanged("WERKS");
                }
            }
        }

        /// <summary>
        /// Delivery Priority
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string LPRIO
        {
            get
            {
                return this.lPRIOField;
            }
            set
            {
                if ((this.lPRIOField != null))
                {
                    if ((lPRIOField.Equals(value) != true))
                    {
                        this.lPRIOField = value;
                        this.OnPropertyChanged("LPRIO");
                    }
                }
                else
                {
                    this.lPRIOField = value;
                    this.OnPropertyChanged("LPRIO");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string LPRIO_BEZ
        {
            get
            {
                return this.lPRIO_BEZField;
            }
            set
            {
                if ((this.lPRIO_BEZField != null))
                {
                    if ((lPRIO_BEZField.Equals(value) != true))
                    {
                        this.lPRIO_BEZField = value;
                        this.OnPropertyChanged("LPRIO_BEZ");
                    }
                }
                else
                {
                    this.lPRIO_BEZField = value;
                    this.OnPropertyChanged("LPRIO_BEZ");
                }
            }
        }

        /// <summary>
        /// Route
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string ROUTE
        {
            get
            {
                return this.rOUTEField;
            }
            set
            {
                if ((this.rOUTEField != null))
                {
                    if ((rOUTEField.Equals(value) != true))
                    {
                        this.rOUTEField = value;
                        this.OnPropertyChanged("ROUTE");
                    }
                }
                else
                {
                    this.rOUTEField = value;
                    this.OnPropertyChanged("ROUTE");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string ROUTE_BEZ
        {
            get
            {
                return this.rOUTE_BEZField;
            }
            set
            {
                if ((this.rOUTE_BEZField != null))
                {
                    if ((rOUTE_BEZField.Equals(value) != true))
                    {
                        this.rOUTE_BEZField = value;
                        this.OnPropertyChanged("ROUTE_BEZ");
                    }
                }
                else
                {
                    this.rOUTE_BEZField = value;
                    this.OnPropertyChanged("ROUTE_BEZ");
                }
            }
        }

        /// <summary>
        /// Storage Location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string LGORT
        {
            get
            {
                return this.lGORTField;
            }
            set
            {
                if ((this.lGORTField != null))
                {
                    if ((lGORTField.Equals(value) != true))
                    {
                        this.lGORTField = value;
                        this.OnPropertyChanged("LGORT");
                    }
                }
                else
                {
                    this.lGORTField = value;
                    this.OnPropertyChanged("LGORT");
                }
            }
        }

        /// <summary>
        /// Shipping Point/Receiving Point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string VSTEL
        {
            get
            {
                return this.vSTELField;
            }
            set
            {
                if ((this.vSTELField != null))
                {
                    if ((vSTELField.Equals(value) != true))
                    {
                        this.vSTELField = value;
                        this.OnPropertyChanged("VSTEL");
                    }
                }
                else
                {
                    this.vSTELField = value;
                    this.OnPropertyChanged("VSTEL");
                }
            }
        }

        /// <summary>
        /// Agreed delivery time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string DELCO
        {
            get
            {
                return this.dELCOField;
            }
            set
            {
                if ((this.dELCOField != null))
                {
                    if ((dELCOField.Equals(value) != true))
                    {
                        this.dELCOField = value;
                        this.OnPropertyChanged("DELCO");
                    }
                }
                else
                {
                    this.dELCOField = value;
                    this.OnPropertyChanged("DELCO");
                }
            }
        }

        /// <summary>
        /// IDOC material ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string MATNR
        {
            get
            {
                return this.mATNRField;
            }
            set
            {
                if ((this.mATNRField != null))
                {
                    if ((mATNRField.Equals(value) != true))
                    {
                        this.mATNRField = value;
                        this.OnPropertyChanged("MATNR");
                    }
                }
                else
                {
                    this.mATNRField = value;
                    this.OnPropertyChanged("MATNR");
                }
            }
        }

        /// <summary>
        /// Additional value days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string VALTG
        {
            get
            {
                return this.vALTGField;
            }
            set
            {
                if ((this.vALTGField != null))
                {
                    if ((vALTGField.Equals(value) != true))
                    {
                        this.vALTGField = value;
                        this.OnPropertyChanged("VALTG");
                    }
                }
                else
                {
                    this.vALTGField = value;
                    this.OnPropertyChanged("VALTG");
                }
            }
        }

        /// <summary>
        /// Superior item in an item hierarchy
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string HIPOS
        {
            get
            {
                return this.hIPOSField;
            }
            set
            {
                if ((this.hIPOSField != null))
                {
                    if ((hIPOSField.Equals(value) != true))
                    {
                        this.hIPOSField = value;
                        this.OnPropertyChanged("HIPOS");
                    }
                }
                else
                {
                    this.hIPOSField = value;
                    this.OnPropertyChanged("HIPOS");
                }
            }
        }

        /// <summary>
        /// Use of Hierarchy Item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public string HIEVW
        {
            get
            {
                return this.hIEVWField;
            }
            set
            {
                if ((this.hIEVWField != null))
                {
                    if ((hIEVWField.Equals(value) != true))
                    {
                        this.hIEVWField = value;
                        this.OnPropertyChanged("HIEVW");
                    }
                }
                else
                {
                    this.hIEVWField = value;
                    this.OnPropertyChanged("HIEVW");
                }
            }
        }

        /// <summary>
        /// ATP: Encryption of DELNR and DELPS
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public string POSGUID
        {
            get
            {
                return this.pOSGUIDField;
            }
            set
            {
                if ((this.pOSGUIDField != null))
                {
                    if ((pOSGUIDField.Equals(value) != true))
                    {
                        this.pOSGUIDField = value;
                        this.OnPropertyChanged("POSGUID");
                    }
                }
                else
                {
                    this.pOSGUIDField = value;
                    this.OnPropertyChanged("POSGUID");
                }
            }
        }

        /// <summary>
        /// Material Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public string MATNR_EXTERNAL
        {
            get
            {
                return this.mATNR_EXTERNALField;
            }
            set
            {
                if ((this.mATNR_EXTERNALField != null))
                {
                    if ((mATNR_EXTERNALField.Equals(value) != true))
                    {
                        this.mATNR_EXTERNALField = value;
                        this.OnPropertyChanged("MATNR_EXTERNAL");
                    }
                }
                else
                {
                    this.mATNR_EXTERNALField = value;
                    this.OnPropertyChanged("MATNR_EXTERNAL");
                }
            }
        }

        /// <summary>
        /// Version Number for MATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 49)]
        public string MATNR_VERSION
        {
            get
            {
                return this.mATNR_VERSIONField;
            }
            set
            {
                if ((this.mATNR_VERSIONField != null))
                {
                    if ((mATNR_VERSIONField.Equals(value) != true))
                    {
                        this.mATNR_VERSIONField = value;
                        this.OnPropertyChanged("MATNR_VERSION");
                    }
                }
                else
                {
                    this.mATNR_VERSIONField = value;
                    this.OnPropertyChanged("MATNR_VERSION");
                }
            }
        }

        /// <summary>
        /// External GUID for MATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 50)]
        public string MATNR_GUID
        {
            get
            {
                return this.mATNR_GUIDField;
            }
            set
            {
                if ((this.mATNR_GUIDField != null))
                {
                    if ((mATNR_GUIDField.Equals(value) != true))
                    {
                        this.mATNR_GUIDField = value;
                        this.OnPropertyChanged("MATNR_GUID");
                    }
                }
                else
                {
                    this.mATNR_GUIDField = value;
                    this.OnPropertyChanged("MATNR_GUID");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Reference Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP02", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 51)]
        public List<ORDERS05IDOCE1EDP01E1EDP02> E1EDP02
        {
            get
            {
                return this.e1EDP02Field;
            }
            set
            {
                if ((this.e1EDP02Field != null))
                {
                    if ((e1EDP02Field.Equals(value) != true))
                    {
                        this.e1EDP02Field = value;
                        this.OnPropertyChanged("E1EDP02");
                    }
                }
                else
                {
                    this.e1EDP02Field = value;
                    this.OnPropertyChanged("E1EDP02");
                }
            }
        }

        /// <summary>
        /// CU: Reference order item / instance in configuration
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 52)]
        public ORDERS05IDOCE1EDP01E1CUREF E1CUREF
        {
            get
            {
                return this.e1CUREFField;
            }
            set
            {
                if ((this.e1CUREFField != null))
                {
                    if ((e1CUREFField.Equals(value) != true))
                    {
                        this.e1CUREFField = value;
                        this.OnPropertyChanged("E1CUREF");
                    }
                }
                else
                {
                    this.e1CUREFField = value;
                    this.OnPropertyChanged("E1CUREF");
                }
            }
        }

        /// <summary>
        /// IDoc: Additionals
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1ADDI1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 53)]
        public List<ORDERS05IDOCE1EDP01E1ADDI1> E1ADDI1
        {
            get
            {
                return this.e1ADDI1Field;
            }
            set
            {
                if ((this.e1ADDI1Field != null))
                {
                    if ((e1ADDI1Field.Equals(value) != true))
                    {
                        this.e1ADDI1Field = value;
                        this.OnPropertyChanged("E1ADDI1");
                    }
                }
                else
                {
                    this.e1ADDI1Field = value;
                    this.OnPropertyChanged("E1ADDI1");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Date Segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP03", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 54)]
        public List<ORDERS05IDOCE1EDP01E1EDP03> E1EDP03
        {
            get
            {
                return this.e1EDP03Field;
            }
            set
            {
                if ((this.e1EDP03Field != null))
                {
                    if ((e1EDP03Field.Equals(value) != true))
                    {
                        this.e1EDP03Field = value;
                        this.OnPropertyChanged("E1EDP03");
                    }
                }
                else
                {
                    this.e1EDP03Field = value;
                    this.OnPropertyChanged("E1EDP03");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Taxes
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP04", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 55)]
        public List<ORDERS05IDOCE1EDP01E1EDP04> E1EDP04
        {
            get
            {
                return this.e1EDP04Field;
            }
            set
            {
                if ((this.e1EDP04Field != null))
                {
                    if ((e1EDP04Field.Equals(value) != true))
                    {
                        this.e1EDP04Field = value;
                        this.OnPropertyChanged("E1EDP04");
                    }
                }
                else
                {
                    this.e1EDP04Field = value;
                    this.OnPropertyChanged("E1EDP04");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Conditions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP05", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 56)]
        public List<ORDERS05IDOCE1EDP01E1EDP05> E1EDP05
        {
            get
            {
                return this.e1EDP05Field;
            }
            set
            {
                if ((this.e1EDP05Field != null))
                {
                    if ((e1EDP05Field.Equals(value) != true))
                    {
                        this.e1EDP05Field = value;
                        this.OnPropertyChanged("E1EDP05");
                    }
                }
                else
                {
                    this.e1EDP05Field = value;
                    this.OnPropertyChanged("E1EDP05");
                }
            }
        }

        /// <summary>
        /// IDoc schedule lines
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP20", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 57)]
        public List<ORDERS05IDOCE1EDP01E1EDP20> E1EDP20
        {
            get
            {
                return this.e1EDP20Field;
            }
            set
            {
                if ((this.e1EDP20Field != null))
                {
                    if ((e1EDP20Field.Equals(value) != true))
                    {
                        this.e1EDP20Field = value;
                        this.OnPropertyChanged("E1EDP20");
                    }
                }
                else
                {
                    this.e1EDP20Field = value;
                    this.OnPropertyChanged("E1EDP20");
                }
            }
        }

        /// <summary>
        /// IDoc: Doc.item partner information
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDPA1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 58)]
        public List<ORDERS05IDOCE1EDP01E1EDPA1> E1EDPA1
        {
            get
            {
                return this.e1EDPA1Field;
            }
            set
            {
                if ((this.e1EDPA1Field != null))
                {
                    if ((e1EDPA1Field.Equals(value) != true))
                    {
                        this.e1EDPA1Field = value;
                        this.OnPropertyChanged("E1EDPA1");
                    }
                }
                else
                {
                    this.e1EDPA1Field = value;
                    this.OnPropertyChanged("E1EDPA1");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Object Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP19", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 59)]
        public List<ORDERS05IDOCE1EDP01E1EDP19> E1EDP19
        {
            get
            {
                return this.e1EDP19Field;
            }
            set
            {
                if ((this.e1EDP19Field != null))
                {
                    if ((e1EDP19Field.Equals(value) != true))
                    {
                        this.e1EDP19Field = value;
                        this.OnPropertyChanged("E1EDP19");
                    }
                }
                else
                {
                    this.e1EDP19Field = value;
                    this.OnPropertyChanged("E1EDP19");
                }
            }
        }

        /// <summary>
        /// A&D: Material Exchange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 60)]
        public ORDERS05IDOCE1EDP01E1EDPAD E1EDPAD
        {
            get
            {
                return this.e1EDPADField;
            }
            set
            {
                if ((this.e1EDPADField != null))
                {
                    if ((e1EDPADField.Equals(value) != true))
                    {
                        this.e1EDPADField = value;
                        this.OnPropertyChanged("E1EDPAD");
                    }
                }
                else
                {
                    this.e1EDPADField = value;
                    this.OnPropertyChanged("E1EDPAD");
                }
            }
        }

        /// <summary>
        /// IDoc: Document item terms of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP17", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 61)]
        public List<ORDERS05IDOCE1EDP01E1EDP17> E1EDP17
        {
            get
            {
                return this.e1EDP17Field;
            }
            set
            {
                if ((this.e1EDP17Field != null))
                {
                    if ((e1EDP17Field.Equals(value) != true))
                    {
                        this.e1EDP17Field = value;
                        this.OnPropertyChanged("E1EDP17");
                    }
                }
                else
                {
                    this.e1EDP17Field = value;
                    this.OnPropertyChanged("E1EDP17");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Terms of Payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP18", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 62)]
        public List<ORDERS05IDOCE1EDP01E1EDP18> E1EDP18
        {
            get
            {
                return this.e1EDP18Field;
            }
            set
            {
                if ((this.e1EDP18Field != null))
                {
                    if ((e1EDP18Field.Equals(value) != true))
                    {
                        this.e1EDP18Field = value;
                        this.OnPropertyChanged("E1EDP18");
                    }
                }
                else
                {
                    this.e1EDP18Field = value;
                    this.OnPropertyChanged("E1EDP18");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Additional Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDP35", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 63)]
        public List<ORDERS05IDOCE1EDP01E1EDP35> E1EDP35
        {
            get
            {
                return this.e1EDP35Field;
            }
            set
            {
                if ((this.e1EDP35Field != null))
                {
                    if ((e1EDP35Field.Equals(value) != true))
                    {
                        this.e1EDP35Field = value;
                        this.OnPropertyChanged("E1EDP35");
                    }
                }
                else
                {
                    this.e1EDP35Field = value;
                    this.OnPropertyChanged("E1EDP35");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Text Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDPT1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 64)]
        public List<ORDERS05IDOCE1EDP01E1EDPT1> E1EDPT1
        {
            get
            {
                return this.e1EDPT1Field;
            }
            set
            {
                if ((this.e1EDPT1Field != null))
                {
                    if ((e1EDPT1Field.Equals(value) != true))
                    {
                        this.e1EDPT1Field = value;
                        this.OnPropertyChanged("E1EDPT1");
                    }
                }
                else
                {
                    this.e1EDPT1Field = value;
                    this.OnPropertyChanged("E1EDPT1");
                }
            }
        }

        /// <summary>
        /// SS: Service specifications general data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC01", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 65)]
        public List<ORDERS05IDOCE1EDP01E1EDC01> E1EDC01
        {
            get
            {
                return this.e1EDC01Field;
            }
            set
            {
                if ((this.e1EDC01Field != null))
                {
                    if ((e1EDC01Field.Equals(value) != true))
                    {
                        this.e1EDC01Field = value;
                        this.OnPropertyChanged("E1EDC01");
                    }
                }
                else
                {
                    this.e1EDC01Field = value;
                    this.OnPropertyChanged("E1EDC01");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool POSEXSpecified
        {
            get
            {
                return pOSEXFieldSpecified;
            }
            set
            {
                pOSEXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ACTIONSpecified
        {
            get
            {
                return aCTIONFieldSpecified;
            }
            set
            {
                aCTIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTYPSpecified
        {
            get
            {
                return pSTYPFieldSpecified;
            }
            set
            {
                pSTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KZABSSpecified
        {
            get
            {
                return kZABSFieldSpecified;
            }
            set
            {
                kZABSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENGESpecified
        {
            get
            {
                return mENGEFieldSpecified;
            }
            set
            {
                mENGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENEESpecified
        {
            get
            {
                return mENEEFieldSpecified;
            }
            set
            {
                mENEEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BMNG2Specified
        {
            get
            {
                return bMNG2FieldSpecified;
            }
            set
            {
                bMNG2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PMENESpecified
        {
            get
            {
                return pMENEFieldSpecified;
            }
            set
            {
                pMENEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABFTZSpecified
        {
            get
            {
                return aBFTZFieldSpecified;
            }
            set
            {
                aBFTZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VPREISpecified
        {
            get
            {
                return vPREIFieldSpecified;
            }
            set
            {
                vPREIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PEINHSpecified
        {
            get
            {
                return pEINHFieldSpecified;
            }
            set
            {
                pEINHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NETWRSpecified
        {
            get
            {
                return nETWRFieldSpecified;
            }
            set
            {
                nETWRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANETWSpecified
        {
            get
            {
                return aNETWFieldSpecified;
            }
            set
            {
                aNETWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SKFBPSpecified
        {
            get
            {
                return sKFBPFieldSpecified;
            }
            set
            {
                sKFBPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NTGEWSpecified
        {
            get
            {
                return nTGEWFieldSpecified;
            }
            set
            {
                nTGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GEWEISpecified
        {
            get
            {
                return gEWEIFieldSpecified;
            }
            set
            {
                gEWEIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EINKZSpecified
        {
            get
            {
                return eINKZFieldSpecified;
            }
            set
            {
                eINKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CURCYSpecified
        {
            get
            {
                return cURCYFieldSpecified;
            }
            set
            {
                cURCYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PREISSpecified
        {
            get
            {
                return pREISFieldSpecified;
            }
            set
            {
                pREISFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATKLSpecified
        {
            get
            {
                return mATKLFieldSpecified;
            }
            set
            {
                mATKLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UEPOSSpecified
        {
            get
            {
                return uEPOSFieldSpecified;
            }
            set
            {
                uEPOSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GRKORSpecified
        {
            get
            {
                return gRKORFieldSpecified;
            }
            set
            {
                gRKORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EVERSSpecified
        {
            get
            {
                return eVERSFieldSpecified;
            }
            set
            {
                eVERSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BPUMNSpecified
        {
            get
            {
                return bPUMNFieldSpecified;
            }
            set
            {
                bPUMNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BPUMZSpecified
        {
            get
            {
                return bPUMZFieldSpecified;
            }
            set
            {
                bPUMZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABGRUSpecified
        {
            get
            {
                return aBGRUFieldSpecified;
            }
            set
            {
                aBGRUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABGRTSpecified
        {
            get
            {
                return aBGRTFieldSpecified;
            }
            set
            {
                aBGRTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANTLFSpecified
        {
            get
            {
                return aNTLFFieldSpecified;
            }
            set
            {
                aNTLFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FIXMGSpecified
        {
            get
            {
                return fIXMGFieldSpecified;
            }
            set
            {
                fIXMGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KZAZUSpecified
        {
            get
            {
                return kZAZUFieldSpecified;
            }
            set
            {
                kZAZUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BRGEWSpecified
        {
            get
            {
                return bRGEWFieldSpecified;
            }
            set
            {
                bRGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTYVSpecified
        {
            get
            {
                return pSTYVFieldSpecified;
            }
            set
            {
                pSTYVFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EMPSTSpecified
        {
            get
            {
                return eMPSTFieldSpecified;
            }
            set
            {
                eMPSTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABTNRSpecified
        {
            get
            {
                return aBTNRFieldSpecified;
            }
            set
            {
                aBTNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABRVWSpecified
        {
            get
            {
                return aBRVWFieldSpecified;
            }
            set
            {
                aBRVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WERKSSpecified
        {
            get
            {
                return wERKSFieldSpecified;
            }
            set
            {
                wERKSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LPRIOSpecified
        {
            get
            {
                return lPRIOFieldSpecified;
            }
            set
            {
                lPRIOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LPRIO_BEZSpecified
        {
            get
            {
                return lPRIO_BEZFieldSpecified;
            }
            set
            {
                lPRIO_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ROUTESpecified
        {
            get
            {
                return rOUTEFieldSpecified;
            }
            set
            {
                rOUTEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ROUTE_BEZSpecified
        {
            get
            {
                return rOUTE_BEZFieldSpecified;
            }
            set
            {
                rOUTE_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LGORTSpecified
        {
            get
            {
                return lGORTFieldSpecified;
            }
            set
            {
                lGORTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VSTELSpecified
        {
            get
            {
                return vSTELFieldSpecified;
            }
            set
            {
                vSTELFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DELCOSpecified
        {
            get
            {
                return dELCOFieldSpecified;
            }
            set
            {
                dELCOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNRSpecified
        {
            get
            {
                return mATNRFieldSpecified;
            }
            set
            {
                mATNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VALTGSpecified
        {
            get
            {
                return vALTGFieldSpecified;
            }
            set
            {
                vALTGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HIPOSSpecified
        {
            get
            {
                return hIPOSFieldSpecified;
            }
            set
            {
                hIPOSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HIEVWSpecified
        {
            get
            {
                return hIEVWFieldSpecified;
            }
            set
            {
                hIEVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool POSGUIDSpecified
        {
            get
            {
                return pOSGUIDFieldSpecified;
            }
            set
            {
                pOSGUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_EXTERNALSpecified
        {
            get
            {
                return mATNR_EXTERNALFieldSpecified;
            }
            set
            {
                mATNR_EXTERNALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_VERSIONSpecified
        {
            get
            {
                return mATNR_VERSIONFieldSpecified;
            }
            set
            {
                mATNR_VERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_GUIDSpecified
        {
            get
            {
                return mATNR_GUIDFieldSpecified;
            }
            set
            {
                mATNR_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP02Specified
        {
            get
            {
                return e1EDP02FieldSpecified;
            }
            set
            {
                e1EDP02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUREFSpecified
        {
            get
            {
                return e1CUREFFieldSpecified;
            }
            set
            {
                e1CUREFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1ADDI1Specified
        {
            get
            {
                return e1ADDI1FieldSpecified;
            }
            set
            {
                e1ADDI1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP03Specified
        {
            get
            {
                return e1EDP03FieldSpecified;
            }
            set
            {
                e1EDP03FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP04Specified
        {
            get
            {
                return e1EDP04FieldSpecified;
            }
            set
            {
                e1EDP04FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP05Specified
        {
            get
            {
                return e1EDP05FieldSpecified;
            }
            set
            {
                e1EDP05FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP20Specified
        {
            get
            {
                return e1EDP20FieldSpecified;
            }
            set
            {
                e1EDP20FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPA1Specified
        {
            get
            {
                return e1EDPA1FieldSpecified;
            }
            set
            {
                e1EDPA1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP19Specified
        {
            get
            {
                return e1EDP19FieldSpecified;
            }
            set
            {
                e1EDP19FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPADSpecified
        {
            get
            {
                return e1EDPADFieldSpecified;
            }
            set
            {
                e1EDPADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP17Specified
        {
            get
            {
                return e1EDP17FieldSpecified;
            }
            set
            {
                e1EDP17FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP18Specified
        {
            get
            {
                return e1EDP18FieldSpecified;
            }
            set
            {
                e1EDP18FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDP35Specified
        {
            get
            {
                return e1EDP35FieldSpecified;
            }
            set
            {
                e1EDP35FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPT1Specified
        {
            get
            {
                return e1EDPT1FieldSpecified;
            }
            set
            {
                e1EDPT1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC01Specified
        {
            get
            {
                return e1EDC01FieldSpecified;
            }
            set
            {
                e1EDC01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc: Document Item Reference Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP02 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string bELNRField;

        private string zEILEField;

        private string dATUMField;

        private string uZEITField;

        private string bSARKField;

        private string iHREZField;

        private ORDERS05IDOCE1EDP01E1EDP02SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool bELNRFieldSpecified;

        private bool zEILEFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool bSARKFieldSpecified;

        private bool iHREZFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier reference document
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC document number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string BELNR
        {
            get
            {
                return this.bELNRField;
            }
            set
            {
                if ((this.bELNRField != null))
                {
                    if ((bELNRField.Equals(value) != true))
                    {
                        this.bELNRField = value;
                        this.OnPropertyChanged("BELNR");
                    }
                }
                else
                {
                    this.bELNRField = value;
                    this.OnPropertyChanged("BELNR");
                }
            }
        }

        /// <summary>
        /// Item number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string ZEILE
        {
            get
            {
                return this.zEILEField;
            }
            set
            {
                if ((this.zEILEField != null))
                {
                    if ((zEILEField.Equals(value) != true))
                    {
                        this.zEILEField = value;
                        this.OnPropertyChanged("ZEILE");
                    }
                }
                else
                {
                    this.zEILEField = value;
                    this.OnPropertyChanged("ZEILE");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        /// <summary>
        /// IDOC organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string BSARK
        {
            get
            {
                return this.bSARKField;
            }
            set
            {
                if ((this.bSARKField != null))
                {
                    if ((bSARKField.Equals(value) != true))
                    {
                        this.bSARKField = value;
                        this.OnPropertyChanged("BSARK");
                    }
                }
                else
                {
                    this.bSARKField = value;
                    this.OnPropertyChanged("BSARK");
                }
            }
        }

        /// <summary>
        /// Your reference (Partner)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string IHREZ
        {
            get
            {
                return this.iHREZField;
            }
            set
            {
                if ((this.iHREZField != null))
                {
                    if ((iHREZField.Equals(value) != true))
                    {
                        this.iHREZField = value;
                        this.OnPropertyChanged("IHREZ");
                    }
                }
                else
                {
                    this.iHREZField = value;
                    this.OnPropertyChanged("IHREZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP02SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP02));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BELNRSpecified
        {
            get
            {
                return bELNRFieldSpecified;
            }
            set
            {
                bELNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZEILESpecified
        {
            get
            {
                return zEILEFieldSpecified;
            }
            set
            {
                zEILEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BSARKSpecified
        {
            get
            {
                return bSARKFieldSpecified;
            }
            set
            {
                bSARKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IHREZSpecified
        {
            get
            {
                return iHREZFieldSpecified;
            }
            set
            {
                iHREZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP02 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP02 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP02);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP02 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP02 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP02)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP02 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP02 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP02);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP02 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP02 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP02 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP02 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP02SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// CU: Reference order item / instance in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1CUREF : System.ComponentModel.INotifyPropertyChanged
    {

        private string pOSEXField;

        private string cONFIG_IDField;

        private string iNST_IDField;

        private ORDERS05IDOCE1EDP01E1CUREFSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pOSEXFieldSpecified;

        private bool cONFIG_IDFieldSpecified;

        private bool iNST_IDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Character field of length 6
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string POSEX
        {
            get
            {
                return this.pOSEXField;
            }
            set
            {
                if ((this.pOSEXField != null))
                {
                    if ((pOSEXField.Equals(value) != true))
                    {
                        this.pOSEXField = value;
                        this.OnPropertyChanged("POSEX");
                    }
                }
                else
                {
                    this.pOSEXField = value;
                    this.OnPropertyChanged("POSEX");
                }
            }
        }

        /// <summary>
        /// Character field of length 6
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CONFIG_ID
        {
            get
            {
                return this.cONFIG_IDField;
            }
            set
            {
                if ((this.cONFIG_IDField != null))
                {
                    if ((cONFIG_IDField.Equals(value) != true))
                    {
                        this.cONFIG_IDField = value;
                        this.OnPropertyChanged("CONFIG_ID");
                    }
                }
                else
                {
                    this.cONFIG_IDField = value;
                    this.OnPropertyChanged("CONFIG_ID");
                }
            }
        }

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string INST_ID
        {
            get
            {
                return this.iNST_IDField;
            }
            set
            {
                if ((this.iNST_IDField != null))
                {
                    if ((iNST_IDField.Equals(value) != true))
                    {
                        this.iNST_IDField = value;
                        this.OnPropertyChanged("INST_ID");
                    }
                }
                else
                {
                    this.iNST_IDField = value;
                    this.OnPropertyChanged("INST_ID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1CUREFSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1CUREF));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool POSEXSpecified
        {
            get
            {
                return pOSEXFieldSpecified;
            }
            set
            {
                pOSEXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CONFIG_IDSpecified
        {
            get
            {
                return cONFIG_IDFieldSpecified;
            }
            set
            {
                cONFIG_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool INST_IDSpecified
        {
            get
            {
                return iNST_IDFieldSpecified;
            }
            set
            {
                iNST_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1CUREF object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1CUREF object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1CUREF object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1CUREF obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1CUREF);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1CUREF obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1CUREF Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1CUREF)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1CUREF object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1CUREF object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1CUREF object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1CUREF obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1CUREF);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1CUREF obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1CUREF obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1CUREF LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1CUREF LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1CUREFSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Additionals
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1ADDI1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string aDDIMATNRField;

        private string aDDINUMBERField;

        private string aDDIVKMEField;

        private string aDDIFMField;

        private string aDDIFM_TXTField;

        private string aDDIKLARTField;

        private string aDDIKLART_TXTField;

        private string aDDICLASSField;

        private string aDDICLASS_TXTField;

        private string aDDIIDOCField;

        private string aDDIMATNR_EXTERNALField;

        private string aDDIMATNR_VERSIONField;

        private string aDDIMATNR_GUIDField;

        private ORDERS05IDOCE1EDP01E1ADDI1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool aDDIMATNRFieldSpecified;

        private bool aDDINUMBERFieldSpecified;

        private bool aDDIVKMEFieldSpecified;

        private bool aDDIFMFieldSpecified;

        private bool aDDIFM_TXTFieldSpecified;

        private bool aDDIKLARTFieldSpecified;

        private bool aDDIKLART_TXTFieldSpecified;

        private bool aDDICLASSFieldSpecified;

        private bool aDDICLASS_TXTFieldSpecified;

        private bool aDDIIDOCFieldSpecified;

        private bool aDDIMATNR_EXTERNALFieldSpecified;

        private bool aDDIMATNR_VERSIONFieldSpecified;

        private bool aDDIMATNR_GUIDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Material number for additional
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ADDIMATNR
        {
            get
            {
                return this.aDDIMATNRField;
            }
            set
            {
                if ((this.aDDIMATNRField != null))
                {
                    if ((aDDIMATNRField.Equals(value) != true))
                    {
                        this.aDDIMATNRField = value;
                        this.OnPropertyChanged("ADDIMATNR");
                    }
                }
                else
                {
                    this.aDDIMATNRField = value;
                    this.OnPropertyChanged("ADDIMATNR");
                }
            }
        }

        /// <summary>
        /// Number of additionals
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ADDINUMBER
        {
            get
            {
                return this.aDDINUMBERField;
            }
            set
            {
                if ((this.aDDINUMBERField != null))
                {
                    if ((aDDINUMBERField.Equals(value) != true))
                    {
                        this.aDDINUMBERField = value;
                        this.OnPropertyChanged("ADDINUMBER");
                    }
                }
                else
                {
                    this.aDDINUMBERField = value;
                    this.OnPropertyChanged("ADDINUMBER");
                }
            }
        }

        /// <summary>
        /// Sales unit of the material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string ADDIVKME
        {
            get
            {
                return this.aDDIVKMEField;
            }
            set
            {
                if ((this.aDDIVKMEField != null))
                {
                    if ((aDDIVKMEField.Equals(value) != true))
                    {
                        this.aDDIVKMEField = value;
                        this.OnPropertyChanged("ADDIVKME");
                    }
                }
                else
                {
                    this.aDDIVKMEField = value;
                    this.OnPropertyChanged("ADDIVKME");
                }
            }
        }

        /// <summary>
        /// Procedure for additionals
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ADDIFM
        {
            get
            {
                return this.aDDIFMField;
            }
            set
            {
                if ((this.aDDIFMField != null))
                {
                    if ((aDDIFMField.Equals(value) != true))
                    {
                        this.aDDIFMField = value;
                        this.OnPropertyChanged("ADDIFM");
                    }
                }
                else
                {
                    this.aDDIFMField = value;
                    this.OnPropertyChanged("ADDIFM");
                }
            }
        }

        /// <summary>
        /// Additionals: Description for the procedure for additionals
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ADDIFM_TXT
        {
            get
            {
                return this.aDDIFM_TXTField;
            }
            set
            {
                if ((this.aDDIFM_TXTField != null))
                {
                    if ((aDDIFM_TXTField.Equals(value) != true))
                    {
                        this.aDDIFM_TXTField = value;
                        this.OnPropertyChanged("ADDIFM_TXT");
                    }
                }
                else
                {
                    this.aDDIFM_TXTField = value;
                    this.OnPropertyChanged("ADDIFM_TXT");
                }
            }
        }

        /// <summary>
        /// Class type displayed when editing additionals
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string ADDIKLART
        {
            get
            {
                return this.aDDIKLARTField;
            }
            set
            {
                if ((this.aDDIKLARTField != null))
                {
                    if ((aDDIKLARTField.Equals(value) != true))
                    {
                        this.aDDIKLARTField = value;
                        this.OnPropertyChanged("ADDIKLART");
                    }
                }
                else
                {
                    this.aDDIKLARTField = value;
                    this.OnPropertyChanged("ADDIKLART");
                }
            }
        }

        /// <summary>
        /// Text describing class type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string ADDIKLART_TXT
        {
            get
            {
                return this.aDDIKLART_TXTField;
            }
            set
            {
                if ((this.aDDIKLART_TXTField != null))
                {
                    if ((aDDIKLART_TXTField.Equals(value) != true))
                    {
                        this.aDDIKLART_TXTField = value;
                        this.OnPropertyChanged("ADDIKLART_TXT");
                    }
                }
                else
                {
                    this.aDDIKLART_TXTField = value;
                    this.OnPropertyChanged("ADDIKLART_TXT");
                }
            }
        }

        /// <summary>
        /// Class with additionals assigned to its elements
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string ADDICLASS
        {
            get
            {
                return this.aDDICLASSField;
            }
            set
            {
                if ((this.aDDICLASSField != null))
                {
                    if ((aDDICLASSField.Equals(value) != true))
                    {
                        this.aDDICLASSField = value;
                        this.OnPropertyChanged("ADDICLASS");
                    }
                }
                else
                {
                    this.aDDICLASSField = value;
                    this.OnPropertyChanged("ADDICLASS");
                }
            }
        }

        /// <summary>
        /// Keywords
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string ADDICLASS_TXT
        {
            get
            {
                return this.aDDICLASS_TXTField;
            }
            set
            {
                if ((this.aDDICLASS_TXTField != null))
                {
                    if ((aDDICLASS_TXTField.Equals(value) != true))
                    {
                        this.aDDICLASS_TXTField = value;
                        this.OnPropertyChanged("ADDICLASS_TXT");
                    }
                }
                else
                {
                    this.aDDICLASS_TXTField = value;
                    this.OnPropertyChanged("ADDICLASS_TXT");
                }
            }
        }

        /// <summary>
        /// Indicator which refers to separate additionals IDoc
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string ADDIIDOC
        {
            get
            {
                return this.aDDIIDOCField;
            }
            set
            {
                if ((this.aDDIIDOCField != null))
                {
                    if ((aDDIIDOCField.Equals(value) != true))
                    {
                        this.aDDIIDOCField = value;
                        this.OnPropertyChanged("ADDIIDOC");
                    }
                }
                else
                {
                    this.aDDIIDOCField = value;
                    this.OnPropertyChanged("ADDIIDOC");
                }
            }
        }

        /// <summary>
        /// Long Material Number for ADDIMATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string ADDIMATNR_EXTERNAL
        {
            get
            {
                return this.aDDIMATNR_EXTERNALField;
            }
            set
            {
                if ((this.aDDIMATNR_EXTERNALField != null))
                {
                    if ((aDDIMATNR_EXTERNALField.Equals(value) != true))
                    {
                        this.aDDIMATNR_EXTERNALField = value;
                        this.OnPropertyChanged("ADDIMATNR_EXTERNAL");
                    }
                }
                else
                {
                    this.aDDIMATNR_EXTERNALField = value;
                    this.OnPropertyChanged("ADDIMATNR_EXTERNAL");
                }
            }
        }

        /// <summary>
        /// Version Number for ADDIMATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string ADDIMATNR_VERSION
        {
            get
            {
                return this.aDDIMATNR_VERSIONField;
            }
            set
            {
                if ((this.aDDIMATNR_VERSIONField != null))
                {
                    if ((aDDIMATNR_VERSIONField.Equals(value) != true))
                    {
                        this.aDDIMATNR_VERSIONField = value;
                        this.OnPropertyChanged("ADDIMATNR_VERSION");
                    }
                }
                else
                {
                    this.aDDIMATNR_VERSIONField = value;
                    this.OnPropertyChanged("ADDIMATNR_VERSION");
                }
            }
        }

        /// <summary>
        /// External GUID for ADDIMATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string ADDIMATNR_GUID
        {
            get
            {
                return this.aDDIMATNR_GUIDField;
            }
            set
            {
                if ((this.aDDIMATNR_GUIDField != null))
                {
                    if ((aDDIMATNR_GUIDField.Equals(value) != true))
                    {
                        this.aDDIMATNR_GUIDField = value;
                        this.OnPropertyChanged("ADDIMATNR_GUID");
                    }
                }
                else
                {
                    this.aDDIMATNR_GUIDField = value;
                    this.OnPropertyChanged("ADDIMATNR_GUID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1ADDI1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1ADDI1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool ADDIMATNRSpecified
        {
            get
            {
                return aDDIMATNRFieldSpecified;
            }
            set
            {
                aDDIMATNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDINUMBERSpecified
        {
            get
            {
                return aDDINUMBERFieldSpecified;
            }
            set
            {
                aDDINUMBERFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIVKMESpecified
        {
            get
            {
                return aDDIVKMEFieldSpecified;
            }
            set
            {
                aDDIVKMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIFMSpecified
        {
            get
            {
                return aDDIFMFieldSpecified;
            }
            set
            {
                aDDIFMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIFM_TXTSpecified
        {
            get
            {
                return aDDIFM_TXTFieldSpecified;
            }
            set
            {
                aDDIFM_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIKLARTSpecified
        {
            get
            {
                return aDDIKLARTFieldSpecified;
            }
            set
            {
                aDDIKLARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIKLART_TXTSpecified
        {
            get
            {
                return aDDIKLART_TXTFieldSpecified;
            }
            set
            {
                aDDIKLART_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDICLASSSpecified
        {
            get
            {
                return aDDICLASSFieldSpecified;
            }
            set
            {
                aDDICLASSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDICLASS_TXTSpecified
        {
            get
            {
                return aDDICLASS_TXTFieldSpecified;
            }
            set
            {
                aDDICLASS_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIIDOCSpecified
        {
            get
            {
                return aDDIIDOCFieldSpecified;
            }
            set
            {
                aDDIIDOCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIMATNR_EXTERNALSpecified
        {
            get
            {
                return aDDIMATNR_EXTERNALFieldSpecified;
            }
            set
            {
                aDDIMATNR_EXTERNALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIMATNR_VERSIONSpecified
        {
            get
            {
                return aDDIMATNR_VERSIONFieldSpecified;
            }
            set
            {
                aDDIMATNR_VERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ADDIMATNR_GUIDSpecified
        {
            get
            {
                return aDDIMATNR_GUIDFieldSpecified;
            }
            set
            {
                aDDIMATNR_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1ADDI1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1ADDI1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1ADDI1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1ADDI1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1ADDI1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1ADDI1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1ADDI1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1ADDI1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1ADDI1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1ADDI1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1ADDI1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1ADDI1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1ADDI1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1ADDI1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1ADDI1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1ADDI1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1ADDI1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1ADDI1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Date Segment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP03 : System.ComponentModel.INotifyPropertyChanged
    {

        private string iDDATField;

        private string dATUMField;

        private string uZEITField;

        private ORDERS05IDOCE1EDP01E1EDP03SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iDDATFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for IDOC date segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string IDDAT
        {
            get
            {
                return this.iDDATField;
            }
            set
            {
                if ((this.iDDATField != null))
                {
                    if ((iDDATField.Equals(value) != true))
                    {
                        this.iDDATField = value;
                        this.OnPropertyChanged("IDDAT");
                    }
                }
                else
                {
                    this.iDDATField = value;
                    this.OnPropertyChanged("IDDAT");
                }
            }
        }

        /// <summary>
        /// Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP03SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP03));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool IDDATSpecified
        {
            get
            {
                return iDDATFieldSpecified;
            }
            set
            {
                iDDATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP03 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP03 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP03);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP03 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP03 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP03)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP03 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP03 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP03);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP03 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP03 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP03 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP03 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP03SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Taxes
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP04 : System.ComponentModel.INotifyPropertyChanged
    {

        private string mWSKZField;

        private string mSATZField;

        private string mWSBTField;

        private string tXJCDField;

        private string kTEXTField;

        private ORDERS05IDOCE1EDP01E1EDP04SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool mWSBTFieldSpecified;

        private bool tXJCDFieldSpecified;

        private bool kTEXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        /// <summary>
        /// Value added tax amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string MWSBT
        {
            get
            {
                return this.mWSBTField;
            }
            set
            {
                if ((this.mWSBTField != null))
                {
                    if ((mWSBTField.Equals(value) != true))
                    {
                        this.mWSBTField = value;
                        this.OnPropertyChanged("MWSBT");
                    }
                }
                else
                {
                    this.mWSBTField = value;
                    this.OnPropertyChanged("MWSBT");
                }
            }
        }

        /// <summary>
        /// Tax Jurisdiction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TXJCD
        {
            get
            {
                return this.tXJCDField;
            }
            set
            {
                if ((this.tXJCDField != null))
                {
                    if ((tXJCDField.Equals(value) != true))
                    {
                        this.tXJCDField = value;
                        this.OnPropertyChanged("TXJCD");
                    }
                }
                else
                {
                    this.tXJCDField = value;
                    this.OnPropertyChanged("TXJCD");
                }
            }
        }

        /// <summary>
        /// Text Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KTEXT
        {
            get
            {
                return this.kTEXTField;
            }
            set
            {
                if ((this.kTEXTField != null))
                {
                    if ((kTEXTField.Equals(value) != true))
                    {
                        this.kTEXTField = value;
                        this.OnPropertyChanged("KTEXT");
                    }
                }
                else
                {
                    this.kTEXTField = value;
                    this.OnPropertyChanged("KTEXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP04SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP04));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSBTSpecified
        {
            get
            {
                return mWSBTFieldSpecified;
            }
            set
            {
                mWSBTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TXJCDSpecified
        {
            get
            {
                return tXJCDFieldSpecified;
            }
            set
            {
                tXJCDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTEXTSpecified
        {
            get
            {
                return kTEXTFieldSpecified;
            }
            set
            {
                kTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP04 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP04 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP04);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP04 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP04 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP04)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP04 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP04 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP04);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP04 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP04 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP04 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP04 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP04SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Conditions
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP05 : System.ComponentModel.INotifyPropertyChanged
    {

        private string aLCKZField;

        private string kSCHLField;

        private string kOTXTField;

        private string bETRGField;

        private string kPERCField;

        private string kRATEField;

        private string uPRBSField;

        private string mEAUNField;

        private string kOBTRField;

        private string mENGEField;

        private string pREISField;

        private string mWSKZField;

        private string mSATZField;

        private string kOEINField;

        private string cURTPField;

        private string kOBASField;

        private List<ORDERS05IDOCE1EDP01E1EDP05E1EDPS5> e1EDPS5Field;

        private ORDERS05IDOCE1EDP01E1EDP05SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool aLCKZFieldSpecified;

        private bool kSCHLFieldSpecified;

        private bool kOTXTFieldSpecified;

        private bool bETRGFieldSpecified;

        private bool kPERCFieldSpecified;

        private bool kRATEFieldSpecified;

        private bool uPRBSFieldSpecified;

        private bool mEAUNFieldSpecified;

        private bool kOBTRFieldSpecified;

        private bool mENGEFieldSpecified;

        private bool pREISFieldSpecified;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool kOEINFieldSpecified;

        private bool cURTPFieldSpecified;

        private bool kOBASFieldSpecified;

        private bool e1EDPS5FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDP05 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDP05()
        {
            this.e1EDPS5Field = new List<ORDERS05IDOCE1EDP01E1EDP05E1EDPS5>();
        }

        /// <summary>
        /// Surcharge or discount indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ALCKZ
        {
            get
            {
                return this.aLCKZField;
            }
            set
            {
                if ((this.aLCKZField != null))
                {
                    if ((aLCKZField.Equals(value) != true))
                    {
                        this.aLCKZField = value;
                        this.OnPropertyChanged("ALCKZ");
                    }
                }
                else
                {
                    this.aLCKZField = value;
                    this.OnPropertyChanged("ALCKZ");
                }
            }
        }

        /// <summary>
        /// Condition type (coded)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string KSCHL
        {
            get
            {
                return this.kSCHLField;
            }
            set
            {
                if ((this.kSCHLField != null))
                {
                    if ((kSCHLField.Equals(value) != true))
                    {
                        this.kSCHLField = value;
                        this.OnPropertyChanged("KSCHL");
                    }
                }
                else
                {
                    this.kSCHLField = value;
                    this.OnPropertyChanged("KSCHL");
                }
            }
        }

        /// <summary>
        /// Condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string KOTXT
        {
            get
            {
                return this.kOTXTField;
            }
            set
            {
                if ((this.kOTXTField != null))
                {
                    if ((kOTXTField.Equals(value) != true))
                    {
                        this.kOTXTField = value;
                        this.OnPropertyChanged("KOTXT");
                    }
                }
                else
                {
                    this.kOTXTField = value;
                    this.OnPropertyChanged("KOTXT");
                }
            }
        }

        /// <summary>
        /// Fixed surcharge/discount on total gross
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BETRG
        {
            get
            {
                return this.bETRGField;
            }
            set
            {
                if ((this.bETRGField != null))
                {
                    if ((bETRGField.Equals(value) != true))
                    {
                        this.bETRGField = value;
                        this.OnPropertyChanged("BETRG");
                    }
                }
                else
                {
                    this.bETRGField = value;
                    this.OnPropertyChanged("BETRG");
                }
            }
        }

        /// <summary>
        /// Condition percentage rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KPERC
        {
            get
            {
                return this.kPERCField;
            }
            set
            {
                if ((this.kPERCField != null))
                {
                    if ((kPERCField.Equals(value) != true))
                    {
                        this.kPERCField = value;
                        this.OnPropertyChanged("KPERC");
                    }
                }
                else
                {
                    this.kPERCField = value;
                    this.OnPropertyChanged("KPERC");
                }
            }
        }

        /// <summary>
        /// Condition record per unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string KRATE
        {
            get
            {
                return this.kRATEField;
            }
            set
            {
                if ((this.kRATEField != null))
                {
                    if ((kRATEField.Equals(value) != true))
                    {
                        this.kRATEField = value;
                        this.OnPropertyChanged("KRATE");
                    }
                }
                else
                {
                    this.kRATEField = value;
                    this.OnPropertyChanged("KRATE");
                }
            }
        }

        /// <summary>
        /// Price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string UPRBS
        {
            get
            {
                return this.uPRBSField;
            }
            set
            {
                if ((this.uPRBSField != null))
                {
                    if ((uPRBSField.Equals(value) != true))
                    {
                        this.uPRBSField = value;
                        this.OnPropertyChanged("UPRBS");
                    }
                }
                else
                {
                    this.uPRBSField = value;
                    this.OnPropertyChanged("UPRBS");
                }
            }
        }

        /// <summary>
        /// Unit of measurement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string MEAUN
        {
            get
            {
                return this.mEAUNField;
            }
            set
            {
                if ((this.mEAUNField != null))
                {
                    if ((mEAUNField.Equals(value) != true))
                    {
                        this.mEAUNField = value;
                        this.OnPropertyChanged("MEAUN");
                    }
                }
                else
                {
                    this.mEAUNField = value;
                    this.OnPropertyChanged("MEAUN");
                }
            }
        }

        /// <summary>
        /// IDoc condition end amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string KOBTR
        {
            get
            {
                return this.kOBTRField;
            }
            set
            {
                if ((this.kOBTRField != null))
                {
                    if ((kOBTRField.Equals(value) != true))
                    {
                        this.kOBTRField = value;
                        this.OnPropertyChanged("KOBTR");
                    }
                }
                else
                {
                    this.kOBTRField = value;
                    this.OnPropertyChanged("KOBTR");
                }
            }
        }

        /// <summary>
        /// Price scale quantity (SPEC2000)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string MENGE
        {
            get
            {
                return this.mENGEField;
            }
            set
            {
                if ((this.mENGEField != null))
                {
                    if ((mENGEField.Equals(value) != true))
                    {
                        this.mENGEField = value;
                        this.OnPropertyChanged("MENGE");
                    }
                }
                else
                {
                    this.mENGEField = value;
                    this.OnPropertyChanged("MENGE");
                }
            }
        }

        /// <summary>
        /// Price by unit of measure (SPEC2000)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string PREIS
        {
            get
            {
                return this.pREISField;
            }
            set
            {
                if ((this.pREISField != null))
                {
                    if ((pREISField.Equals(value) != true))
                    {
                        this.pREISField = value;
                        this.OnPropertyChanged("PREIS");
                    }
                }
                else
                {
                    this.pREISField = value;
                    this.OnPropertyChanged("PREIS");
                }
            }
        }

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string KOEIN
        {
            get
            {
                return this.kOEINField;
            }
            set
            {
                if ((this.kOEINField != null))
                {
                    if ((kOEINField.Equals(value) != true))
                    {
                        this.kOEINField = value;
                        this.OnPropertyChanged("KOEIN");
                    }
                }
                else
                {
                    this.kOEINField = value;
                    this.OnPropertyChanged("KOEIN");
                }
            }
        }

        /// <summary>
        /// Currency Type and Valuation View
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string CURTP
        {
            get
            {
                return this.cURTPField;
            }
            set
            {
                if ((this.cURTPField != null))
                {
                    if ((cURTPField.Equals(value) != true))
                    {
                        this.cURTPField = value;
                        this.OnPropertyChanged("CURTP");
                    }
                }
                else
                {
                    this.cURTPField = value;
                    this.OnPropertyChanged("CURTP");
                }
            }
        }

        /// <summary>
        /// Base value to which condition refers
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string KOBAS
        {
            get
            {
                return this.kOBASField;
            }
            set
            {
                if ((this.kOBASField != null))
                {
                    if ((kOBASField.Equals(value) != true))
                    {
                        this.kOBASField = value;
                        this.OnPropertyChanged("KOBAS");
                    }
                }
                else
                {
                    this.kOBASField = value;
                    this.OnPropertyChanged("KOBAS");
                }
            }
        }

        /// <summary>
        /// A&D: Price Scale (Quantity)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDPS5", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public List<ORDERS05IDOCE1EDP01E1EDP05E1EDPS5> E1EDPS5
        {
            get
            {
                return this.e1EDPS5Field;
            }
            set
            {
                if ((this.e1EDPS5Field != null))
                {
                    if ((e1EDPS5Field.Equals(value) != true))
                    {
                        this.e1EDPS5Field = value;
                        this.OnPropertyChanged("E1EDPS5");
                    }
                }
                else
                {
                    this.e1EDPS5Field = value;
                    this.OnPropertyChanged("E1EDPS5");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP05SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP05));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool ALCKZSpecified
        {
            get
            {
                return aLCKZFieldSpecified;
            }
            set
            {
                aLCKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KSCHLSpecified
        {
            get
            {
                return kSCHLFieldSpecified;
            }
            set
            {
                kSCHLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOTXTSpecified
        {
            get
            {
                return kOTXTFieldSpecified;
            }
            set
            {
                kOTXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BETRGSpecified
        {
            get
            {
                return bETRGFieldSpecified;
            }
            set
            {
                bETRGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KPERCSpecified
        {
            get
            {
                return kPERCFieldSpecified;
            }
            set
            {
                kPERCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KRATESpecified
        {
            get
            {
                return kRATEFieldSpecified;
            }
            set
            {
                kRATEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UPRBSSpecified
        {
            get
            {
                return uPRBSFieldSpecified;
            }
            set
            {
                uPRBSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MEAUNSpecified
        {
            get
            {
                return mEAUNFieldSpecified;
            }
            set
            {
                mEAUNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOBTRSpecified
        {
            get
            {
                return kOBTRFieldSpecified;
            }
            set
            {
                kOBTRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENGESpecified
        {
            get
            {
                return mENGEFieldSpecified;
            }
            set
            {
                mENGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PREISSpecified
        {
            get
            {
                return pREISFieldSpecified;
            }
            set
            {
                pREISFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOEINSpecified
        {
            get
            {
                return kOEINFieldSpecified;
            }
            set
            {
                kOEINFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CURTPSpecified
        {
            get
            {
                return cURTPFieldSpecified;
            }
            set
            {
                cURTPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOBASSpecified
        {
            get
            {
                return kOBASFieldSpecified;
            }
            set
            {
                kOBASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPS5Specified
        {
            get
            {
                return e1EDPS5FieldSpecified;
            }
            set
            {
                e1EDPS5FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP05 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP05 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP05);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP05 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP05)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP05 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP05 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP05);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP05 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP05 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// A&D: Price Scale (Quantity)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 : System.ComponentModel.INotifyPropertyChanged
    {

        private string kSTBMField;

        private string kBETRField;

        private ORDERS05IDOCE1EDP01E1EDP05E1EDPS5SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool kSTBMFieldSpecified;

        private bool kBETRFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Condition scale quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string KSTBM
        {
            get
            {
                return this.kSTBMField;
            }
            set
            {
                if ((this.kSTBMField != null))
                {
                    if ((kSTBMField.Equals(value) != true))
                    {
                        this.kSTBMField = value;
                        this.OnPropertyChanged("KSTBM");
                    }
                }
                else
                {
                    this.kSTBMField = value;
                    this.OnPropertyChanged("KSTBM");
                }
            }
        }

        /// <summary>
        /// Rate (condition amount or percentage)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string KBETR
        {
            get
            {
                return this.kBETRField;
            }
            set
            {
                if ((this.kBETRField != null))
                {
                    if ((kBETRField.Equals(value) != true))
                    {
                        this.kBETRField = value;
                        this.OnPropertyChanged("KBETR");
                    }
                }
                else
                {
                    this.kBETRField = value;
                    this.OnPropertyChanged("KBETR");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP05E1EDPS5SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP05E1EDPS5));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool KSTBMSpecified
        {
            get
            {
                return kSTBMFieldSpecified;
            }
            set
            {
                kSTBMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KBETRSpecified
        {
            get
            {
                return kBETRFieldSpecified;
            }
            set
            {
                kBETRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP05E1EDPS5);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP05E1EDPS5)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP05E1EDPS5);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP05E1EDPS5 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP05E1EDPS5SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP05SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc schedule lines
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP20 : System.ComponentModel.INotifyPropertyChanged
    {

        private string wMENGField;

        private string aMENGField;

        private string eDATUField;

        private string eZEITField;

        private string eDATU_OLDField;

        private string eZEIT_OLDField;

        private string aCTIONField;

        private ORDERS05IDOCE1EDP01E1EDP20SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool wMENGFieldSpecified;

        private bool aMENGFieldSpecified;

        private bool eDATUFieldSpecified;

        private bool eZEITFieldSpecified;

        private bool eDATU_OLDFieldSpecified;

        private bool eZEIT_OLDFieldSpecified;

        private bool aCTIONFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Scheduled quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string WMENG
        {
            get
            {
                return this.wMENGField;
            }
            set
            {
                if ((this.wMENGField != null))
                {
                    if ((wMENGField.Equals(value) != true))
                    {
                        this.wMENGField = value;
                        this.OnPropertyChanged("WMENG");
                    }
                }
                else
                {
                    this.wMENGField = value;
                    this.OnPropertyChanged("WMENG");
                }
            }
        }

        /// <summary>
        /// Previous scheduled quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string AMENG
        {
            get
            {
                return this.aMENGField;
            }
            set
            {
                if ((this.aMENGField != null))
                {
                    if ((aMENGField.Equals(value) != true))
                    {
                        this.aMENGField = value;
                        this.OnPropertyChanged("AMENG");
                    }
                }
                else
                {
                    this.aMENGField = value;
                    this.OnPropertyChanged("AMENG");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string EDATU
        {
            get
            {
                return this.eDATUField;
            }
            set
            {
                if ((this.eDATUField != null))
                {
                    if ((eDATUField.Equals(value) != true))
                    {
                        this.eDATUField = value;
                        this.OnPropertyChanged("EDATU");
                    }
                }
                else
                {
                    this.eDATUField = value;
                    this.OnPropertyChanged("EDATU");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string EZEIT
        {
            get
            {
                return this.eZEITField;
            }
            set
            {
                if ((this.eZEITField != null))
                {
                    if ((eZEITField.Equals(value) != true))
                    {
                        this.eZEITField = value;
                        this.OnPropertyChanged("EZEIT");
                    }
                }
                else
                {
                    this.eZEITField = value;
                    this.OnPropertyChanged("EZEIT");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string EDATU_OLD
        {
            get
            {
                return this.eDATU_OLDField;
            }
            set
            {
                if ((this.eDATU_OLDField != null))
                {
                    if ((eDATU_OLDField.Equals(value) != true))
                    {
                        this.eDATU_OLDField = value;
                        this.OnPropertyChanged("EDATU_OLD");
                    }
                }
                else
                {
                    this.eDATU_OLDField = value;
                    this.OnPropertyChanged("EDATU_OLD");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string EZEIT_OLD
        {
            get
            {
                return this.eZEIT_OLDField;
            }
            set
            {
                if ((this.eZEIT_OLDField != null))
                {
                    if ((eZEIT_OLDField.Equals(value) != true))
                    {
                        this.eZEIT_OLDField = value;
                        this.OnPropertyChanged("EZEIT_OLD");
                    }
                }
                else
                {
                    this.eZEIT_OLDField = value;
                    this.OnPropertyChanged("EZEIT_OLD");
                }
            }
        }

        /// <summary>
        /// Action code for the item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string ACTION
        {
            get
            {
                return this.aCTIONField;
            }
            set
            {
                if ((this.aCTIONField != null))
                {
                    if ((aCTIONField.Equals(value) != true))
                    {
                        this.aCTIONField = value;
                        this.OnPropertyChanged("ACTION");
                    }
                }
                else
                {
                    this.aCTIONField = value;
                    this.OnPropertyChanged("ACTION");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP20SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP20));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool WMENGSpecified
        {
            get
            {
                return wMENGFieldSpecified;
            }
            set
            {
                wMENGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AMENGSpecified
        {
            get
            {
                return aMENGFieldSpecified;
            }
            set
            {
                aMENGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EDATUSpecified
        {
            get
            {
                return eDATUFieldSpecified;
            }
            set
            {
                eDATUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EZEITSpecified
        {
            get
            {
                return eZEITFieldSpecified;
            }
            set
            {
                eZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EDATU_OLDSpecified
        {
            get
            {
                return eDATU_OLDFieldSpecified;
            }
            set
            {
                eDATU_OLDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EZEIT_OLDSpecified
        {
            get
            {
                return eZEIT_OLDFieldSpecified;
            }
            set
            {
                eZEIT_OLDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ACTIONSpecified
        {
            get
            {
                return aCTIONFieldSpecified;
            }
            set
            {
                aCTIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP20 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP20 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP20 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP20 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP20);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP20 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP20 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP20)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP20 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP20 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP20 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP20 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP20);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP20 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP20 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP20 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP20 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP20SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Doc.item partner information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPA1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string pARVWField;

        private string pARTNField;

        private string lIFNRField;

        private string nAME1Field;

        private string nAME2Field;

        private string nAME3Field;

        private string nAME4Field;

        private string sTRASField;

        private string sTRS2Field;

        private string pFACHField;

        private string oRT01Field;

        private string cOUNCField;

        private string pSTLZField;

        private string pSTL2Field;

        private string lAND1Field;

        private string aBLADField;

        private string pERNRField;

        private string pARNRField;

        private string tELF1Field;

        private string tELF2Field;

        private string tELBXField;

        private string tELFXField;

        private string tELTXField;

        private string tELX1Field;

        private string sPRASField;

        private string aNREDField;

        private string oRT02Field;

        private string hAUSNField;

        private string sTOCKField;

        private string rEGIOField;

        private string pARGEField;

        private string iSOALField;

        private string iSONUField;

        private string fCODEField;

        private string iHREZField;

        private string bNAMEField;

        private string pAORGField;

        private string oRGTXField;

        private string pAGRUField;

        private string kNREFField;

        private string iLNNRField;

        private string pFORTField;

        private string sPRAS_ISOField;

        private string tITLEField;

        private List<ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3> e1EDPA3Field;

        private ORDERS05IDOCE1EDP01E1EDPA1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pARVWFieldSpecified;

        private bool pARTNFieldSpecified;

        private bool lIFNRFieldSpecified;

        private bool nAME1FieldSpecified;

        private bool nAME2FieldSpecified;

        private bool nAME3FieldSpecified;

        private bool nAME4FieldSpecified;

        private bool sTRASFieldSpecified;

        private bool sTRS2FieldSpecified;

        private bool pFACHFieldSpecified;

        private bool oRT01FieldSpecified;

        private bool cOUNCFieldSpecified;

        private bool pSTLZFieldSpecified;

        private bool pSTL2FieldSpecified;

        private bool lAND1FieldSpecified;

        private bool aBLADFieldSpecified;

        private bool pERNRFieldSpecified;

        private bool pARNRFieldSpecified;

        private bool tELF1FieldSpecified;

        private bool tELF2FieldSpecified;

        private bool tELBXFieldSpecified;

        private bool tELFXFieldSpecified;

        private bool tELTXFieldSpecified;

        private bool tELX1FieldSpecified;

        private bool sPRASFieldSpecified;

        private bool aNREDFieldSpecified;

        private bool oRT02FieldSpecified;

        private bool hAUSNFieldSpecified;

        private bool sTOCKFieldSpecified;

        private bool rEGIOFieldSpecified;

        private bool pARGEFieldSpecified;

        private bool iSOALFieldSpecified;

        private bool iSONUFieldSpecified;

        private bool fCODEFieldSpecified;

        private bool iHREZFieldSpecified;

        private bool bNAMEFieldSpecified;

        private bool pAORGFieldSpecified;

        private bool oRGTXFieldSpecified;

        private bool pAGRUFieldSpecified;

        private bool kNREFFieldSpecified;

        private bool iLNNRFieldSpecified;

        private bool pFORTFieldSpecified;

        private bool sPRAS_ISOFieldSpecified;

        private bool tITLEFieldSpecified;

        private bool e1EDPA3FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDPA1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDPA1()
        {
            this.e1EDPA3Field = new List<ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3>();
        }

        /// <summary>
        /// Partner function (e.g. sold-to party, ship-to party, ...)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string PARVW
        {
            get
            {
                return this.pARVWField;
            }
            set
            {
                if ((this.pARVWField != null))
                {
                    if ((pARVWField.Equals(value) != true))
                    {
                        this.pARVWField = value;
                        this.OnPropertyChanged("PARVW");
                    }
                }
                else
                {
                    this.pARVWField = value;
                    this.OnPropertyChanged("PARVW");
                }
            }
        }

        /// <summary>
        /// Partner number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string PARTN
        {
            get
            {
                return this.pARTNField;
            }
            set
            {
                if ((this.pARTNField != null))
                {
                    if ((pARTNField.Equals(value) != true))
                    {
                        this.pARTNField = value;
                        this.OnPropertyChanged("PARTN");
                    }
                }
                else
                {
                    this.pARTNField = value;
                    this.OnPropertyChanged("PARTN");
                }
            }
        }

        /// <summary>
        /// Vendor number at customer location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string NAME1
        {
            get
            {
                return this.nAME1Field;
            }
            set
            {
                if ((this.nAME1Field != null))
                {
                    if ((nAME1Field.Equals(value) != true))
                    {
                        this.nAME1Field = value;
                        this.OnPropertyChanged("NAME1");
                    }
                }
                else
                {
                    this.nAME1Field = value;
                    this.OnPropertyChanged("NAME1");
                }
            }
        }

        /// <summary>
        /// Name 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string NAME2
        {
            get
            {
                return this.nAME2Field;
            }
            set
            {
                if ((this.nAME2Field != null))
                {
                    if ((nAME2Field.Equals(value) != true))
                    {
                        this.nAME2Field = value;
                        this.OnPropertyChanged("NAME2");
                    }
                }
                else
                {
                    this.nAME2Field = value;
                    this.OnPropertyChanged("NAME2");
                }
            }
        }

        /// <summary>
        /// Name 3
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string NAME3
        {
            get
            {
                return this.nAME3Field;
            }
            set
            {
                if ((this.nAME3Field != null))
                {
                    if ((nAME3Field.Equals(value) != true))
                    {
                        this.nAME3Field = value;
                        this.OnPropertyChanged("NAME3");
                    }
                }
                else
                {
                    this.nAME3Field = value;
                    this.OnPropertyChanged("NAME3");
                }
            }
        }

        /// <summary>
        /// Name 4
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string NAME4
        {
            get
            {
                return this.nAME4Field;
            }
            set
            {
                if ((this.nAME4Field != null))
                {
                    if ((nAME4Field.Equals(value) != true))
                    {
                        this.nAME4Field = value;
                        this.OnPropertyChanged("NAME4");
                    }
                }
                else
                {
                    this.nAME4Field = value;
                    this.OnPropertyChanged("NAME4");
                }
            }
        }

        /// <summary>
        /// Street and house number 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string STRAS
        {
            get
            {
                return this.sTRASField;
            }
            set
            {
                if ((this.sTRASField != null))
                {
                    if ((sTRASField.Equals(value) != true))
                    {
                        this.sTRASField = value;
                        this.OnPropertyChanged("STRAS");
                    }
                }
                else
                {
                    this.sTRASField = value;
                    this.OnPropertyChanged("STRAS");
                }
            }
        }

        /// <summary>
        /// Street and house number 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string STRS2
        {
            get
            {
                return this.sTRS2Field;
            }
            set
            {
                if ((this.sTRS2Field != null))
                {
                    if ((sTRS2Field.Equals(value) != true))
                    {
                        this.sTRS2Field = value;
                        this.OnPropertyChanged("STRS2");
                    }
                }
                else
                {
                    this.sTRS2Field = value;
                    this.OnPropertyChanged("STRS2");
                }
            }
        }

        /// <summary>
        /// PO Box
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string PFACH
        {
            get
            {
                return this.pFACHField;
            }
            set
            {
                if ((this.pFACHField != null))
                {
                    if ((pFACHField.Equals(value) != true))
                    {
                        this.pFACHField = value;
                        this.OnPropertyChanged("PFACH");
                    }
                }
                else
                {
                    this.pFACHField = value;
                    this.OnPropertyChanged("PFACH");
                }
            }
        }

        /// <summary>
        /// City
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string ORT01
        {
            get
            {
                return this.oRT01Field;
            }
            set
            {
                if ((this.oRT01Field != null))
                {
                    if ((oRT01Field.Equals(value) != true))
                    {
                        this.oRT01Field = value;
                        this.OnPropertyChanged("ORT01");
                    }
                }
                else
                {
                    this.oRT01Field = value;
                    this.OnPropertyChanged("ORT01");
                }
            }
        }

        /// <summary>
        /// County code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string COUNC
        {
            get
            {
                return this.cOUNCField;
            }
            set
            {
                if ((this.cOUNCField != null))
                {
                    if ((cOUNCField.Equals(value) != true))
                    {
                        this.cOUNCField = value;
                        this.OnPropertyChanged("COUNC");
                    }
                }
                else
                {
                    this.cOUNCField = value;
                    this.OnPropertyChanged("COUNC");
                }
            }
        }

        /// <summary>
        /// Postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string PSTLZ
        {
            get
            {
                return this.pSTLZField;
            }
            set
            {
                if ((this.pSTLZField != null))
                {
                    if ((pSTLZField.Equals(value) != true))
                    {
                        this.pSTLZField = value;
                        this.OnPropertyChanged("PSTLZ");
                    }
                }
                else
                {
                    this.pSTLZField = value;
                    this.OnPropertyChanged("PSTLZ");
                }
            }
        }

        /// <summary>
        /// P.O. Box postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string PSTL2
        {
            get
            {
                return this.pSTL2Field;
            }
            set
            {
                if ((this.pSTL2Field != null))
                {
                    if ((pSTL2Field.Equals(value) != true))
                    {
                        this.pSTL2Field = value;
                        this.OnPropertyChanged("PSTL2");
                    }
                }
                else
                {
                    this.pSTL2Field = value;
                    this.OnPropertyChanged("PSTL2");
                }
            }
        }

        /// <summary>
        /// Country Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string LAND1
        {
            get
            {
                return this.lAND1Field;
            }
            set
            {
                if ((this.lAND1Field != null))
                {
                    if ((lAND1Field.Equals(value) != true))
                    {
                        this.lAND1Field = value;
                        this.OnPropertyChanged("LAND1");
                    }
                }
                else
                {
                    this.lAND1Field = value;
                    this.OnPropertyChanged("LAND1");
                }
            }
        }

        /// <summary>
        /// Unloading Point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string ABLAD
        {
            get
            {
                return this.aBLADField;
            }
            set
            {
                if ((this.aBLADField != null))
                {
                    if ((aBLADField.Equals(value) != true))
                    {
                        this.aBLADField = value;
                        this.OnPropertyChanged("ABLAD");
                    }
                }
                else
                {
                    this.aBLADField = value;
                    this.OnPropertyChanged("ABLAD");
                }
            }
        }

        /// <summary>
        /// Contact person's personnel number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        /// <summary>
        /// Contact person's number (not personnel number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string PARNR
        {
            get
            {
                return this.pARNRField;
            }
            set
            {
                if ((this.pARNRField != null))
                {
                    if ((pARNRField.Equals(value) != true))
                    {
                        this.pARNRField = value;
                        this.OnPropertyChanged("PARNR");
                    }
                }
                else
                {
                    this.pARNRField = value;
                    this.OnPropertyChanged("PARNR");
                }
            }
        }

        /// <summary>
        /// 1st telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// 2nd telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string TELF2
        {
            get
            {
                return this.tELF2Field;
            }
            set
            {
                if ((this.tELF2Field != null))
                {
                    if ((tELF2Field.Equals(value) != true))
                    {
                        this.tELF2Field = value;
                        this.OnPropertyChanged("TELF2");
                    }
                }
                else
                {
                    this.tELF2Field = value;
                    this.OnPropertyChanged("TELF2");
                }
            }
        }

        /// <summary>
        /// Telebox number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string TELBX
        {
            get
            {
                return this.tELBXField;
            }
            set
            {
                if ((this.tELBXField != null))
                {
                    if ((tELBXField.Equals(value) != true))
                    {
                        this.tELBXField = value;
                        this.OnPropertyChanged("TELBX");
                    }
                }
                else
                {
                    this.tELBXField = value;
                    this.OnPropertyChanged("TELBX");
                }
            }
        }

        /// <summary>
        /// Fax number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string TELFX
        {
            get
            {
                return this.tELFXField;
            }
            set
            {
                if ((this.tELFXField != null))
                {
                    if ((tELFXField.Equals(value) != true))
                    {
                        this.tELFXField = value;
                        this.OnPropertyChanged("TELFX");
                    }
                }
                else
                {
                    this.tELFXField = value;
                    this.OnPropertyChanged("TELFX");
                }
            }
        }

        /// <summary>
        /// Teletex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string TELTX
        {
            get
            {
                return this.tELTXField;
            }
            set
            {
                if ((this.tELTXField != null))
                {
                    if ((tELTXField.Equals(value) != true))
                    {
                        this.tELTXField = value;
                        this.OnPropertyChanged("TELTX");
                    }
                }
                else
                {
                    this.tELTXField = value;
                    this.OnPropertyChanged("TELTX");
                }
            }
        }

        /// <summary>
        /// Telex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string TELX1
        {
            get
            {
                return this.tELX1Field;
            }
            set
            {
                if ((this.tELX1Field != null))
                {
                    if ((tELX1Field.Equals(value) != true))
                    {
                        this.tELX1Field = value;
                        this.OnPropertyChanged("TELX1");
                    }
                }
                else
                {
                    this.tELX1Field = value;
                    this.OnPropertyChanged("TELX1");
                }
            }
        }

        /// <summary>
        /// Language key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Form of Address
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string ANRED
        {
            get
            {
                return this.aNREDField;
            }
            set
            {
                if ((this.aNREDField != null))
                {
                    if ((aNREDField.Equals(value) != true))
                    {
                        this.aNREDField = value;
                        this.OnPropertyChanged("ANRED");
                    }
                }
                else
                {
                    this.aNREDField = value;
                    this.OnPropertyChanged("ANRED");
                }
            }
        }

        /// <summary>
        /// District
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string ORT02
        {
            get
            {
                return this.oRT02Field;
            }
            set
            {
                if ((this.oRT02Field != null))
                {
                    if ((oRT02Field.Equals(value) != true))
                    {
                        this.oRT02Field = value;
                        this.OnPropertyChanged("ORT02");
                    }
                }
                else
                {
                    this.oRT02Field = value;
                    this.OnPropertyChanged("ORT02");
                }
            }
        }

        /// <summary>
        /// House number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string HAUSN
        {
            get
            {
                return this.hAUSNField;
            }
            set
            {
                if ((this.hAUSNField != null))
                {
                    if ((hAUSNField.Equals(value) != true))
                    {
                        this.hAUSNField = value;
                        this.OnPropertyChanged("HAUSN");
                    }
                }
                else
                {
                    this.hAUSNField = value;
                    this.OnPropertyChanged("HAUSN");
                }
            }
        }

        /// <summary>
        /// Floor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string STOCK
        {
            get
            {
                return this.sTOCKField;
            }
            set
            {
                if ((this.sTOCKField != null))
                {
                    if ((sTOCKField.Equals(value) != true))
                    {
                        this.sTOCKField = value;
                        this.OnPropertyChanged("STOCK");
                    }
                }
                else
                {
                    this.sTOCKField = value;
                    this.OnPropertyChanged("STOCK");
                }
            }
        }

        /// <summary>
        /// Region
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string REGIO
        {
            get
            {
                return this.rEGIOField;
            }
            set
            {
                if ((this.rEGIOField != null))
                {
                    if ((rEGIOField.Equals(value) != true))
                    {
                        this.rEGIOField = value;
                        this.OnPropertyChanged("REGIO");
                    }
                }
                else
                {
                    this.rEGIOField = value;
                    this.OnPropertyChanged("REGIO");
                }
            }
        }

        /// <summary>
        /// Partner's gender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string PARGE
        {
            get
            {
                return this.pARGEField;
            }
            set
            {
                if ((this.pARGEField != null))
                {
                    if ((pARGEField.Equals(value) != true))
                    {
                        this.pARGEField = value;
                        this.OnPropertyChanged("PARGE");
                    }
                }
                else
                {
                    this.pARGEField = value;
                    this.OnPropertyChanged("PARGE");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string ISOAL
        {
            get
            {
                return this.iSOALField;
            }
            set
            {
                if ((this.iSOALField != null))
                {
                    if ((iSOALField.Equals(value) != true))
                    {
                        this.iSOALField = value;
                        this.OnPropertyChanged("ISOAL");
                    }
                }
                else
                {
                    this.iSOALField = value;
                    this.OnPropertyChanged("ISOAL");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string ISONU
        {
            get
            {
                return this.iSONUField;
            }
            set
            {
                if ((this.iSONUField != null))
                {
                    if ((iSONUField.Equals(value) != true))
                    {
                        this.iSONUField = value;
                        this.OnPropertyChanged("ISONU");
                    }
                }
                else
                {
                    this.iSONUField = value;
                    this.OnPropertyChanged("ISONU");
                }
            }
        }

        /// <summary>
        /// Company key (France)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string FCODE
        {
            get
            {
                return this.fCODEField;
            }
            set
            {
                if ((this.fCODEField != null))
                {
                    if ((fCODEField.Equals(value) != true))
                    {
                        this.fCODEField = value;
                        this.OnPropertyChanged("FCODE");
                    }
                }
                else
                {
                    this.fCODEField = value;
                    this.OnPropertyChanged("FCODE");
                }
            }
        }

        /// <summary>
        /// Your reference (Partner)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string IHREZ
        {
            get
            {
                return this.iHREZField;
            }
            set
            {
                if ((this.iHREZField != null))
                {
                    if ((iHREZField.Equals(value) != true))
                    {
                        this.iHREZField = value;
                        this.OnPropertyChanged("IHREZ");
                    }
                }
                else
                {
                    this.iHREZField = value;
                    this.OnPropertyChanged("IHREZ");
                }
            }
        }

        /// <summary>
        /// IDoc user name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string BNAME
        {
            get
            {
                return this.bNAMEField;
            }
            set
            {
                if ((this.bNAMEField != null))
                {
                    if ((bNAMEField.Equals(value) != true))
                    {
                        this.bNAMEField = value;
                        this.OnPropertyChanged("BNAME");
                    }
                }
                else
                {
                    this.bNAMEField = value;
                    this.OnPropertyChanged("BNAME");
                }
            }
        }

        /// <summary>
        /// IDOC organization code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string PAORG
        {
            get
            {
                return this.pAORGField;
            }
            set
            {
                if ((this.pAORGField != null))
                {
                    if ((pAORGField.Equals(value) != true))
                    {
                        this.pAORGField = value;
                        this.OnPropertyChanged("PAORG");
                    }
                }
                else
                {
                    this.pAORGField = value;
                    this.OnPropertyChanged("PAORG");
                }
            }
        }

        /// <summary>
        /// IDoc organization code text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string ORGTX
        {
            get
            {
                return this.oRGTXField;
            }
            set
            {
                if ((this.oRGTXField != null))
                {
                    if ((oRGTXField.Equals(value) != true))
                    {
                        this.oRGTXField = value;
                        this.OnPropertyChanged("ORGTX");
                    }
                }
                else
                {
                    this.oRGTXField = value;
                    this.OnPropertyChanged("ORGTX");
                }
            }
        }

        /// <summary>
        /// IDoc group code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string PAGRU
        {
            get
            {
                return this.pAGRUField;
            }
            set
            {
                if ((this.pAGRUField != null))
                {
                    if ((pAGRUField.Equals(value) != true))
                    {
                        this.pAGRUField = value;
                        this.OnPropertyChanged("PAGRU");
                    }
                }
                else
                {
                    this.pAGRUField = value;
                    this.OnPropertyChanged("PAGRU");
                }
            }
        }

        /// <summary>
        /// Customer description of partner (plant, storage location)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string KNREF
        {
            get
            {
                return this.kNREFField;
            }
            set
            {
                if ((this.kNREFField != null))
                {
                    if ((kNREFField.Equals(value) != true))
                    {
                        this.kNREFField = value;
                        this.OnPropertyChanged("KNREF");
                    }
                }
                else
                {
                    this.kNREFField = value;
                    this.OnPropertyChanged("KNREF");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string ILNNR
        {
            get
            {
                return this.iLNNRField;
            }
            set
            {
                if ((this.iLNNRField != null))
                {
                    if ((iLNNRField.Equals(value) != true))
                    {
                        this.iLNNRField = value;
                        this.OnPropertyChanged("ILNNR");
                    }
                }
                else
                {
                    this.iLNNRField = value;
                    this.OnPropertyChanged("ILNNR");
                }
            }
        }

        /// <summary>
        /// PO Box city
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string PFORT
        {
            get
            {
                return this.pFORTField;
            }
            set
            {
                if ((this.pFORTField != null))
                {
                    if ((pFORTField.Equals(value) != true))
                    {
                        this.pFORTField = value;
                        this.OnPropertyChanged("PFORT");
                    }
                }
                else
                {
                    this.pFORTField = value;
                    this.OnPropertyChanged("PFORT");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string SPRAS_ISO
        {
            get
            {
                return this.sPRAS_ISOField;
            }
            set
            {
                if ((this.sPRAS_ISOField != null))
                {
                    if ((sPRAS_ISOField.Equals(value) != true))
                    {
                        this.sPRAS_ISOField = value;
                        this.OnPropertyChanged("SPRAS_ISO");
                    }
                }
                else
                {
                    this.sPRAS_ISOField = value;
                    this.OnPropertyChanged("SPRAS_ISO");
                }
            }
        }

        /// <summary>
        /// Title
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string TITLE
        {
            get
            {
                return this.tITLEField;
            }
            set
            {
                if ((this.tITLEField != null))
                {
                    if ((tITLEField.Equals(value) != true))
                    {
                        this.tITLEField = value;
                        this.OnPropertyChanged("TITLE");
                    }
                }
                else
                {
                    this.tITLEField = value;
                    this.OnPropertyChanged("TITLE");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Partner Information Additional Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDPA3", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public List<ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3> E1EDPA3
        {
            get
            {
                return this.e1EDPA3Field;
            }
            set
            {
                if ((this.e1EDPA3Field != null))
                {
                    if ((e1EDPA3Field.Equals(value) != true))
                    {
                        this.e1EDPA3Field = value;
                        this.OnPropertyChanged("E1EDPA3");
                    }
                }
                else
                {
                    this.e1EDPA3Field = value;
                    this.OnPropertyChanged("E1EDPA3");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPA1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPA1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool PARVWSpecified
        {
            get
            {
                return pARVWFieldSpecified;
            }
            set
            {
                pARVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARTNSpecified
        {
            get
            {
                return pARTNFieldSpecified;
            }
            set
            {
                pARTNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LIFNRSpecified
        {
            get
            {
                return lIFNRFieldSpecified;
            }
            set
            {
                lIFNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME1Specified
        {
            get
            {
                return nAME1FieldSpecified;
            }
            set
            {
                nAME1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME2Specified
        {
            get
            {
                return nAME2FieldSpecified;
            }
            set
            {
                nAME2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME3Specified
        {
            get
            {
                return nAME3FieldSpecified;
            }
            set
            {
                nAME3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME4Specified
        {
            get
            {
                return nAME4FieldSpecified;
            }
            set
            {
                nAME4FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRASSpecified
        {
            get
            {
                return sTRASFieldSpecified;
            }
            set
            {
                sTRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRS2Specified
        {
            get
            {
                return sTRS2FieldSpecified;
            }
            set
            {
                sTRS2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PFACHSpecified
        {
            get
            {
                return pFACHFieldSpecified;
            }
            set
            {
                pFACHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT01Specified
        {
            get
            {
                return oRT01FieldSpecified;
            }
            set
            {
                oRT01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool COUNCSpecified
        {
            get
            {
                return cOUNCFieldSpecified;
            }
            set
            {
                cOUNCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTLZSpecified
        {
            get
            {
                return pSTLZFieldSpecified;
            }
            set
            {
                pSTLZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTL2Specified
        {
            get
            {
                return pSTL2FieldSpecified;
            }
            set
            {
                pSTL2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LAND1Specified
        {
            get
            {
                return lAND1FieldSpecified;
            }
            set
            {
                lAND1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABLADSpecified
        {
            get
            {
                return aBLADFieldSpecified;
            }
            set
            {
                aBLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERNRSpecified
        {
            get
            {
                return pERNRFieldSpecified;
            }
            set
            {
                pERNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARNRSpecified
        {
            get
            {
                return pARNRFieldSpecified;
            }
            set
            {
                pARNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF1Specified
        {
            get
            {
                return tELF1FieldSpecified;
            }
            set
            {
                tELF1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF2Specified
        {
            get
            {
                return tELF2FieldSpecified;
            }
            set
            {
                tELF2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELBXSpecified
        {
            get
            {
                return tELBXFieldSpecified;
            }
            set
            {
                tELBXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELFXSpecified
        {
            get
            {
                return tELFXFieldSpecified;
            }
            set
            {
                tELFXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELTXSpecified
        {
            get
            {
                return tELTXFieldSpecified;
            }
            set
            {
                tELTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELX1Specified
        {
            get
            {
                return tELX1FieldSpecified;
            }
            set
            {
                tELX1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SPRASSpecified
        {
            get
            {
                return sPRASFieldSpecified;
            }
            set
            {
                sPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANREDSpecified
        {
            get
            {
                return aNREDFieldSpecified;
            }
            set
            {
                aNREDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT02Specified
        {
            get
            {
                return oRT02FieldSpecified;
            }
            set
            {
                oRT02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HAUSNSpecified
        {
            get
            {
                return hAUSNFieldSpecified;
            }
            set
            {
                hAUSNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STOCKSpecified
        {
            get
            {
                return sTOCKFieldSpecified;
            }
            set
            {
                sTOCKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REGIOSpecified
        {
            get
            {
                return rEGIOFieldSpecified;
            }
            set
            {
                rEGIOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARGESpecified
        {
            get
            {
                return pARGEFieldSpecified;
            }
            set
            {
                pARGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISOALSpecified
        {
            get
            {
                return iSOALFieldSpecified;
            }
            set
            {
                iSOALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISONUSpecified
        {
            get
            {
                return iSONUFieldSpecified;
            }
            set
            {
                iSONUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FCODESpecified
        {
            get
            {
                return fCODEFieldSpecified;
            }
            set
            {
                fCODEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IHREZSpecified
        {
            get
            {
                return iHREZFieldSpecified;
            }
            set
            {
                iHREZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BNAMESpecified
        {
            get
            {
                return bNAMEFieldSpecified;
            }
            set
            {
                bNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAORGSpecified
        {
            get
            {
                return pAORGFieldSpecified;
            }
            set
            {
                pAORGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORGTXSpecified
        {
            get
            {
                return oRGTXFieldSpecified;
            }
            set
            {
                oRGTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAGRUSpecified
        {
            get
            {
                return pAGRUFieldSpecified;
            }
            set
            {
                pAGRUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KNREFSpecified
        {
            get
            {
                return kNREFFieldSpecified;
            }
            set
            {
                kNREFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ILNNRSpecified
        {
            get
            {
                return iLNNRFieldSpecified;
            }
            set
            {
                iLNNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PFORTSpecified
        {
            get
            {
                return pFORTFieldSpecified;
            }
            set
            {
                pFORTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SPRAS_ISOSpecified
        {
            get
            {
                return sPRAS_ISOFieldSpecified;
            }
            set
            {
                sPRAS_ISOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TITLESpecified
        {
            get
            {
                return tITLEFieldSpecified;
            }
            set
            {
                tITLEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPA3Specified
        {
            get
            {
                return e1EDPA3FieldSpecified;
            }
            set
            {
                e1EDPA3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPA1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPA1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPA1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPA1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPA1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPA1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPA1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPA1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPA1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPA1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc: Document Item Partner Information Additional Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALPField;

        private string sTDPNField;

        private ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALPFieldSpecified;

        private bool sTDPNFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC Partner identification (e.g.Dun&Bradstreet number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALP
        {
            get
            {
                return this.qUALPField;
            }
            set
            {
                if ((this.qUALPField != null))
                {
                    if ((qUALPField.Equals(value) != true))
                    {
                        this.qUALPField = value;
                        this.OnPropertyChanged("QUALP");
                    }
                }
                else
                {
                    this.qUALPField = value;
                    this.OnPropertyChanged("QUALP");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string STDPN
        {
            get
            {
                return this.sTDPNField;
            }
            set
            {
                if ((this.sTDPNField != null))
                {
                    if ((sTDPNField.Equals(value) != true))
                    {
                        this.sTDPNField = value;
                        this.OnPropertyChanged("STDPN");
                    }
                }
                else
                {
                    this.sTDPNField = value;
                    this.OnPropertyChanged("STDPN");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALPSpecified
        {
            get
            {
                return qUALPFieldSpecified;
            }
            set
            {
                qUALPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STDPNSpecified
        {
            get
            {
                return sTDPNFieldSpecified;
            }
            set
            {
                sTDPNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPA1E1EDPA3SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPA1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Object Identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP19 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string iDTNRField;

        private string kTEXTField;

        private string mFRPNField;

        private string mFRNRField;

        private ORDERS05IDOCE1EDP01E1EDP19SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool iDTNRFieldSpecified;

        private bool kTEXTFieldSpecified;

        private bool mFRPNFieldSpecified;

        private bool mFRNRFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC object identification such as material no.,customer
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC material ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string IDTNR
        {
            get
            {
                return this.iDTNRField;
            }
            set
            {
                if ((this.iDTNRField != null))
                {
                    if ((iDTNRField.Equals(value) != true))
                    {
                        this.iDTNRField = value;
                        this.OnPropertyChanged("IDTNR");
                    }
                }
                else
                {
                    this.iDTNRField = value;
                    this.OnPropertyChanged("IDTNR");
                }
            }
        }

        /// <summary>
        /// IDOC short text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string KTEXT
        {
            get
            {
                return this.kTEXTField;
            }
            set
            {
                if ((this.kTEXTField != null))
                {
                    if ((kTEXTField.Equals(value) != true))
                    {
                        this.kTEXTField = value;
                        this.OnPropertyChanged("KTEXT");
                    }
                }
                else
                {
                    this.kTEXTField = value;
                    this.OnPropertyChanged("KTEXT");
                }
            }
        }

        /// <summary>
        /// Manufacturer part number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string MFRPN
        {
            get
            {
                return this.mFRPNField;
            }
            set
            {
                if ((this.mFRPNField != null))
                {
                    if ((mFRPNField.Equals(value) != true))
                    {
                        this.mFRPNField = value;
                        this.OnPropertyChanged("MFRPN");
                    }
                }
                else
                {
                    this.mFRPNField = value;
                    this.OnPropertyChanged("MFRPN");
                }
            }
        }

        /// <summary>
        /// Number of a Manufacturer
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string MFRNR
        {
            get
            {
                return this.mFRNRField;
            }
            set
            {
                if ((this.mFRNRField != null))
                {
                    if ((mFRNRField.Equals(value) != true))
                    {
                        this.mFRNRField = value;
                        this.OnPropertyChanged("MFRNR");
                    }
                }
                else
                {
                    this.mFRNRField = value;
                    this.OnPropertyChanged("MFRNR");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP19SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP19));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IDTNRSpecified
        {
            get
            {
                return iDTNRFieldSpecified;
            }
            set
            {
                iDTNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTEXTSpecified
        {
            get
            {
                return kTEXTFieldSpecified;
            }
            set
            {
                kTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MFRPNSpecified
        {
            get
            {
                return mFRPNFieldSpecified;
            }
            set
            {
                mFRPNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MFRNRSpecified
        {
            get
            {
                return mFRNRFieldSpecified;
            }
            set
            {
                mFRNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP19 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP19 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP19 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP19 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP19);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP19 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP19 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP19)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP19 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP19 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP19 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP19 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP19);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP19 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP19 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP19 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP19 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP19SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// A&D: Material Exchange
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPAD : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string iCCField;

        private string mOIField;

        private string pRIField;

        private string aCNField;

        private ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 e1TXTH1Field;

        private ORDERS05IDOCE1EDP01E1EDPADSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool iCCFieldSpecified;

        private bool mOIFieldSpecified;

        private bool pRIFieldSpecified;

        private bool aCNFieldSpecified;

        private bool e1TXTH1FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDPAD class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDPAD()
        {
            this.e1TXTH1Field = new ORDERS05IDOCE1EDP01E1EDPADE1TXTH1();
        }

        /// <summary>
        /// IDoc object identification(A&D)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// Interchangeability Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ICC
        {
            get
            {
                return this.iCCField;
            }
            set
            {
                if ((this.iCCField != null))
                {
                    if ((iCCField.Equals(value) != true))
                    {
                        this.iCCField = value;
                        this.OnPropertyChanged("ICC");
                    }
                }
                else
                {
                    this.iCCField = value;
                    this.OnPropertyChanged("ICC");
                }
            }
        }

        /// <summary>
        /// Type Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string MOI
        {
            get
            {
                return this.mOIField;
            }
            set
            {
                if ((this.mOIField != null))
                {
                    if ((mOIField.Equals(value) != true))
                    {
                        this.mOIField = value;
                        this.OnPropertyChanged("MOI");
                    }
                }
                else
                {
                    this.mOIField = value;
                    this.OnPropertyChanged("MOI");
                }
            }
        }

        /// <summary>
        /// Order Priority
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string PRI
        {
            get
            {
                return this.pRIField;
            }
            set
            {
                if ((this.pRIField != null))
                {
                    if ((pRIField.Equals(value) != true))
                    {
                        this.pRIField = value;
                        this.OnPropertyChanged("PRI");
                    }
                }
                else
                {
                    this.pRIField = value;
                    this.OnPropertyChanged("PRI");
                }
            }
        }

        /// <summary>
        /// Aircraft Registration Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ACN
        {
            get
            {
                return this.aCNField;
            }
            set
            {
                if ((this.aCNField != null))
                {
                    if ((aCNField.Equals(value) != true))
                    {
                        this.aCNField = value;
                        this.OnPropertyChanged("ACN");
                    }
                }
                else
                {
                    this.aCNField = value;
                    this.OnPropertyChanged("ACN");
                }
            }
        }

        /// <summary>
        /// General Text Header
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 E1TXTH1
        {
            get
            {
                return this.e1TXTH1Field;
            }
            set
            {
                if ((this.e1TXTH1Field != null))
                {
                    if ((e1TXTH1Field.Equals(value) != true))
                    {
                        this.e1TXTH1Field = value;
                        this.OnPropertyChanged("E1TXTH1");
                    }
                }
                else
                {
                    this.e1TXTH1Field = value;
                    this.OnPropertyChanged("E1TXTH1");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPADSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPAD));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ICCSpecified
        {
            get
            {
                return iCCFieldSpecified;
            }
            set
            {
                iCCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MOISpecified
        {
            get
            {
                return mOIFieldSpecified;
            }
            set
            {
                mOIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PRISpecified
        {
            get
            {
                return pRIFieldSpecified;
            }
            set
            {
                pRIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ACNSpecified
        {
            get
            {
                return aCNFieldSpecified;
            }
            set
            {
                aCNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1TXTH1Specified
        {
            get
            {
                return e1TXTH1FieldSpecified;
            }
            set
            {
                e1TXTH1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPAD object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPAD object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPAD object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPAD obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPAD);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPAD obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPAD Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPAD)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPAD object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPAD object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPAD object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPAD obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPAD);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPAD obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPAD obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPAD LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPAD LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// General Text Header
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string fUNCTIONField;

        private string tDOBJECTField;

        private string tDOBNAMEField;

        private string tDIDField;

        private string tDSPRASField;

        private string tDTEXTTYPEField;

        private string lANGUA_ISOField;

        private List<ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1> e1TXTP1Field;

        private ORDERS05IDOCE1EDP01E1EDPADE1TXTH1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool fUNCTIONFieldSpecified;

        private bool tDOBJECTFieldSpecified;

        private bool tDOBNAMEFieldSpecified;

        private bool tDIDFieldSpecified;

        private bool tDSPRASFieldSpecified;

        private bool tDTEXTTYPEFieldSpecified;

        private bool lANGUA_ISOFieldSpecified;

        private bool e1TXTP1FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDPADE1TXTH1()
        {
            this.e1TXTP1Field = new List<ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1>();
        }

        /// <summary>
        /// Function (for transferred text)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string FUNCTION
        {
            get
            {
                return this.fUNCTIONField;
            }
            set
            {
                if ((this.fUNCTIONField != null))
                {
                    if ((fUNCTIONField.Equals(value) != true))
                    {
                        this.fUNCTIONField = value;
                        this.OnPropertyChanged("FUNCTION");
                    }
                }
                else
                {
                    this.fUNCTIONField = value;
                    this.OnPropertyChanged("FUNCTION");
                }
            }
        }

        /// <summary>
        /// Texts: Application Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDOBJECT
        {
            get
            {
                return this.tDOBJECTField;
            }
            set
            {
                if ((this.tDOBJECTField != null))
                {
                    if ((tDOBJECTField.Equals(value) != true))
                    {
                        this.tDOBJECTField = value;
                        this.OnPropertyChanged("TDOBJECT");
                    }
                }
                else
                {
                    this.tDOBJECTField = value;
                    this.OnPropertyChanged("TDOBJECT");
                }
            }
        }

        /// <summary>
        /// Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDOBNAME
        {
            get
            {
                return this.tDOBNAMEField;
            }
            set
            {
                if ((this.tDOBNAMEField != null))
                {
                    if ((tDOBNAMEField.Equals(value) != true))
                    {
                        this.tDOBNAMEField = value;
                        this.OnPropertyChanged("TDOBNAME");
                    }
                }
                else
                {
                    this.tDOBNAMEField = value;
                    this.OnPropertyChanged("TDOBNAME");
                }
            }
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string TDSPRAS
        {
            get
            {
                return this.tDSPRASField;
            }
            set
            {
                if ((this.tDSPRASField != null))
                {
                    if ((tDSPRASField.Equals(value) != true))
                    {
                        this.tDSPRASField = value;
                        this.OnPropertyChanged("TDSPRAS");
                    }
                }
                else
                {
                    this.tDSPRASField = value;
                    this.OnPropertyChanged("TDSPRAS");
                }
            }
        }

        /// <summary>
        /// SAPscript: Format of Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string TDTEXTTYPE
        {
            get
            {
                return this.tDTEXTTYPEField;
            }
            set
            {
                if ((this.tDTEXTTYPEField != null))
                {
                    if ((tDTEXTTYPEField.Equals(value) != true))
                    {
                        this.tDTEXTTYPEField = value;
                        this.OnPropertyChanged("TDTEXTTYPE");
                    }
                }
                else
                {
                    this.tDTEXTTYPEField = value;
                    this.OnPropertyChanged("TDTEXTTYPE");
                }
            }
        }

        /// <summary>
        /// Language key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string LANGUA_ISO
        {
            get
            {
                return this.lANGUA_ISOField;
            }
            set
            {
                if ((this.lANGUA_ISOField != null))
                {
                    if ((lANGUA_ISOField.Equals(value) != true))
                    {
                        this.lANGUA_ISOField = value;
                        this.OnPropertyChanged("LANGUA_ISO");
                    }
                }
                else
                {
                    this.lANGUA_ISOField = value;
                    this.OnPropertyChanged("LANGUA_ISO");
                }
            }
        }

        /// <summary>
        /// General Text Segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1TXTP1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1> E1TXTP1
        {
            get
            {
                return this.e1TXTP1Field;
            }
            set
            {
                if ((this.e1TXTP1Field != null))
                {
                    if ((e1TXTP1Field.Equals(value) != true))
                    {
                        this.e1TXTP1Field = value;
                        this.OnPropertyChanged("E1TXTP1");
                    }
                }
                else
                {
                    this.e1TXTP1Field = value;
                    this.OnPropertyChanged("E1TXTP1");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPADE1TXTH1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool FUNCTIONSpecified
        {
            get
            {
                return fUNCTIONFieldSpecified;
            }
            set
            {
                fUNCTIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDOBJECTSpecified
        {
            get
            {
                return tDOBJECTFieldSpecified;
            }
            set
            {
                tDOBJECTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDOBNAMESpecified
        {
            get
            {
                return tDOBNAMEFieldSpecified;
            }
            set
            {
                tDOBNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDIDSpecified
        {
            get
            {
                return tDIDFieldSpecified;
            }
            set
            {
                tDIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDSPRASSpecified
        {
            get
            {
                return tDSPRASFieldSpecified;
            }
            set
            {
                tDSPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDTEXTTYPESpecified
        {
            get
            {
                return tDTEXTTYPEFieldSpecified;
            }
            set
            {
                tDTEXTTYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LANGUA_ISOSpecified
        {
            get
            {
                return lANGUA_ISOFieldSpecified;
            }
            set
            {
                lANGUA_ISOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1TXTP1Specified
        {
            get
            {
                return e1TXTP1FieldSpecified;
            }
            set
            {
                e1TXTP1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPADE1TXTH1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// General Text Segment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDFORMATField;

        private string tDLINEField;

        private ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDFORMATFieldSpecified;

        private bool tDLINEFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        /// <summary>
        /// Text Line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDFORMATSpecified
        {
            get
            {
                return tDFORMATFieldSpecified;
            }
            set
            {
                tDFORMATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDLINESpecified
        {
            get
            {
                return tDLINEFieldSpecified;
            }
            set
            {
                tDLINEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPADE1TXTH1E1TXTP1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPADE1TXTH1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPADSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document item terms of delivery
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP17 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string lKONDField;

        private string lKTEXTField;

        private string lPRIOField;

        private ORDERS05IDOCE1EDP01E1EDP17SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool lKONDFieldSpecified;

        private bool lKTEXTFieldSpecified;

        private bool lPRIOFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LKOND
        {
            get
            {
                return this.lKONDField;
            }
            set
            {
                if ((this.lKONDField != null))
                {
                    if ((lKONDField.Equals(value) != true))
                    {
                        this.lKONDField = value;
                        this.OnPropertyChanged("LKOND");
                    }
                }
                else
                {
                    this.lKONDField = value;
                    this.OnPropertyChanged("LKOND");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LKTEXT
        {
            get
            {
                return this.lKTEXTField;
            }
            set
            {
                if ((this.lKTEXTField != null))
                {
                    if ((lKTEXTField.Equals(value) != true))
                    {
                        this.lKTEXTField = value;
                        this.OnPropertyChanged("LKTEXT");
                    }
                }
                else
                {
                    this.lKTEXTField = value;
                    this.OnPropertyChanged("LKTEXT");
                }
            }
        }

        /// <summary>
        /// Delivery Priority
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string LPRIO
        {
            get
            {
                return this.lPRIOField;
            }
            set
            {
                if ((this.lPRIOField != null))
                {
                    if ((lPRIOField.Equals(value) != true))
                    {
                        this.lPRIOField = value;
                        this.OnPropertyChanged("LPRIO");
                    }
                }
                else
                {
                    this.lPRIOField = value;
                    this.OnPropertyChanged("LPRIO");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP17SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP17));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKONDSpecified
        {
            get
            {
                return lKONDFieldSpecified;
            }
            set
            {
                lKONDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKTEXTSpecified
        {
            get
            {
                return lKTEXTFieldSpecified;
            }
            set
            {
                lKTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LPRIOSpecified
        {
            get
            {
                return lPRIOFieldSpecified;
            }
            set
            {
                lPRIOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP17 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP17 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP17);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP17 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP17 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP17)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP17 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP17 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP17);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP17 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP17 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP17 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP17 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP17SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Terms of Payment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP18 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string tAGEField;

        private string pRZNTField;

        private string zTERM_TXTField;

        private ORDERS05IDOCE1EDP01E1EDP18SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool tAGEFieldSpecified;

        private bool pRZNTFieldSpecified;

        private bool zTERM_TXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC Number of days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TAGE
        {
            get
            {
                return this.tAGEField;
            }
            set
            {
                if ((this.tAGEField != null))
                {
                    if ((tAGEField.Equals(value) != true))
                    {
                        this.tAGEField = value;
                        this.OnPropertyChanged("TAGE");
                    }
                }
                else
                {
                    this.tAGEField = value;
                    this.OnPropertyChanged("TAGE");
                }
            }
        }

        /// <summary>
        /// IDOC percentage for terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string PRZNT
        {
            get
            {
                return this.pRZNTField;
            }
            set
            {
                if ((this.pRZNTField != null))
                {
                    if ((pRZNTField.Equals(value) != true))
                    {
                        this.pRZNTField = value;
                        this.OnPropertyChanged("PRZNT");
                    }
                }
                else
                {
                    this.pRZNTField = value;
                    this.OnPropertyChanged("PRZNT");
                }
            }
        }

        /// <summary>
        /// Text line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ZTERM_TXT
        {
            get
            {
                return this.zTERM_TXTField;
            }
            set
            {
                if ((this.zTERM_TXTField != null))
                {
                    if ((zTERM_TXTField.Equals(value) != true))
                    {
                        this.zTERM_TXTField = value;
                        this.OnPropertyChanged("ZTERM_TXT");
                    }
                }
                else
                {
                    this.zTERM_TXTField = value;
                    this.OnPropertyChanged("ZTERM_TXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP18SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP18));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TAGESpecified
        {
            get
            {
                return tAGEFieldSpecified;
            }
            set
            {
                tAGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PRZNTSpecified
        {
            get
            {
                return pRZNTFieldSpecified;
            }
            set
            {
                pRZNTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZTERM_TXTSpecified
        {
            get
            {
                return zTERM_TXTFieldSpecified;
            }
            set
            {
                zTERM_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP18 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP18 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP18);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP18 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP18 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP18)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP18 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP18 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP18);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP18 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP18 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP18 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP18 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP18SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Additional Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDP35 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALZField;

        private string cUSADDField;

        private string cUSADD_BEZField;

        private ORDERS05IDOCE1EDP01E1EDP35SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALZFieldSpecified;

        private bool cUSADDFieldSpecified;

        private bool cUSADD_BEZFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for IDoc additional data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALZ
        {
            get
            {
                return this.qUALZField;
            }
            set
            {
                if ((this.qUALZField != null))
                {
                    if ((qUALZField.Equals(value) != true))
                    {
                        this.qUALZField = value;
                        this.OnPropertyChanged("QUALZ");
                    }
                }
                else
                {
                    this.qUALZField = value;
                    this.OnPropertyChanged("QUALZ");
                }
            }
        }

        /// <summary>
        /// Data Element Type CHAR Length 35
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CUSADD
        {
            get
            {
                return this.cUSADDField;
            }
            set
            {
                if ((this.cUSADDField != null))
                {
                    if ((cUSADDField.Equals(value) != true))
                    {
                        this.cUSADDField = value;
                        this.OnPropertyChanged("CUSADD");
                    }
                }
                else
                {
                    this.cUSADDField = value;
                    this.OnPropertyChanged("CUSADD");
                }
            }
        }

        /// <summary>
        /// Character field of length 40
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CUSADD_BEZ
        {
            get
            {
                return this.cUSADD_BEZField;
            }
            set
            {
                if ((this.cUSADD_BEZField != null))
                {
                    if ((cUSADD_BEZField.Equals(value) != true))
                    {
                        this.cUSADD_BEZField = value;
                        this.OnPropertyChanged("CUSADD_BEZ");
                    }
                }
                else
                {
                    this.cUSADD_BEZField = value;
                    this.OnPropertyChanged("CUSADD_BEZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDP35SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDP35));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALZSpecified
        {
            get
            {
                return qUALZFieldSpecified;
            }
            set
            {
                qUALZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CUSADDSpecified
        {
            get
            {
                return cUSADDFieldSpecified;
            }
            set
            {
                cUSADDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CUSADD_BEZSpecified
        {
            get
            {
                return cUSADD_BEZFieldSpecified;
            }
            set
            {
                cUSADD_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP35 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDP35 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP35 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP35 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP35);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDP35 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP35 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDP35)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDP35 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDP35 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDP35 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDP35 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDP35);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP35 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDP35 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDP35 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDP35 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDP35SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Document Item Text Identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPT1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDIDField;

        private string tSSPRASField;

        private string tSSPRAS_ISOField;

        private List<ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2> e1EDPT2Field;

        private ORDERS05IDOCE1EDP01E1EDPT1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDIDFieldSpecified;

        private bool tSSPRASFieldSpecified;

        private bool tSSPRAS_ISOFieldSpecified;

        private bool e1EDPT2FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDPT1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDPT1()
        {
            this.e1EDPT2Field = new List<ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2>();
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TSSPRAS
        {
            get
            {
                return this.tSSPRASField;
            }
            set
            {
                if ((this.tSSPRASField != null))
                {
                    if ((tSSPRASField.Equals(value) != true))
                    {
                        this.tSSPRASField = value;
                        this.OnPropertyChanged("TSSPRAS");
                    }
                }
                else
                {
                    this.tSSPRASField = value;
                    this.OnPropertyChanged("TSSPRAS");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TSSPRAS_ISO
        {
            get
            {
                return this.tSSPRAS_ISOField;
            }
            set
            {
                if ((this.tSSPRAS_ISOField != null))
                {
                    if ((tSSPRAS_ISOField.Equals(value) != true))
                    {
                        this.tSSPRAS_ISOField = value;
                        this.OnPropertyChanged("TSSPRAS_ISO");
                    }
                }
                else
                {
                    this.tSSPRAS_ISOField = value;
                    this.OnPropertyChanged("TSSPRAS_ISO");
                }
            }
        }

        /// <summary>
        /// IDoc: Document Item Texts
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDPT2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public List<ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2> E1EDPT2
        {
            get
            {
                return this.e1EDPT2Field;
            }
            set
            {
                if ((this.e1EDPT2Field != null))
                {
                    if ((e1EDPT2Field.Equals(value) != true))
                    {
                        this.e1EDPT2Field = value;
                        this.OnPropertyChanged("E1EDPT2");
                    }
                }
                else
                {
                    this.e1EDPT2Field = value;
                    this.OnPropertyChanged("E1EDPT2");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPT1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPT1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDIDSpecified
        {
            get
            {
                return tDIDFieldSpecified;
            }
            set
            {
                tDIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TSSPRASSpecified
        {
            get
            {
                return tSSPRASFieldSpecified;
            }
            set
            {
                tSSPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TSSPRAS_ISOSpecified
        {
            get
            {
                return tSSPRAS_ISOFieldSpecified;
            }
            set
            {
                tSSPRAS_ISOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDPT2Specified
        {
            get
            {
                return e1EDPT2FieldSpecified;
            }
            set
            {
                e1EDPT2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPT1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPT1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPT1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPT1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPT1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPT1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPT1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPT1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPT1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPT1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc: Document Item Texts
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDLINEField;

        private string tDFORMATField;

        private ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDLINEFieldSpecified;

        private bool tDFORMATFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Text line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDLINESpecified
        {
            get
            {
                return tDLINEFieldSpecified;
            }
            set
            {
                tDLINEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TDFORMATSpecified
        {
            get
            {
                return tDFORMATFieldSpecified;
            }
            set
            {
                tDFORMATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPT1E1EDPT2SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDPT1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS: Service specifications general data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01 : System.ComponentModel.INotifyPropertyChanged
    {

        private string sGTYPField;

        private string zLTYPField;

        private string lVALTField;

        private string aLTNOField;

        private string aLREFField;

        private string zLARTField;

        private string pOSEXField;

        private string rANGField;

        private string eXGRPField;

        private string uEPOSField;

        private string mATKLField;

        private string mENGEField;

        private string mENEEField;

        private string bMNG2Field;

        private string pMENEField;

        private string bPUMNField;

        private string bPUMZField;

        private string vPREIField;

        private string pEINHField;

        private string nETWRField;

        private string aNETWField;

        private string sKFBPField;

        private string cURCYField;

        private string pREISField;

        private string aCTIONField;

        private string kZABSField;

        private string uEBTOField;

        private string uEBTKField;

        private string lBNUMField;

        private string aUSGBField;

        private string fRPOSField;

        private string tOPOSField;

        private string kTXT1Field;

        private string kTXT2Field;

        private string pERNRField;

        private string lGARTField;

        private string sTELLField;

        private string zWERTField;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC02> e1EDC02Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC03> e1EDC03Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC04> e1EDC04Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC05> e1EDC05Field;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC06 e1EDC06Field;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC07 e1EDC07Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDCA1> e1EDCA1Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC19> e1EDC19Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC17> e1EDC17Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDC18> e1EDC18Field;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1> e1EDCT1Field;

        private ORDERS05IDOCE1EDP01E1EDC01SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool sGTYPFieldSpecified;

        private bool zLTYPFieldSpecified;

        private bool lVALTFieldSpecified;

        private bool aLTNOFieldSpecified;

        private bool aLREFFieldSpecified;

        private bool zLARTFieldSpecified;

        private bool pOSEXFieldSpecified;

        private bool rANGFieldSpecified;

        private bool eXGRPFieldSpecified;

        private bool uEPOSFieldSpecified;

        private bool mATKLFieldSpecified;

        private bool mENGEFieldSpecified;

        private bool mENEEFieldSpecified;

        private bool bMNG2FieldSpecified;

        private bool pMENEFieldSpecified;

        private bool bPUMNFieldSpecified;

        private bool bPUMZFieldSpecified;

        private bool vPREIFieldSpecified;

        private bool pEINHFieldSpecified;

        private bool nETWRFieldSpecified;

        private bool aNETWFieldSpecified;

        private bool sKFBPFieldSpecified;

        private bool cURCYFieldSpecified;

        private bool pREISFieldSpecified;

        private bool aCTIONFieldSpecified;

        private bool kZABSFieldSpecified;

        private bool uEBTOFieldSpecified;

        private bool uEBTKFieldSpecified;

        private bool lBNUMFieldSpecified;

        private bool aUSGBFieldSpecified;

        private bool fRPOSFieldSpecified;

        private bool tOPOSFieldSpecified;

        private bool kTXT1FieldSpecified;

        private bool kTXT2FieldSpecified;

        private bool pERNRFieldSpecified;

        private bool lGARTFieldSpecified;

        private bool sTELLFieldSpecified;

        private bool zWERTFieldSpecified;

        private bool e1EDC02FieldSpecified;

        private bool e1EDC03FieldSpecified;

        private bool e1EDC04FieldSpecified;

        private bool e1EDC05FieldSpecified;

        private bool e1EDC06FieldSpecified;

        private bool e1EDC07FieldSpecified;

        private bool e1EDCA1FieldSpecified;

        private bool e1EDC19FieldSpecified;

        private bool e1EDC17FieldSpecified;

        private bool e1EDC18FieldSpecified;

        private bool e1EDCT1FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDC01 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDC01()
        {
            this.e1EDCT1Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1>();
            this.e1EDC18Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC18>();
            this.e1EDC17Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC17>();
            this.e1EDC19Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC19>();
            this.e1EDCA1Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDCA1>();
            this.e1EDC07Field = new ORDERS05IDOCE1EDP01E1EDC01E1EDC07();
            this.e1EDC06Field = new ORDERS05IDOCE1EDP01E1EDC01E1EDC06();
            this.e1EDC05Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC05>();
            this.e1EDC04Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC04>();
            this.e1EDC03Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC03>();
            this.e1EDC02Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDC02>();
        }

        /// <summary>
        /// IDoc service specifications segment type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string SGTYP
        {
            get
            {
                return this.sGTYPField;
            }
            set
            {
                if ((this.sGTYPField != null))
                {
                    if ((sGTYPField.Equals(value) != true))
                    {
                        this.sGTYPField = value;
                        this.OnPropertyChanged("SGTYP");
                    }
                }
                else
                {
                    this.sGTYPField = value;
                    this.OnPropertyChanged("SGTYP");
                }
            }
        }

        /// <summary>
        /// IDoc service specifications line category
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ZLTYP
        {
            get
            {
                return this.zLTYPField;
            }
            set
            {
                if ((this.zLTYPField != null))
                {
                    if ((zLTYPField.Equals(value) != true))
                    {
                        this.zLTYPField = value;
                        this.OnPropertyChanged("ZLTYP");
                    }
                }
                else
                {
                    this.zLTYPField = value;
                    this.OnPropertyChanged("ZLTYP");
                }
            }
        }

        /// <summary>
        /// IDoc service specifications alternatives
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LVALT
        {
            get
            {
                return this.lVALTField;
            }
            set
            {
                if ((this.lVALTField != null))
                {
                    if ((lVALTField.Equals(value) != true))
                    {
                        this.lVALTField = value;
                        this.OnPropertyChanged("LVALT");
                    }
                }
                else
                {
                    this.lVALTField = value;
                    this.OnPropertyChanged("LVALT");
                }
            }
        }

        /// <summary>
        /// IDoc alternative number for service specifications
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ALTNO
        {
            get
            {
                return this.aLTNOField;
            }
            set
            {
                if ((this.aLTNOField != null))
                {
                    if ((aLTNOField.Equals(value) != true))
                    {
                        this.aLTNOField = value;
                        this.OnPropertyChanged("ALTNO");
                    }
                }
                else
                {
                    this.aLTNOField = value;
                    this.OnPropertyChanged("ALTNO");
                }
            }
        }

        /// <summary>
        /// IDoc Assignment Number for Service Specifications
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ALREF
        {
            get
            {
                return this.aLREFField;
            }
            set
            {
                if ((this.aLREFField != null))
                {
                    if ((aLREFField.Equals(value) != true))
                    {
                        this.aLREFField = value;
                        this.OnPropertyChanged("ALREF");
                    }
                }
                else
                {
                    this.aLREFField = value;
                    this.OnPropertyChanged("ALREF");
                }
            }
        }

        /// <summary>
        /// IDoc service specifications line type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string ZLART
        {
            get
            {
                return this.zLARTField;
            }
            set
            {
                if ((this.zLARTField != null))
                {
                    if ((zLARTField.Equals(value) != true))
                    {
                        this.zLARTField = value;
                        this.OnPropertyChanged("ZLART");
                    }
                }
                else
                {
                    this.zLARTField = value;
                    this.OnPropertyChanged("ZLART");
                }
            }
        }

        /// <summary>
        /// Line Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string POSEX
        {
            get
            {
                return this.pOSEXField;
            }
            set
            {
                if ((this.pOSEXField != null))
                {
                    if ((pOSEXField.Equals(value) != true))
                    {
                        this.pOSEXField = value;
                        this.OnPropertyChanged("POSEX");
                    }
                }
                else
                {
                    this.pOSEXField = value;
                    this.OnPropertyChanged("POSEX");
                }
            }
        }

        /// <summary>
        /// Hierarchy level of group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string RANG
        {
            get
            {
                return this.rANGField;
            }
            set
            {
                if ((this.rANGField != null))
                {
                    if ((rANGField.Equals(value) != true))
                    {
                        this.rANGField = value;
                        this.OnPropertyChanged("RANG");
                    }
                }
                else
                {
                    this.rANGField = value;
                    this.OnPropertyChanged("RANG");
                }
            }
        }

        /// <summary>
        /// Outline Level
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string EXGRP
        {
            get
            {
                return this.eXGRPField;
            }
            set
            {
                if ((this.eXGRPField != null))
                {
                    if ((eXGRPField.Equals(value) != true))
                    {
                        this.eXGRPField = value;
                        this.OnPropertyChanged("EXGRP");
                    }
                }
                else
                {
                    this.eXGRPField = value;
                    this.OnPropertyChanged("EXGRP");
                }
            }
        }

        /// <summary>
        /// Higher-Level Item in BOM Structures
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string UEPOS
        {
            get
            {
                return this.uEPOSField;
            }
            set
            {
                if ((this.uEPOSField != null))
                {
                    if ((uEPOSField.Equals(value) != true))
                    {
                        this.uEPOSField = value;
                        this.OnPropertyChanged("UEPOS");
                    }
                }
                else
                {
                    this.uEPOSField = value;
                    this.OnPropertyChanged("UEPOS");
                }
            }
        }

        /// <summary>
        /// IDOC material class
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string MATKL
        {
            get
            {
                return this.mATKLField;
            }
            set
            {
                if ((this.mATKLField != null))
                {
                    if ((mATKLField.Equals(value) != true))
                    {
                        this.mATKLField = value;
                        this.OnPropertyChanged("MATKL");
                    }
                }
                else
                {
                    this.mATKLField = value;
                    this.OnPropertyChanged("MATKL");
                }
            }
        }

        /// <summary>
        /// Quantity
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MENGE
        {
            get
            {
                return this.mENGEField;
            }
            set
            {
                if ((this.mENGEField != null))
                {
                    if ((mENGEField.Equals(value) != true))
                    {
                        this.mENGEField = value;
                        this.OnPropertyChanged("MENGE");
                    }
                }
                else
                {
                    this.mENGEField = value;
                    this.OnPropertyChanged("MENGE");
                }
            }
        }

        /// <summary>
        /// Unit of measure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string MENEE
        {
            get
            {
                return this.mENEEField;
            }
            set
            {
                if ((this.mENEEField != null))
                {
                    if ((mENEEField.Equals(value) != true))
                    {
                        this.mENEEField = value;
                        this.OnPropertyChanged("MENEE");
                    }
                }
                else
                {
                    this.mENEEField = value;
                    this.OnPropertyChanged("MENEE");
                }
            }
        }

        /// <summary>
        /// Quantity in price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string BMNG2
        {
            get
            {
                return this.bMNG2Field;
            }
            set
            {
                if ((this.bMNG2Field != null))
                {
                    if ((bMNG2Field.Equals(value) != true))
                    {
                        this.bMNG2Field = value;
                        this.OnPropertyChanged("BMNG2");
                    }
                }
                else
                {
                    this.bMNG2Field = value;
                    this.OnPropertyChanged("BMNG2");
                }
            }
        }

        /// <summary>
        /// Price Unit of Measure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string PMENE
        {
            get
            {
                return this.pMENEField;
            }
            set
            {
                if ((this.pMENEField != null))
                {
                    if ((pMENEField.Equals(value) != true))
                    {
                        this.pMENEField = value;
                        this.OnPropertyChanged("PMENE");
                    }
                }
                else
                {
                    this.pMENEField = value;
                    this.OnPropertyChanged("PMENE");
                }
            }
        }

        /// <summary>
        /// Denominator for Conv. of Order Price Unit into Order Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string BPUMN
        {
            get
            {
                return this.bPUMNField;
            }
            set
            {
                if ((this.bPUMNField != null))
                {
                    if ((bPUMNField.Equals(value) != true))
                    {
                        this.bPUMNField = value;
                        this.OnPropertyChanged("BPUMN");
                    }
                }
                else
                {
                    this.bPUMNField = value;
                    this.OnPropertyChanged("BPUMN");
                }
            }
        }

        /// <summary>
        /// Numerator for Conversion of Order Price Unit into Order Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string BPUMZ
        {
            get
            {
                return this.bPUMZField;
            }
            set
            {
                if ((this.bPUMZField != null))
                {
                    if ((bPUMZField.Equals(value) != true))
                    {
                        this.bPUMZField = value;
                        this.OnPropertyChanged("BPUMZ");
                    }
                }
                else
                {
                    this.bPUMZField = value;
                    this.OnPropertyChanged("BPUMZ");
                }
            }
        }

        /// <summary>
        /// Price (net)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string VPREI
        {
            get
            {
                return this.vPREIField;
            }
            set
            {
                if ((this.vPREIField != null))
                {
                    if ((vPREIField.Equals(value) != true))
                    {
                        this.vPREIField = value;
                        this.OnPropertyChanged("VPREI");
                    }
                }
                else
                {
                    this.vPREIField = value;
                    this.OnPropertyChanged("VPREI");
                }
            }
        }

        /// <summary>
        /// Price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string PEINH
        {
            get
            {
                return this.pEINHField;
            }
            set
            {
                if ((this.pEINHField != null))
                {
                    if ((pEINHField.Equals(value) != true))
                    {
                        this.pEINHField = value;
                        this.OnPropertyChanged("PEINH");
                    }
                }
                else
                {
                    this.pEINHField = value;
                    this.OnPropertyChanged("PEINH");
                }
            }
        }

        /// <summary>
        /// Item value (net)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string NETWR
        {
            get
            {
                return this.nETWRField;
            }
            set
            {
                if ((this.nETWRField != null))
                {
                    if ((nETWRField.Equals(value) != true))
                    {
                        this.nETWRField = value;
                        this.OnPropertyChanged("NETWR");
                    }
                }
                else
                {
                    this.nETWRField = value;
                    this.OnPropertyChanged("NETWR");
                }
            }
        }

        /// <summary>
        /// Absolute net value of item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string ANETW
        {
            get
            {
                return this.aNETWField;
            }
            set
            {
                if ((this.aNETWField != null))
                {
                    if ((aNETWField.Equals(value) != true))
                    {
                        this.aNETWField = value;
                        this.OnPropertyChanged("ANETW");
                    }
                }
                else
                {
                    this.aNETWField = value;
                    this.OnPropertyChanged("ANETW");
                }
            }
        }

        /// <summary>
        /// Amount qualifying for cash discount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string SKFBP
        {
            get
            {
                return this.sKFBPField;
            }
            set
            {
                if ((this.sKFBPField != null))
                {
                    if ((sKFBPField.Equals(value) != true))
                    {
                        this.sKFBPField = value;
                        this.OnPropertyChanged("SKFBP");
                    }
                }
                else
                {
                    this.sKFBPField = value;
                    this.OnPropertyChanged("SKFBP");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string CURCY
        {
            get
            {
                return this.cURCYField;
            }
            set
            {
                if ((this.cURCYField != null))
                {
                    if ((cURCYField.Equals(value) != true))
                    {
                        this.cURCYField = value;
                        this.OnPropertyChanged("CURCY");
                    }
                }
                else
                {
                    this.cURCYField = value;
                    this.OnPropertyChanged("CURCY");
                }
            }
        }

        /// <summary>
        /// Gross price
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string PREIS
        {
            get
            {
                return this.pREISField;
            }
            set
            {
                if ((this.pREISField != null))
                {
                    if ((pREISField.Equals(value) != true))
                    {
                        this.pREISField = value;
                        this.OnPropertyChanged("PREIS");
                    }
                }
                else
                {
                    this.pREISField = value;
                    this.OnPropertyChanged("PREIS");
                }
            }
        }

        /// <summary>
        /// Action code for the item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string ACTION
        {
            get
            {
                return this.aCTIONField;
            }
            set
            {
                if ((this.aCTIONField != null))
                {
                    if ((aCTIONField.Equals(value) != true))
                    {
                        this.aCTIONField = value;
                        this.OnPropertyChanged("ACTION");
                    }
                }
                else
                {
                    this.aCTIONField = value;
                    this.OnPropertyChanged("ACTION");
                }
            }
        }

        /// <summary>
        /// Flag: order acknowledgment required
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string KZABS
        {
            get
            {
                return this.kZABSField;
            }
            set
            {
                if ((this.kZABSField != null))
                {
                    if ((kZABSField.Equals(value) != true))
                    {
                        this.kZABSField = value;
                        this.OnPropertyChanged("KZABS");
                    }
                }
                else
                {
                    this.kZABSField = value;
                    this.OnPropertyChanged("KZABS");
                }
            }
        }

        /// <summary>
        /// overfulfillment tolerance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string UEBTO
        {
            get
            {
                return this.uEBTOField;
            }
            set
            {
                if ((this.uEBTOField != null))
                {
                    if ((uEBTOField.Equals(value) != true))
                    {
                        this.uEBTOField = value;
                        this.OnPropertyChanged("UEBTO");
                    }
                }
                else
                {
                    this.uEBTOField = value;
                    this.OnPropertyChanged("UEBTO");
                }
            }
        }

        /// <summary>
        /// Unlimited Overfulfillment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string UEBTK
        {
            get
            {
                return this.uEBTKField;
            }
            set
            {
                if ((this.uEBTKField != null))
                {
                    if ((uEBTKField.Equals(value) != true))
                    {
                        this.uEBTKField = value;
                        this.OnPropertyChanged("UEBTK");
                    }
                }
                else
                {
                    this.uEBTKField = value;
                    this.OnPropertyChanged("UEBTK");
                }
            }
        }

        /// <summary>
        /// Short Description of Service Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string LBNUM
        {
            get
            {
                return this.lBNUMField;
            }
            set
            {
                if ((this.lBNUMField != null))
                {
                    if ((lBNUMField.Equals(value) != true))
                    {
                        this.lBNUMField = value;
                        this.OnPropertyChanged("LBNUM");
                    }
                }
                else
                {
                    this.lBNUMField = value;
                    this.OnPropertyChanged("LBNUM");
                }
            }
        }

        /// <summary>
        /// Edition of Service Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string AUSGB
        {
            get
            {
                return this.aUSGBField;
            }
            set
            {
                if ((this.aUSGBField != null))
                {
                    if ((aUSGBField.Equals(value) != true))
                    {
                        this.aUSGBField = value;
                        this.OnPropertyChanged("AUSGB");
                    }
                }
                else
                {
                    this.aUSGBField = value;
                    this.OnPropertyChanged("AUSGB");
                }
            }
        }

        /// <summary>
        /// Lower Limit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string FRPOS
        {
            get
            {
                return this.fRPOSField;
            }
            set
            {
                if ((this.fRPOSField != null))
                {
                    if ((fRPOSField.Equals(value) != true))
                    {
                        this.fRPOSField = value;
                        this.OnPropertyChanged("FRPOS");
                    }
                }
                else
                {
                    this.fRPOSField = value;
                    this.OnPropertyChanged("FRPOS");
                }
            }
        }

        /// <summary>
        /// Upper Limit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string TOPOS
        {
            get
            {
                return this.tOPOSField;
            }
            set
            {
                if ((this.tOPOSField != null))
                {
                    if ((tOPOSField.Equals(value) != true))
                    {
                        this.tOPOSField = value;
                        this.OnPropertyChanged("TOPOS");
                    }
                }
                else
                {
                    this.tOPOSField = value;
                    this.OnPropertyChanged("TOPOS");
                }
            }
        }

        /// <summary>
        /// Short Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string KTXT1
        {
            get
            {
                return this.kTXT1Field;
            }
            set
            {
                if ((this.kTXT1Field != null))
                {
                    if ((kTXT1Field.Equals(value) != true))
                    {
                        this.kTXT1Field = value;
                        this.OnPropertyChanged("KTXT1");
                    }
                }
                else
                {
                    this.kTXT1Field = value;
                    this.OnPropertyChanged("KTXT1");
                }
            }
        }

        /// <summary>
        /// Short Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string KTXT2
        {
            get
            {
                return this.kTXT2Field;
            }
            set
            {
                if ((this.kTXT2Field != null))
                {
                    if ((kTXT2Field.Equals(value) != true))
                    {
                        this.kTXT2Field = value;
                        this.OnPropertyChanged("KTXT2");
                    }
                }
                else
                {
                    this.kTXT2Field = value;
                    this.OnPropertyChanged("KTXT2");
                }
            }
        }

        /// <summary>
        /// Personnel Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        /// <summary>
        /// Wage Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string LGART
        {
            get
            {
                return this.lGARTField;
            }
            set
            {
                if ((this.lGARTField != null))
                {
                    if ((lGARTField.Equals(value) != true))
                    {
                        this.lGARTField = value;
                        this.OnPropertyChanged("LGART");
                    }
                }
                else
                {
                    this.lGARTField = value;
                    this.OnPropertyChanged("LGART");
                }
            }
        }

        /// <summary>
        /// Job
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string STELL
        {
            get
            {
                return this.sTELLField;
            }
            set
            {
                if ((this.sTELLField != null))
                {
                    if ((sTELLField.Equals(value) != true))
                    {
                        this.sTELLField = value;
                        this.OnPropertyChanged("STELL");
                    }
                }
                else
                {
                    this.sTELLField = value;
                    this.OnPropertyChanged("STELL");
                }
            }
        }

        /// <summary>
        /// Total value of sum segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string ZWERT
        {
            get
            {
                return this.zWERTField;
            }
            set
            {
                if ((this.zWERTField != null))
                {
                    if ((zWERTField.Equals(value) != true))
                    {
                        this.zWERTField = value;
                        this.OnPropertyChanged("ZWERT");
                    }
                }
                else
                {
                    this.zWERTField = value;
                    this.OnPropertyChanged("ZWERT");
                }
            }
        }

        /// <summary>
        /// SS item: Reference data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC02", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC02> E1EDC02
        {
            get
            {
                return this.e1EDC02Field;
            }
            set
            {
                if ((this.e1EDC02Field != null))
                {
                    if ((e1EDC02Field.Equals(value) != true))
                    {
                        this.e1EDC02Field = value;
                        this.OnPropertyChanged("E1EDC02");
                    }
                }
                else
                {
                    this.e1EDC02Field = value;
                    this.OnPropertyChanged("E1EDC02");
                }
            }
        }

        /// <summary>
        /// SS item: Date segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC03", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC03> E1EDC03
        {
            get
            {
                return this.e1EDC03Field;
            }
            set
            {
                if ((this.e1EDC03Field != null))
                {
                    if ((e1EDC03Field.Equals(value) != true))
                    {
                        this.e1EDC03Field = value;
                        this.OnPropertyChanged("E1EDC03");
                    }
                }
                else
                {
                    this.e1EDC03Field = value;
                    this.OnPropertyChanged("E1EDC03");
                }
            }
        }

        /// <summary>
        /// SS item: Taxes
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC04", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC04> E1EDC04
        {
            get
            {
                return this.e1EDC04Field;
            }
            set
            {
                if ((this.e1EDC04Field != null))
                {
                    if ((e1EDC04Field.Equals(value) != true))
                    {
                        this.e1EDC04Field = value;
                        this.OnPropertyChanged("E1EDC04");
                    }
                }
                else
                {
                    this.e1EDC04Field = value;
                    this.OnPropertyChanged("E1EDC04");
                }
            }
        }

        /// <summary>
        /// SS item: Conditions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC05", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC05> E1EDC05
        {
            get
            {
                return this.e1EDC05Field;
            }
            set
            {
                if ((this.e1EDC05Field != null))
                {
                    if ((e1EDC05Field.Equals(value) != true))
                    {
                        this.e1EDC05Field = value;
                        this.OnPropertyChanged("E1EDC05");
                    }
                }
                else
                {
                    this.e1EDC05Field = value;
                    this.OnPropertyChanged("E1EDC05");
                }
            }
        }

        /// <summary>
        /// Service line formula fields
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC06 E1EDC06
        {
            get
            {
                return this.e1EDC06Field;
            }
            set
            {
                if ((this.e1EDC06Field != null))
                {
                    if ((e1EDC06Field.Equals(value) != true))
                    {
                        this.e1EDC06Field = value;
                        this.OnPropertyChanged("E1EDC06");
                    }
                }
                else
                {
                    this.e1EDC06Field = value;
                    this.OnPropertyChanged("E1EDC06");
                }
            }
        }

        /// <summary>
        /// Service line user fields
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC07 E1EDC07
        {
            get
            {
                return this.e1EDC07Field;
            }
            set
            {
                if ((this.e1EDC07Field != null))
                {
                    if ((e1EDC07Field.Equals(value) != true))
                    {
                        this.e1EDC07Field = value;
                        this.OnPropertyChanged("E1EDC07");
                    }
                }
                else
                {
                    this.e1EDC07Field = value;
                    this.OnPropertyChanged("E1EDC07");
                }
            }
        }

        /// <summary>
        /// SS items: Partner information
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDCA1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDCA1> E1EDCA1
        {
            get
            {
                return this.e1EDCA1Field;
            }
            set
            {
                if ((this.e1EDCA1Field != null))
                {
                    if ((e1EDCA1Field.Equals(value) != true))
                    {
                        this.e1EDCA1Field = value;
                        this.OnPropertyChanged("E1EDCA1");
                    }
                }
                else
                {
                    this.e1EDCA1Field = value;
                    this.OnPropertyChanged("E1EDCA1");
                }
            }
        }

        /// <summary>
        /// SS items: Object identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC19", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC19> E1EDC19
        {
            get
            {
                return this.e1EDC19Field;
            }
            set
            {
                if ((this.e1EDC19Field != null))
                {
                    if ((e1EDC19Field.Equals(value) != true))
                    {
                        this.e1EDC19Field = value;
                        this.OnPropertyChanged("E1EDC19");
                    }
                }
                else
                {
                    this.e1EDC19Field = value;
                    this.OnPropertyChanged("E1EDC19");
                }
            }
        }

        /// <summary>
        /// SS items: Terms of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC17", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC17> E1EDC17
        {
            get
            {
                return this.e1EDC17Field;
            }
            set
            {
                if ((this.e1EDC17Field != null))
                {
                    if ((e1EDC17Field.Equals(value) != true))
                    {
                        this.e1EDC17Field = value;
                        this.OnPropertyChanged("E1EDC17");
                    }
                }
                else
                {
                    this.e1EDC17Field = value;
                    this.OnPropertyChanged("E1EDC17");
                }
            }
        }

        /// <summary>
        /// SS items: Terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDC18", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDC18> E1EDC18
        {
            get
            {
                return this.e1EDC18Field;
            }
            set
            {
                if ((this.e1EDC18Field != null))
                {
                    if ((e1EDC18Field.Equals(value) != true))
                    {
                        this.e1EDC18Field = value;
                        this.OnPropertyChanged("E1EDC18");
                    }
                }
                else
                {
                    this.e1EDC18Field = value;
                    this.OnPropertyChanged("E1EDC18");
                }
            }
        }

        /// <summary>
        /// SS items: Text identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDCT1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1> E1EDCT1
        {
            get
            {
                return this.e1EDCT1Field;
            }
            set
            {
                if ((this.e1EDCT1Field != null))
                {
                    if ((e1EDCT1Field.Equals(value) != true))
                    {
                        this.e1EDCT1Field = value;
                        this.OnPropertyChanged("E1EDCT1");
                    }
                }
                else
                {
                    this.e1EDCT1Field = value;
                    this.OnPropertyChanged("E1EDCT1");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool SGTYPSpecified
        {
            get
            {
                return sGTYPFieldSpecified;
            }
            set
            {
                sGTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZLTYPSpecified
        {
            get
            {
                return zLTYPFieldSpecified;
            }
            set
            {
                zLTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LVALTSpecified
        {
            get
            {
                return lVALTFieldSpecified;
            }
            set
            {
                lVALTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ALTNOSpecified
        {
            get
            {
                return aLTNOFieldSpecified;
            }
            set
            {
                aLTNOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ALREFSpecified
        {
            get
            {
                return aLREFFieldSpecified;
            }
            set
            {
                aLREFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZLARTSpecified
        {
            get
            {
                return zLARTFieldSpecified;
            }
            set
            {
                zLARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool POSEXSpecified
        {
            get
            {
                return pOSEXFieldSpecified;
            }
            set
            {
                pOSEXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RANGSpecified
        {
            get
            {
                return rANGFieldSpecified;
            }
            set
            {
                rANGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXGRPSpecified
        {
            get
            {
                return eXGRPFieldSpecified;
            }
            set
            {
                eXGRPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UEPOSSpecified
        {
            get
            {
                return uEPOSFieldSpecified;
            }
            set
            {
                uEPOSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATKLSpecified
        {
            get
            {
                return mATKLFieldSpecified;
            }
            set
            {
                mATKLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENGESpecified
        {
            get
            {
                return mENGEFieldSpecified;
            }
            set
            {
                mENGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENEESpecified
        {
            get
            {
                return mENEEFieldSpecified;
            }
            set
            {
                mENEEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BMNG2Specified
        {
            get
            {
                return bMNG2FieldSpecified;
            }
            set
            {
                bMNG2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PMENESpecified
        {
            get
            {
                return pMENEFieldSpecified;
            }
            set
            {
                pMENEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BPUMNSpecified
        {
            get
            {
                return bPUMNFieldSpecified;
            }
            set
            {
                bPUMNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BPUMZSpecified
        {
            get
            {
                return bPUMZFieldSpecified;
            }
            set
            {
                bPUMZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VPREISpecified
        {
            get
            {
                return vPREIFieldSpecified;
            }
            set
            {
                vPREIFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PEINHSpecified
        {
            get
            {
                return pEINHFieldSpecified;
            }
            set
            {
                pEINHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NETWRSpecified
        {
            get
            {
                return nETWRFieldSpecified;
            }
            set
            {
                nETWRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANETWSpecified
        {
            get
            {
                return aNETWFieldSpecified;
            }
            set
            {
                aNETWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SKFBPSpecified
        {
            get
            {
                return sKFBPFieldSpecified;
            }
            set
            {
                sKFBPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CURCYSpecified
        {
            get
            {
                return cURCYFieldSpecified;
            }
            set
            {
                cURCYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PREISSpecified
        {
            get
            {
                return pREISFieldSpecified;
            }
            set
            {
                pREISFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ACTIONSpecified
        {
            get
            {
                return aCTIONFieldSpecified;
            }
            set
            {
                aCTIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KZABSSpecified
        {
            get
            {
                return kZABSFieldSpecified;
            }
            set
            {
                kZABSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UEBTOSpecified
        {
            get
            {
                return uEBTOFieldSpecified;
            }
            set
            {
                uEBTOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UEBTKSpecified
        {
            get
            {
                return uEBTKFieldSpecified;
            }
            set
            {
                uEBTKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LBNUMSpecified
        {
            get
            {
                return lBNUMFieldSpecified;
            }
            set
            {
                lBNUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUSGBSpecified
        {
            get
            {
                return aUSGBFieldSpecified;
            }
            set
            {
                aUSGBFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRPOSSpecified
        {
            get
            {
                return fRPOSFieldSpecified;
            }
            set
            {
                fRPOSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TOPOSSpecified
        {
            get
            {
                return tOPOSFieldSpecified;
            }
            set
            {
                tOPOSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTXT1Specified
        {
            get
            {
                return kTXT1FieldSpecified;
            }
            set
            {
                kTXT1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTXT2Specified
        {
            get
            {
                return kTXT2FieldSpecified;
            }
            set
            {
                kTXT2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERNRSpecified
        {
            get
            {
                return pERNRFieldSpecified;
            }
            set
            {
                pERNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LGARTSpecified
        {
            get
            {
                return lGARTFieldSpecified;
            }
            set
            {
                lGARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STELLSpecified
        {
            get
            {
                return sTELLFieldSpecified;
            }
            set
            {
                sTELLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZWERTSpecified
        {
            get
            {
                return zWERTFieldSpecified;
            }
            set
            {
                zWERTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC02Specified
        {
            get
            {
                return e1EDC02FieldSpecified;
            }
            set
            {
                e1EDC02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC03Specified
        {
            get
            {
                return e1EDC03FieldSpecified;
            }
            set
            {
                e1EDC03FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC04Specified
        {
            get
            {
                return e1EDC04FieldSpecified;
            }
            set
            {
                e1EDC04FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC05Specified
        {
            get
            {
                return e1EDC05FieldSpecified;
            }
            set
            {
                e1EDC05FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC06Specified
        {
            get
            {
                return e1EDC06FieldSpecified;
            }
            set
            {
                e1EDC06FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC07Specified
        {
            get
            {
                return e1EDC07FieldSpecified;
            }
            set
            {
                e1EDC07FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDCA1Specified
        {
            get
            {
                return e1EDCA1FieldSpecified;
            }
            set
            {
                e1EDCA1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC19Specified
        {
            get
            {
                return e1EDC19FieldSpecified;
            }
            set
            {
                e1EDC19FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC17Specified
        {
            get
            {
                return e1EDC17FieldSpecified;
            }
            set
            {
                e1EDC17FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDC18Specified
        {
            get
            {
                return e1EDC18FieldSpecified;
            }
            set
            {
                e1EDC18FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDCT1Specified
        {
            get
            {
                return e1EDCT1FieldSpecified;
            }
            set
            {
                e1EDCT1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// SS item: Reference data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC02 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string bELNRField;

        private string xLINEField;

        private string dATUMField;

        private string uZEITField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC02SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool bELNRFieldSpecified;

        private bool xLINEFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDoc qualifier reference document for service specifications
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC document number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string BELNR
        {
            get
            {
                return this.bELNRField;
            }
            set
            {
                if ((this.bELNRField != null))
                {
                    if ((bELNRField.Equals(value) != true))
                    {
                        this.bELNRField = value;
                        this.OnPropertyChanged("BELNR");
                    }
                }
                else
                {
                    this.bELNRField = value;
                    this.OnPropertyChanged("BELNR");
                }
            }
        }

        /// <summary>
        /// Line Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string XLINE
        {
            get
            {
                return this.xLINEField;
            }
            set
            {
                if ((this.xLINEField != null))
                {
                    if ((xLINEField.Equals(value) != true))
                    {
                        this.xLINEField = value;
                        this.OnPropertyChanged("XLINE");
                    }
                }
                else
                {
                    this.xLINEField = value;
                    this.OnPropertyChanged("XLINE");
                }
            }
        }

        /// <summary>
        /// IDOC: Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// IDOC: Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC02SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC02));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BELNRSpecified
        {
            get
            {
                return bELNRFieldSpecified;
            }
            set
            {
                bELNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool XLINESpecified
        {
            get
            {
                return xLINEFieldSpecified;
            }
            set
            {
                xLINEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC02);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC02 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC02 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC02)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC02 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC02 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC02);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC02 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC02 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC02 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC02 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC02SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS item: Date segment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC03 : System.ComponentModel.INotifyPropertyChanged
    {

        private string iDDATField;

        private string dATUMField;

        private string uZEITField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC03SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iDDATFieldSpecified;

        private bool dATUMFieldSpecified;

        private bool uZEITFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for IDOC date segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string IDDAT
        {
            get
            {
                return this.iDDATField;
            }
            set
            {
                if ((this.iDDATField != null))
                {
                    if ((iDDATField.Equals(value) != true))
                    {
                        this.iDDATField = value;
                        this.OnPropertyChanged("IDDAT");
                    }
                }
                else
                {
                    this.iDDATField = value;
                    this.OnPropertyChanged("IDDAT");
                }
            }
        }

        /// <summary>
        /// Date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string DATUM
        {
            get
            {
                return this.dATUMField;
            }
            set
            {
                if ((this.dATUMField != null))
                {
                    if ((dATUMField.Equals(value) != true))
                    {
                        this.dATUMField = value;
                        this.OnPropertyChanged("DATUM");
                    }
                }
                else
                {
                    this.dATUMField = value;
                    this.OnPropertyChanged("DATUM");
                }
            }
        }

        /// <summary>
        /// Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string UZEIT
        {
            get
            {
                return this.uZEITField;
            }
            set
            {
                if ((this.uZEITField != null))
                {
                    if ((uZEITField.Equals(value) != true))
                    {
                        this.uZEITField = value;
                        this.OnPropertyChanged("UZEIT");
                    }
                }
                else
                {
                    this.uZEITField = value;
                    this.OnPropertyChanged("UZEIT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC03SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC03));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool IDDATSpecified
        {
            get
            {
                return iDDATFieldSpecified;
            }
            set
            {
                iDDATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DATUMSpecified
        {
            get
            {
                return dATUMFieldSpecified;
            }
            set
            {
                dATUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UZEITSpecified
        {
            get
            {
                return uZEITFieldSpecified;
            }
            set
            {
                uZEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC03);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC03 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC03 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC03)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC03 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC03 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC03);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC03 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC03 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC03 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC03 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC03SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS item: Taxes
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC04 : System.ComponentModel.INotifyPropertyChanged
    {

        private string mWSKZField;

        private string mSATZField;

        private string mWSBTField;

        private string tXJCDField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC04SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool mWSBTFieldSpecified;

        private bool tXJCDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        /// <summary>
        /// Value added tax amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string MWSBT
        {
            get
            {
                return this.mWSBTField;
            }
            set
            {
                if ((this.mWSBTField != null))
                {
                    if ((mWSBTField.Equals(value) != true))
                    {
                        this.mWSBTField = value;
                        this.OnPropertyChanged("MWSBT");
                    }
                }
                else
                {
                    this.mWSBTField = value;
                    this.OnPropertyChanged("MWSBT");
                }
            }
        }

        /// <summary>
        /// Tax Jurisdiction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TXJCD
        {
            get
            {
                return this.tXJCDField;
            }
            set
            {
                if ((this.tXJCDField != null))
                {
                    if ((tXJCDField.Equals(value) != true))
                    {
                        this.tXJCDField = value;
                        this.OnPropertyChanged("TXJCD");
                    }
                }
                else
                {
                    this.tXJCDField = value;
                    this.OnPropertyChanged("TXJCD");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC04SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC04));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSBTSpecified
        {
            get
            {
                return mWSBTFieldSpecified;
            }
            set
            {
                mWSBTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TXJCDSpecified
        {
            get
            {
                return tXJCDFieldSpecified;
            }
            set
            {
                tXJCDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC04);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC04 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC04 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC04)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC04 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC04 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC04);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC04 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC04 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC04 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC04 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC04SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS item: Conditions
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC05 : System.ComponentModel.INotifyPropertyChanged
    {

        private string aLCKZField;

        private string kSCHLField;

        private string kOTXTField;

        private string bETRGField;

        private string kPERCField;

        private string kRATEField;

        private string uPRBSField;

        private string mEAUNField;

        private string kOBTRField;

        private string mENGEField;

        private string pREISField;

        private string mWSKZField;

        private string mSATZField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC05SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool aLCKZFieldSpecified;

        private bool kSCHLFieldSpecified;

        private bool kOTXTFieldSpecified;

        private bool bETRGFieldSpecified;

        private bool kPERCFieldSpecified;

        private bool kRATEFieldSpecified;

        private bool uPRBSFieldSpecified;

        private bool mEAUNFieldSpecified;

        private bool kOBTRFieldSpecified;

        private bool mENGEFieldSpecified;

        private bool pREISFieldSpecified;

        private bool mWSKZFieldSpecified;

        private bool mSATZFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Surcharge or discount indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ALCKZ
        {
            get
            {
                return this.aLCKZField;
            }
            set
            {
                if ((this.aLCKZField != null))
                {
                    if ((aLCKZField.Equals(value) != true))
                    {
                        this.aLCKZField = value;
                        this.OnPropertyChanged("ALCKZ");
                    }
                }
                else
                {
                    this.aLCKZField = value;
                    this.OnPropertyChanged("ALCKZ");
                }
            }
        }

        /// <summary>
        /// Condition type (coded)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string KSCHL
        {
            get
            {
                return this.kSCHLField;
            }
            set
            {
                if ((this.kSCHLField != null))
                {
                    if ((kSCHLField.Equals(value) != true))
                    {
                        this.kSCHLField = value;
                        this.OnPropertyChanged("KSCHL");
                    }
                }
                else
                {
                    this.kSCHLField = value;
                    this.OnPropertyChanged("KSCHL");
                }
            }
        }

        /// <summary>
        /// Condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string KOTXT
        {
            get
            {
                return this.kOTXTField;
            }
            set
            {
                if ((this.kOTXTField != null))
                {
                    if ((kOTXTField.Equals(value) != true))
                    {
                        this.kOTXTField = value;
                        this.OnPropertyChanged("KOTXT");
                    }
                }
                else
                {
                    this.kOTXTField = value;
                    this.OnPropertyChanged("KOTXT");
                }
            }
        }

        /// <summary>
        /// Fixed surcharge/discount on total gross
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BETRG
        {
            get
            {
                return this.bETRGField;
            }
            set
            {
                if ((this.bETRGField != null))
                {
                    if ((bETRGField.Equals(value) != true))
                    {
                        this.bETRGField = value;
                        this.OnPropertyChanged("BETRG");
                    }
                }
                else
                {
                    this.bETRGField = value;
                    this.OnPropertyChanged("BETRG");
                }
            }
        }

        /// <summary>
        /// Condition percentage rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KPERC
        {
            get
            {
                return this.kPERCField;
            }
            set
            {
                if ((this.kPERCField != null))
                {
                    if ((kPERCField.Equals(value) != true))
                    {
                        this.kPERCField = value;
                        this.OnPropertyChanged("KPERC");
                    }
                }
                else
                {
                    this.kPERCField = value;
                    this.OnPropertyChanged("KPERC");
                }
            }
        }

        /// <summary>
        /// Condition record per unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string KRATE
        {
            get
            {
                return this.kRATEField;
            }
            set
            {
                if ((this.kRATEField != null))
                {
                    if ((kRATEField.Equals(value) != true))
                    {
                        this.kRATEField = value;
                        this.OnPropertyChanged("KRATE");
                    }
                }
                else
                {
                    this.kRATEField = value;
                    this.OnPropertyChanged("KRATE");
                }
            }
        }

        /// <summary>
        /// Price unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string UPRBS
        {
            get
            {
                return this.uPRBSField;
            }
            set
            {
                if ((this.uPRBSField != null))
                {
                    if ((uPRBSField.Equals(value) != true))
                    {
                        this.uPRBSField = value;
                        this.OnPropertyChanged("UPRBS");
                    }
                }
                else
                {
                    this.uPRBSField = value;
                    this.OnPropertyChanged("UPRBS");
                }
            }
        }

        /// <summary>
        /// Unit of measurement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string MEAUN
        {
            get
            {
                return this.mEAUNField;
            }
            set
            {
                if ((this.mEAUNField != null))
                {
                    if ((mEAUNField.Equals(value) != true))
                    {
                        this.mEAUNField = value;
                        this.OnPropertyChanged("MEAUN");
                    }
                }
                else
                {
                    this.mEAUNField = value;
                    this.OnPropertyChanged("MEAUN");
                }
            }
        }

        /// <summary>
        /// IDoc condition end amount
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string KOBTR
        {
            get
            {
                return this.kOBTRField;
            }
            set
            {
                if ((this.kOBTRField != null))
                {
                    if ((kOBTRField.Equals(value) != true))
                    {
                        this.kOBTRField = value;
                        this.OnPropertyChanged("KOBTR");
                    }
                }
                else
                {
                    this.kOBTRField = value;
                    this.OnPropertyChanged("KOBTR");
                }
            }
        }

        /// <summary>
        /// Price scale quantity (SPEC2000)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string MENGE
        {
            get
            {
                return this.mENGEField;
            }
            set
            {
                if ((this.mENGEField != null))
                {
                    if ((mENGEField.Equals(value) != true))
                    {
                        this.mENGEField = value;
                        this.OnPropertyChanged("MENGE");
                    }
                }
                else
                {
                    this.mENGEField = value;
                    this.OnPropertyChanged("MENGE");
                }
            }
        }

        /// <summary>
        /// Price by unit of measure (SPEC2000)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string PREIS
        {
            get
            {
                return this.pREISField;
            }
            set
            {
                if ((this.pREISField != null))
                {
                    if ((pREISField.Equals(value) != true))
                    {
                        this.pREISField = value;
                        this.OnPropertyChanged("PREIS");
                    }
                }
                else
                {
                    this.pREISField = value;
                    this.OnPropertyChanged("PREIS");
                }
            }
        }

        /// <summary>
        /// VAT indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MWSKZ
        {
            get
            {
                return this.mWSKZField;
            }
            set
            {
                if ((this.mWSKZField != null))
                {
                    if ((mWSKZField.Equals(value) != true))
                    {
                        this.mWSKZField = value;
                        this.OnPropertyChanged("MWSKZ");
                    }
                }
                else
                {
                    this.mWSKZField = value;
                    this.OnPropertyChanged("MWSKZ");
                }
            }
        }

        /// <summary>
        /// VAT rate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string MSATZ
        {
            get
            {
                return this.mSATZField;
            }
            set
            {
                if ((this.mSATZField != null))
                {
                    if ((mSATZField.Equals(value) != true))
                    {
                        this.mSATZField = value;
                        this.OnPropertyChanged("MSATZ");
                    }
                }
                else
                {
                    this.mSATZField = value;
                    this.OnPropertyChanged("MSATZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC05SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC05));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool ALCKZSpecified
        {
            get
            {
                return aLCKZFieldSpecified;
            }
            set
            {
                aLCKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KSCHLSpecified
        {
            get
            {
                return kSCHLFieldSpecified;
            }
            set
            {
                kSCHLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOTXTSpecified
        {
            get
            {
                return kOTXTFieldSpecified;
            }
            set
            {
                kOTXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BETRGSpecified
        {
            get
            {
                return bETRGFieldSpecified;
            }
            set
            {
                bETRGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KPERCSpecified
        {
            get
            {
                return kPERCFieldSpecified;
            }
            set
            {
                kPERCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KRATESpecified
        {
            get
            {
                return kRATEFieldSpecified;
            }
            set
            {
                kRATEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UPRBSSpecified
        {
            get
            {
                return uPRBSFieldSpecified;
            }
            set
            {
                uPRBSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MEAUNSpecified
        {
            get
            {
                return mEAUNFieldSpecified;
            }
            set
            {
                mEAUNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KOBTRSpecified
        {
            get
            {
                return kOBTRFieldSpecified;
            }
            set
            {
                kOBTRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MENGESpecified
        {
            get
            {
                return mENGEFieldSpecified;
            }
            set
            {
                mENGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PREISSpecified
        {
            get
            {
                return pREISFieldSpecified;
            }
            set
            {
                pREISFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MWSKZSpecified
        {
            get
            {
                return mWSKZFieldSpecified;
            }
            set
            {
                mWSKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MSATZSpecified
        {
            get
            {
                return mSATZFieldSpecified;
            }
            set
            {
                mSATZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC05);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC05 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC05 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC05)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC05);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC05 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC05 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC05 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC05 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC05SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Service line formula fields
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC06 : System.ComponentModel.INotifyPropertyChanged
    {

        private string fORMELNRField;

        private string fRMVAL1Field;

        private string fRMVAL2Field;

        private string fRMVAL3Field;

        private string fRMVAL4Field;

        private string fRMVAL5Field;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC06SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool fORMELNRFieldSpecified;

        private bool fRMVAL1FieldSpecified;

        private bool fRMVAL2FieldSpecified;

        private bool fRMVAL3FieldSpecified;

        private bool fRMVAL4FieldSpecified;

        private bool fRMVAL5FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Formula Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string FORMELNR
        {
            get
            {
                return this.fORMELNRField;
            }
            set
            {
                if ((this.fORMELNRField != null))
                {
                    if ((fORMELNRField.Equals(value) != true))
                    {
                        this.fORMELNRField = value;
                        this.OnPropertyChanged("FORMELNR");
                    }
                }
                else
                {
                    this.fORMELNRField = value;
                    this.OnPropertyChanged("FORMELNR");
                }
            }
        }

        /// <summary>
        /// Formula Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string FRMVAL1
        {
            get
            {
                return this.fRMVAL1Field;
            }
            set
            {
                if ((this.fRMVAL1Field != null))
                {
                    if ((fRMVAL1Field.Equals(value) != true))
                    {
                        this.fRMVAL1Field = value;
                        this.OnPropertyChanged("FRMVAL1");
                    }
                }
                else
                {
                    this.fRMVAL1Field = value;
                    this.OnPropertyChanged("FRMVAL1");
                }
            }
        }

        /// <summary>
        /// Formula Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string FRMVAL2
        {
            get
            {
                return this.fRMVAL2Field;
            }
            set
            {
                if ((this.fRMVAL2Field != null))
                {
                    if ((fRMVAL2Field.Equals(value) != true))
                    {
                        this.fRMVAL2Field = value;
                        this.OnPropertyChanged("FRMVAL2");
                    }
                }
                else
                {
                    this.fRMVAL2Field = value;
                    this.OnPropertyChanged("FRMVAL2");
                }
            }
        }

        /// <summary>
        /// Formula Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string FRMVAL3
        {
            get
            {
                return this.fRMVAL3Field;
            }
            set
            {
                if ((this.fRMVAL3Field != null))
                {
                    if ((fRMVAL3Field.Equals(value) != true))
                    {
                        this.fRMVAL3Field = value;
                        this.OnPropertyChanged("FRMVAL3");
                    }
                }
                else
                {
                    this.fRMVAL3Field = value;
                    this.OnPropertyChanged("FRMVAL3");
                }
            }
        }

        /// <summary>
        /// Formula Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string FRMVAL4
        {
            get
            {
                return this.fRMVAL4Field;
            }
            set
            {
                if ((this.fRMVAL4Field != null))
                {
                    if ((fRMVAL4Field.Equals(value) != true))
                    {
                        this.fRMVAL4Field = value;
                        this.OnPropertyChanged("FRMVAL4");
                    }
                }
                else
                {
                    this.fRMVAL4Field = value;
                    this.OnPropertyChanged("FRMVAL4");
                }
            }
        }

        /// <summary>
        /// Formula Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string FRMVAL5
        {
            get
            {
                return this.fRMVAL5Field;
            }
            set
            {
                if ((this.fRMVAL5Field != null))
                {
                    if ((fRMVAL5Field.Equals(value) != true))
                    {
                        this.fRMVAL5Field = value;
                        this.OnPropertyChanged("FRMVAL5");
                    }
                }
                else
                {
                    this.fRMVAL5Field = value;
                    this.OnPropertyChanged("FRMVAL5");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC06SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC06));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool FORMELNRSpecified
        {
            get
            {
                return fORMELNRFieldSpecified;
            }
            set
            {
                fORMELNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRMVAL1Specified
        {
            get
            {
                return fRMVAL1FieldSpecified;
            }
            set
            {
                fRMVAL1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRMVAL2Specified
        {
            get
            {
                return fRMVAL2FieldSpecified;
            }
            set
            {
                fRMVAL2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRMVAL3Specified
        {
            get
            {
                return fRMVAL3FieldSpecified;
            }
            set
            {
                fRMVAL3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRMVAL4Specified
        {
            get
            {
                return fRMVAL4FieldSpecified;
            }
            set
            {
                fRMVAL4FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FRMVAL5Specified
        {
            get
            {
                return fRMVAL5FieldSpecified;
            }
            set
            {
                fRMVAL5FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC06 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC06);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC06 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC06 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC06)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC06 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC06 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC06);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC06 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC06 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC06 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC06 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC06SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Service line user fields
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC07 : System.ComponentModel.INotifyPropertyChanged
    {

        private string uSERF1_NUMField;

        private string uSERF2_NUMField;

        private string uSERF1_TXTField;

        private string uSERF2_TXTField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC07SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool uSERF1_NUMFieldSpecified;

        private bool uSERF2_NUMFieldSpecified;

        private bool uSERF1_TXTFieldSpecified;

        private bool uSERF2_TXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// User-Defined Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string USERF1_NUM
        {
            get
            {
                return this.uSERF1_NUMField;
            }
            set
            {
                if ((this.uSERF1_NUMField != null))
                {
                    if ((uSERF1_NUMField.Equals(value) != true))
                    {
                        this.uSERF1_NUMField = value;
                        this.OnPropertyChanged("USERF1_NUM");
                    }
                }
                else
                {
                    this.uSERF1_NUMField = value;
                    this.OnPropertyChanged("USERF1_NUM");
                }
            }
        }

        /// <summary>
        /// User-Defined Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string USERF2_NUM
        {
            get
            {
                return this.uSERF2_NUMField;
            }
            set
            {
                if ((this.uSERF2_NUMField != null))
                {
                    if ((uSERF2_NUMField.Equals(value) != true))
                    {
                        this.uSERF2_NUMField = value;
                        this.OnPropertyChanged("USERF2_NUM");
                    }
                }
                else
                {
                    this.uSERF2_NUMField = value;
                    this.OnPropertyChanged("USERF2_NUM");
                }
            }
        }

        /// <summary>
        /// User-Defined Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string USERF1_TXT
        {
            get
            {
                return this.uSERF1_TXTField;
            }
            set
            {
                if ((this.uSERF1_TXTField != null))
                {
                    if ((uSERF1_TXTField.Equals(value) != true))
                    {
                        this.uSERF1_TXTField = value;
                        this.OnPropertyChanged("USERF1_TXT");
                    }
                }
                else
                {
                    this.uSERF1_TXTField = value;
                    this.OnPropertyChanged("USERF1_TXT");
                }
            }
        }

        /// <summary>
        /// User-Defined Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string USERF2_TXT
        {
            get
            {
                return this.uSERF2_TXTField;
            }
            set
            {
                if ((this.uSERF2_TXTField != null))
                {
                    if ((uSERF2_TXTField.Equals(value) != true))
                    {
                        this.uSERF2_TXTField = value;
                        this.OnPropertyChanged("USERF2_TXT");
                    }
                }
                else
                {
                    this.uSERF2_TXTField = value;
                    this.OnPropertyChanged("USERF2_TXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC07SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC07));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool USERF1_NUMSpecified
        {
            get
            {
                return uSERF1_NUMFieldSpecified;
            }
            set
            {
                uSERF1_NUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool USERF2_NUMSpecified
        {
            get
            {
                return uSERF2_NUMFieldSpecified;
            }
            set
            {
                uSERF2_NUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool USERF1_TXTSpecified
        {
            get
            {
                return uSERF1_TXTFieldSpecified;
            }
            set
            {
                uSERF1_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool USERF2_TXTSpecified
        {
            get
            {
                return uSERF2_TXTFieldSpecified;
            }
            set
            {
                uSERF2_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC07 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC07);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC07 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC07 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC07)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC07 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC07 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC07);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC07 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC07 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC07 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC07 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC07SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS items: Partner information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string pARVWField;

        private string pARTNField;

        private string lIFNRField;

        private string nAME1Field;

        private string nAME2Field;

        private string nAME3Field;

        private string nAME4Field;

        private string sTRASField;

        private string sTRS2Field;

        private string pFACHField;

        private string oRT01Field;

        private string cOUNCField;

        private string pSTLZField;

        private string pSTL2Field;

        private string lAND1Field;

        private string aBLADField;

        private string pERNRField;

        private string pARNRField;

        private string tELF1Field;

        private string tELF2Field;

        private string tELBXField;

        private string tELFXField;

        private string tELTXField;

        private string tELX1Field;

        private string sPRASField;

        private string aNREDField;

        private string oRT02Field;

        private string hAUSNField;

        private string sTOCKField;

        private string rEGIOField;

        private string pARGEField;

        private string iSOALField;

        private string iSONUField;

        private string fCODEField;

        private string iHREZField;

        private string bNAMEField;

        private string pAORGField;

        private string oRGTXField;

        private string pAGRUField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDCA1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pARVWFieldSpecified;

        private bool pARTNFieldSpecified;

        private bool lIFNRFieldSpecified;

        private bool nAME1FieldSpecified;

        private bool nAME2FieldSpecified;

        private bool nAME3FieldSpecified;

        private bool nAME4FieldSpecified;

        private bool sTRASFieldSpecified;

        private bool sTRS2FieldSpecified;

        private bool pFACHFieldSpecified;

        private bool oRT01FieldSpecified;

        private bool cOUNCFieldSpecified;

        private bool pSTLZFieldSpecified;

        private bool pSTL2FieldSpecified;

        private bool lAND1FieldSpecified;

        private bool aBLADFieldSpecified;

        private bool pERNRFieldSpecified;

        private bool pARNRFieldSpecified;

        private bool tELF1FieldSpecified;

        private bool tELF2FieldSpecified;

        private bool tELBXFieldSpecified;

        private bool tELFXFieldSpecified;

        private bool tELTXFieldSpecified;

        private bool tELX1FieldSpecified;

        private bool sPRASFieldSpecified;

        private bool aNREDFieldSpecified;

        private bool oRT02FieldSpecified;

        private bool hAUSNFieldSpecified;

        private bool sTOCKFieldSpecified;

        private bool rEGIOFieldSpecified;

        private bool pARGEFieldSpecified;

        private bool iSOALFieldSpecified;

        private bool iSONUFieldSpecified;

        private bool fCODEFieldSpecified;

        private bool iHREZFieldSpecified;

        private bool bNAMEFieldSpecified;

        private bool pAORGFieldSpecified;

        private bool oRGTXFieldSpecified;

        private bool pAGRUFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Partner function (e.g. sold-to party, ship-to party, ...)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string PARVW
        {
            get
            {
                return this.pARVWField;
            }
            set
            {
                if ((this.pARVWField != null))
                {
                    if ((pARVWField.Equals(value) != true))
                    {
                        this.pARVWField = value;
                        this.OnPropertyChanged("PARVW");
                    }
                }
                else
                {
                    this.pARVWField = value;
                    this.OnPropertyChanged("PARVW");
                }
            }
        }

        /// <summary>
        /// Partner number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string PARTN
        {
            get
            {
                return this.pARTNField;
            }
            set
            {
                if ((this.pARTNField != null))
                {
                    if ((pARTNField.Equals(value) != true))
                    {
                        this.pARTNField = value;
                        this.OnPropertyChanged("PARTN");
                    }
                }
                else
                {
                    this.pARTNField = value;
                    this.OnPropertyChanged("PARTN");
                }
            }
        }

        /// <summary>
        /// Vendor number at customer location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string NAME1
        {
            get
            {
                return this.nAME1Field;
            }
            set
            {
                if ((this.nAME1Field != null))
                {
                    if ((nAME1Field.Equals(value) != true))
                    {
                        this.nAME1Field = value;
                        this.OnPropertyChanged("NAME1");
                    }
                }
                else
                {
                    this.nAME1Field = value;
                    this.OnPropertyChanged("NAME1");
                }
            }
        }

        /// <summary>
        /// Name 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string NAME2
        {
            get
            {
                return this.nAME2Field;
            }
            set
            {
                if ((this.nAME2Field != null))
                {
                    if ((nAME2Field.Equals(value) != true))
                    {
                        this.nAME2Field = value;
                        this.OnPropertyChanged("NAME2");
                    }
                }
                else
                {
                    this.nAME2Field = value;
                    this.OnPropertyChanged("NAME2");
                }
            }
        }

        /// <summary>
        /// Name 3
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string NAME3
        {
            get
            {
                return this.nAME3Field;
            }
            set
            {
                if ((this.nAME3Field != null))
                {
                    if ((nAME3Field.Equals(value) != true))
                    {
                        this.nAME3Field = value;
                        this.OnPropertyChanged("NAME3");
                    }
                }
                else
                {
                    this.nAME3Field = value;
                    this.OnPropertyChanged("NAME3");
                }
            }
        }

        /// <summary>
        /// Name 4
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string NAME4
        {
            get
            {
                return this.nAME4Field;
            }
            set
            {
                if ((this.nAME4Field != null))
                {
                    if ((nAME4Field.Equals(value) != true))
                    {
                        this.nAME4Field = value;
                        this.OnPropertyChanged("NAME4");
                    }
                }
                else
                {
                    this.nAME4Field = value;
                    this.OnPropertyChanged("NAME4");
                }
            }
        }

        /// <summary>
        /// Street and house number 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string STRAS
        {
            get
            {
                return this.sTRASField;
            }
            set
            {
                if ((this.sTRASField != null))
                {
                    if ((sTRASField.Equals(value) != true))
                    {
                        this.sTRASField = value;
                        this.OnPropertyChanged("STRAS");
                    }
                }
                else
                {
                    this.sTRASField = value;
                    this.OnPropertyChanged("STRAS");
                }
            }
        }

        /// <summary>
        /// Street and house number 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string STRS2
        {
            get
            {
                return this.sTRS2Field;
            }
            set
            {
                if ((this.sTRS2Field != null))
                {
                    if ((sTRS2Field.Equals(value) != true))
                    {
                        this.sTRS2Field = value;
                        this.OnPropertyChanged("STRS2");
                    }
                }
                else
                {
                    this.sTRS2Field = value;
                    this.OnPropertyChanged("STRS2");
                }
            }
        }

        /// <summary>
        /// PO Box
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string PFACH
        {
            get
            {
                return this.pFACHField;
            }
            set
            {
                if ((this.pFACHField != null))
                {
                    if ((pFACHField.Equals(value) != true))
                    {
                        this.pFACHField = value;
                        this.OnPropertyChanged("PFACH");
                    }
                }
                else
                {
                    this.pFACHField = value;
                    this.OnPropertyChanged("PFACH");
                }
            }
        }

        /// <summary>
        /// City
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string ORT01
        {
            get
            {
                return this.oRT01Field;
            }
            set
            {
                if ((this.oRT01Field != null))
                {
                    if ((oRT01Field.Equals(value) != true))
                    {
                        this.oRT01Field = value;
                        this.OnPropertyChanged("ORT01");
                    }
                }
                else
                {
                    this.oRT01Field = value;
                    this.OnPropertyChanged("ORT01");
                }
            }
        }

        /// <summary>
        /// County code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string COUNC
        {
            get
            {
                return this.cOUNCField;
            }
            set
            {
                if ((this.cOUNCField != null))
                {
                    if ((cOUNCField.Equals(value) != true))
                    {
                        this.cOUNCField = value;
                        this.OnPropertyChanged("COUNC");
                    }
                }
                else
                {
                    this.cOUNCField = value;
                    this.OnPropertyChanged("COUNC");
                }
            }
        }

        /// <summary>
        /// Postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string PSTLZ
        {
            get
            {
                return this.pSTLZField;
            }
            set
            {
                if ((this.pSTLZField != null))
                {
                    if ((pSTLZField.Equals(value) != true))
                    {
                        this.pSTLZField = value;
                        this.OnPropertyChanged("PSTLZ");
                    }
                }
                else
                {
                    this.pSTLZField = value;
                    this.OnPropertyChanged("PSTLZ");
                }
            }
        }

        /// <summary>
        /// P.O. Box postal code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string PSTL2
        {
            get
            {
                return this.pSTL2Field;
            }
            set
            {
                if ((this.pSTL2Field != null))
                {
                    if ((pSTL2Field.Equals(value) != true))
                    {
                        this.pSTL2Field = value;
                        this.OnPropertyChanged("PSTL2");
                    }
                }
                else
                {
                    this.pSTL2Field = value;
                    this.OnPropertyChanged("PSTL2");
                }
            }
        }

        /// <summary>
        /// Country Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string LAND1
        {
            get
            {
                return this.lAND1Field;
            }
            set
            {
                if ((this.lAND1Field != null))
                {
                    if ((lAND1Field.Equals(value) != true))
                    {
                        this.lAND1Field = value;
                        this.OnPropertyChanged("LAND1");
                    }
                }
                else
                {
                    this.lAND1Field = value;
                    this.OnPropertyChanged("LAND1");
                }
            }
        }

        /// <summary>
        /// Unloading Point
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string ABLAD
        {
            get
            {
                return this.aBLADField;
            }
            set
            {
                if ((this.aBLADField != null))
                {
                    if ((aBLADField.Equals(value) != true))
                    {
                        this.aBLADField = value;
                        this.OnPropertyChanged("ABLAD");
                    }
                }
                else
                {
                    this.aBLADField = value;
                    this.OnPropertyChanged("ABLAD");
                }
            }
        }

        /// <summary>
        /// Contact person's personnel number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        /// <summary>
        /// Contact person's number (not personnel number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string PARNR
        {
            get
            {
                return this.pARNRField;
            }
            set
            {
                if ((this.pARNRField != null))
                {
                    if ((pARNRField.Equals(value) != true))
                    {
                        this.pARNRField = value;
                        this.OnPropertyChanged("PARNR");
                    }
                }
                else
                {
                    this.pARNRField = value;
                    this.OnPropertyChanged("PARNR");
                }
            }
        }

        /// <summary>
        /// 1st telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// 2nd telephone number of contact person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string TELF2
        {
            get
            {
                return this.tELF2Field;
            }
            set
            {
                if ((this.tELF2Field != null))
                {
                    if ((tELF2Field.Equals(value) != true))
                    {
                        this.tELF2Field = value;
                        this.OnPropertyChanged("TELF2");
                    }
                }
                else
                {
                    this.tELF2Field = value;
                    this.OnPropertyChanged("TELF2");
                }
            }
        }

        /// <summary>
        /// Telebox number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string TELBX
        {
            get
            {
                return this.tELBXField;
            }
            set
            {
                if ((this.tELBXField != null))
                {
                    if ((tELBXField.Equals(value) != true))
                    {
                        this.tELBXField = value;
                        this.OnPropertyChanged("TELBX");
                    }
                }
                else
                {
                    this.tELBXField = value;
                    this.OnPropertyChanged("TELBX");
                }
            }
        }

        /// <summary>
        /// Fax number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string TELFX
        {
            get
            {
                return this.tELFXField;
            }
            set
            {
                if ((this.tELFXField != null))
                {
                    if ((tELFXField.Equals(value) != true))
                    {
                        this.tELFXField = value;
                        this.OnPropertyChanged("TELFX");
                    }
                }
                else
                {
                    this.tELFXField = value;
                    this.OnPropertyChanged("TELFX");
                }
            }
        }

        /// <summary>
        /// Teletex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string TELTX
        {
            get
            {
                return this.tELTXField;
            }
            set
            {
                if ((this.tELTXField != null))
                {
                    if ((tELTXField.Equals(value) != true))
                    {
                        this.tELTXField = value;
                        this.OnPropertyChanged("TELTX");
                    }
                }
                else
                {
                    this.tELTXField = value;
                    this.OnPropertyChanged("TELTX");
                }
            }
        }

        /// <summary>
        /// Telex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string TELX1
        {
            get
            {
                return this.tELX1Field;
            }
            set
            {
                if ((this.tELX1Field != null))
                {
                    if ((tELX1Field.Equals(value) != true))
                    {
                        this.tELX1Field = value;
                        this.OnPropertyChanged("TELX1");
                    }
                }
                else
                {
                    this.tELX1Field = value;
                    this.OnPropertyChanged("TELX1");
                }
            }
        }

        /// <summary>
        /// Language key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Form of Address
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string ANRED
        {
            get
            {
                return this.aNREDField;
            }
            set
            {
                if ((this.aNREDField != null))
                {
                    if ((aNREDField.Equals(value) != true))
                    {
                        this.aNREDField = value;
                        this.OnPropertyChanged("ANRED");
                    }
                }
                else
                {
                    this.aNREDField = value;
                    this.OnPropertyChanged("ANRED");
                }
            }
        }

        /// <summary>
        /// District
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string ORT02
        {
            get
            {
                return this.oRT02Field;
            }
            set
            {
                if ((this.oRT02Field != null))
                {
                    if ((oRT02Field.Equals(value) != true))
                    {
                        this.oRT02Field = value;
                        this.OnPropertyChanged("ORT02");
                    }
                }
                else
                {
                    this.oRT02Field = value;
                    this.OnPropertyChanged("ORT02");
                }
            }
        }

        /// <summary>
        /// House number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string HAUSN
        {
            get
            {
                return this.hAUSNField;
            }
            set
            {
                if ((this.hAUSNField != null))
                {
                    if ((hAUSNField.Equals(value) != true))
                    {
                        this.hAUSNField = value;
                        this.OnPropertyChanged("HAUSN");
                    }
                }
                else
                {
                    this.hAUSNField = value;
                    this.OnPropertyChanged("HAUSN");
                }
            }
        }

        /// <summary>
        /// Floor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string STOCK
        {
            get
            {
                return this.sTOCKField;
            }
            set
            {
                if ((this.sTOCKField != null))
                {
                    if ((sTOCKField.Equals(value) != true))
                    {
                        this.sTOCKField = value;
                        this.OnPropertyChanged("STOCK");
                    }
                }
                else
                {
                    this.sTOCKField = value;
                    this.OnPropertyChanged("STOCK");
                }
            }
        }

        /// <summary>
        /// Region
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string REGIO
        {
            get
            {
                return this.rEGIOField;
            }
            set
            {
                if ((this.rEGIOField != null))
                {
                    if ((rEGIOField.Equals(value) != true))
                    {
                        this.rEGIOField = value;
                        this.OnPropertyChanged("REGIO");
                    }
                }
                else
                {
                    this.rEGIOField = value;
                    this.OnPropertyChanged("REGIO");
                }
            }
        }

        /// <summary>
        /// Partner's gender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string PARGE
        {
            get
            {
                return this.pARGEField;
            }
            set
            {
                if ((this.pARGEField != null))
                {
                    if ((pARGEField.Equals(value) != true))
                    {
                        this.pARGEField = value;
                        this.OnPropertyChanged("PARGE");
                    }
                }
                else
                {
                    this.pARGEField = value;
                    this.OnPropertyChanged("PARGE");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string ISOAL
        {
            get
            {
                return this.iSOALField;
            }
            set
            {
                if ((this.iSOALField != null))
                {
                    if ((iSOALField.Equals(value) != true))
                    {
                        this.iSOALField = value;
                        this.OnPropertyChanged("ISOAL");
                    }
                }
                else
                {
                    this.iSOALField = value;
                    this.OnPropertyChanged("ISOAL");
                }
            }
        }

        /// <summary>
        /// Country ISO code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string ISONU
        {
            get
            {
                return this.iSONUField;
            }
            set
            {
                if ((this.iSONUField != null))
                {
                    if ((iSONUField.Equals(value) != true))
                    {
                        this.iSONUField = value;
                        this.OnPropertyChanged("ISONU");
                    }
                }
                else
                {
                    this.iSONUField = value;
                    this.OnPropertyChanged("ISONU");
                }
            }
        }

        /// <summary>
        /// Company key (France)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string FCODE
        {
            get
            {
                return this.fCODEField;
            }
            set
            {
                if ((this.fCODEField != null))
                {
                    if ((fCODEField.Equals(value) != true))
                    {
                        this.fCODEField = value;
                        this.OnPropertyChanged("FCODE");
                    }
                }
                else
                {
                    this.fCODEField = value;
                    this.OnPropertyChanged("FCODE");
                }
            }
        }

        /// <summary>
        /// Your reference (Partner)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string IHREZ
        {
            get
            {
                return this.iHREZField;
            }
            set
            {
                if ((this.iHREZField != null))
                {
                    if ((iHREZField.Equals(value) != true))
                    {
                        this.iHREZField = value;
                        this.OnPropertyChanged("IHREZ");
                    }
                }
                else
                {
                    this.iHREZField = value;
                    this.OnPropertyChanged("IHREZ");
                }
            }
        }

        /// <summary>
        /// IDoc user name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string BNAME
        {
            get
            {
                return this.bNAMEField;
            }
            set
            {
                if ((this.bNAMEField != null))
                {
                    if ((bNAMEField.Equals(value) != true))
                    {
                        this.bNAMEField = value;
                        this.OnPropertyChanged("BNAME");
                    }
                }
                else
                {
                    this.bNAMEField = value;
                    this.OnPropertyChanged("BNAME");
                }
            }
        }

        /// <summary>
        /// IDOC organization code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string PAORG
        {
            get
            {
                return this.pAORGField;
            }
            set
            {
                if ((this.pAORGField != null))
                {
                    if ((pAORGField.Equals(value) != true))
                    {
                        this.pAORGField = value;
                        this.OnPropertyChanged("PAORG");
                    }
                }
                else
                {
                    this.pAORGField = value;
                    this.OnPropertyChanged("PAORG");
                }
            }
        }

        /// <summary>
        /// IDoc organization code text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string ORGTX
        {
            get
            {
                return this.oRGTXField;
            }
            set
            {
                if ((this.oRGTXField != null))
                {
                    if ((oRGTXField.Equals(value) != true))
                    {
                        this.oRGTXField = value;
                        this.OnPropertyChanged("ORGTX");
                    }
                }
                else
                {
                    this.oRGTXField = value;
                    this.OnPropertyChanged("ORGTX");
                }
            }
        }

        /// <summary>
        /// IDoc group code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string PAGRU
        {
            get
            {
                return this.pAGRUField;
            }
            set
            {
                if ((this.pAGRUField != null))
                {
                    if ((pAGRUField.Equals(value) != true))
                    {
                        this.pAGRUField = value;
                        this.OnPropertyChanged("PAGRU");
                    }
                }
                else
                {
                    this.pAGRUField = value;
                    this.OnPropertyChanged("PAGRU");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDCA1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDCA1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool PARVWSpecified
        {
            get
            {
                return pARVWFieldSpecified;
            }
            set
            {
                pARVWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARTNSpecified
        {
            get
            {
                return pARTNFieldSpecified;
            }
            set
            {
                pARTNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LIFNRSpecified
        {
            get
            {
                return lIFNRFieldSpecified;
            }
            set
            {
                lIFNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME1Specified
        {
            get
            {
                return nAME1FieldSpecified;
            }
            set
            {
                nAME1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME2Specified
        {
            get
            {
                return nAME2FieldSpecified;
            }
            set
            {
                nAME2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME3Specified
        {
            get
            {
                return nAME3FieldSpecified;
            }
            set
            {
                nAME3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAME4Specified
        {
            get
            {
                return nAME4FieldSpecified;
            }
            set
            {
                nAME4FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRASSpecified
        {
            get
            {
                return sTRASFieldSpecified;
            }
            set
            {
                sTRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STRS2Specified
        {
            get
            {
                return sTRS2FieldSpecified;
            }
            set
            {
                sTRS2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PFACHSpecified
        {
            get
            {
                return pFACHFieldSpecified;
            }
            set
            {
                pFACHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT01Specified
        {
            get
            {
                return oRT01FieldSpecified;
            }
            set
            {
                oRT01FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool COUNCSpecified
        {
            get
            {
                return cOUNCFieldSpecified;
            }
            set
            {
                cOUNCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTLZSpecified
        {
            get
            {
                return pSTLZFieldSpecified;
            }
            set
            {
                pSTLZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PSTL2Specified
        {
            get
            {
                return pSTL2FieldSpecified;
            }
            set
            {
                pSTL2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LAND1Specified
        {
            get
            {
                return lAND1FieldSpecified;
            }
            set
            {
                lAND1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ABLADSpecified
        {
            get
            {
                return aBLADFieldSpecified;
            }
            set
            {
                aBLADFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERNRSpecified
        {
            get
            {
                return pERNRFieldSpecified;
            }
            set
            {
                pERNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARNRSpecified
        {
            get
            {
                return pARNRFieldSpecified;
            }
            set
            {
                pARNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF1Specified
        {
            get
            {
                return tELF1FieldSpecified;
            }
            set
            {
                tELF1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELF2Specified
        {
            get
            {
                return tELF2FieldSpecified;
            }
            set
            {
                tELF2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELBXSpecified
        {
            get
            {
                return tELBXFieldSpecified;
            }
            set
            {
                tELBXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELFXSpecified
        {
            get
            {
                return tELFXFieldSpecified;
            }
            set
            {
                tELFXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELTXSpecified
        {
            get
            {
                return tELTXFieldSpecified;
            }
            set
            {
                tELTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TELX1Specified
        {
            get
            {
                return tELX1FieldSpecified;
            }
            set
            {
                tELX1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SPRASSpecified
        {
            get
            {
                return sPRASFieldSpecified;
            }
            set
            {
                sPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANREDSpecified
        {
            get
            {
                return aNREDFieldSpecified;
            }
            set
            {
                aNREDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORT02Specified
        {
            get
            {
                return oRT02FieldSpecified;
            }
            set
            {
                oRT02FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HAUSNSpecified
        {
            get
            {
                return hAUSNFieldSpecified;
            }
            set
            {
                hAUSNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool STOCKSpecified
        {
            get
            {
                return sTOCKFieldSpecified;
            }
            set
            {
                sTOCKFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool REGIOSpecified
        {
            get
            {
                return rEGIOFieldSpecified;
            }
            set
            {
                rEGIOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARGESpecified
        {
            get
            {
                return pARGEFieldSpecified;
            }
            set
            {
                pARGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISOALSpecified
        {
            get
            {
                return iSOALFieldSpecified;
            }
            set
            {
                iSOALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ISONUSpecified
        {
            get
            {
                return iSONUFieldSpecified;
            }
            set
            {
                iSONUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FCODESpecified
        {
            get
            {
                return fCODEFieldSpecified;
            }
            set
            {
                fCODEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IHREZSpecified
        {
            get
            {
                return iHREZFieldSpecified;
            }
            set
            {
                iHREZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BNAMESpecified
        {
            get
            {
                return bNAMEFieldSpecified;
            }
            set
            {
                bNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAORGSpecified
        {
            get
            {
                return pAORGFieldSpecified;
            }
            set
            {
                pAORGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ORGTXSpecified
        {
            get
            {
                return oRGTXFieldSpecified;
            }
            set
            {
                oRGTXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PAGRUSpecified
        {
            get
            {
                return pAGRUFieldSpecified;
            }
            set
            {
                pAGRUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCA1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDCA1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCA1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCA1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDCA1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS items: Object identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC19 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string iDTNRField;

        private string kTEXTField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC19SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool iDTNRFieldSpecified;

        private bool kTEXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDoc object identification for service specfns object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC material ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string IDTNR
        {
            get
            {
                return this.iDTNRField;
            }
            set
            {
                if ((this.iDTNRField != null))
                {
                    if ((iDTNRField.Equals(value) != true))
                    {
                        this.iDTNRField = value;
                        this.OnPropertyChanged("IDTNR");
                    }
                }
                else
                {
                    this.iDTNRField = value;
                    this.OnPropertyChanged("IDTNR");
                }
            }
        }

        /// <summary>
        /// IDOC short text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string KTEXT
        {
            get
            {
                return this.kTEXTField;
            }
            set
            {
                if ((this.kTEXTField != null))
                {
                    if ((kTEXTField.Equals(value) != true))
                    {
                        this.kTEXTField = value;
                        this.OnPropertyChanged("KTEXT");
                    }
                }
                else
                {
                    this.kTEXTField = value;
                    this.OnPropertyChanged("KTEXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC19SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC19));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool IDTNRSpecified
        {
            get
            {
                return iDTNRFieldSpecified;
            }
            set
            {
                iDTNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KTEXTSpecified
        {
            get
            {
                return kTEXTFieldSpecified;
            }
            set
            {
                kTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC19 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC19);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC19 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC19 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC19)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC19 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC19 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC19);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC19 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC19 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC19 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC19 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC19SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS items: Terms of delivery
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC17 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string lKONDField;

        private string lKTEXTField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC17SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool lKONDFieldSpecified;

        private bool lKTEXTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LKOND
        {
            get
            {
                return this.lKONDField;
            }
            set
            {
                if ((this.lKONDField != null))
                {
                    if ((lKONDField.Equals(value) != true))
                    {
                        this.lKONDField = value;
                        this.OnPropertyChanged("LKOND");
                    }
                }
                else
                {
                    this.lKONDField = value;
                    this.OnPropertyChanged("LKOND");
                }
            }
        }

        /// <summary>
        /// IDOC delivery condition text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LKTEXT
        {
            get
            {
                return this.lKTEXTField;
            }
            set
            {
                if ((this.lKTEXTField != null))
                {
                    if ((lKTEXTField.Equals(value) != true))
                    {
                        this.lKTEXTField = value;
                        this.OnPropertyChanged("LKTEXT");
                    }
                }
                else
                {
                    this.lKTEXTField = value;
                    this.OnPropertyChanged("LKTEXT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC17SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC17));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKONDSpecified
        {
            get
            {
                return lKONDFieldSpecified;
            }
            set
            {
                lKONDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LKTEXTSpecified
        {
            get
            {
                return lKTEXTFieldSpecified;
            }
            set
            {
                lKTEXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC17);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC17 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC17 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC17)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC17 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC17 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC17);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC17 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC17 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC17 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC17 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC17SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS items: Terms of payment
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDC18 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string tAGEField;

        private string pRZNTField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDC18SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool tAGEFieldSpecified;

        private bool pRZNTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// IDOC qualifier: Terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC Number of days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TAGE
        {
            get
            {
                return this.tAGEField;
            }
            set
            {
                if ((this.tAGEField != null))
                {
                    if ((tAGEField.Equals(value) != true))
                    {
                        this.tAGEField = value;
                        this.OnPropertyChanged("TAGE");
                    }
                }
                else
                {
                    this.tAGEField = value;
                    this.OnPropertyChanged("TAGE");
                }
            }
        }

        /// <summary>
        /// IDOC percentage for terms of payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string PRZNT
        {
            get
            {
                return this.pRZNTField;
            }
            set
            {
                if ((this.pRZNTField != null))
                {
                    if ((pRZNTField.Equals(value) != true))
                    {
                        this.pRZNTField = value;
                        this.OnPropertyChanged("PRZNT");
                    }
                }
                else
                {
                    this.pRZNTField = value;
                    this.OnPropertyChanged("PRZNT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDC18SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDC18));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TAGESpecified
        {
            get
            {
                return tAGEFieldSpecified;
            }
            set
            {
                tAGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PRZNTSpecified
        {
            get
            {
                return pRZNTFieldSpecified;
            }
            set
            {
                pRZNTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC18);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDC18 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC18 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDC18)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDC18 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDC18 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDC18);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC18 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDC18 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC18 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDC18 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDC18SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// SS items: Text identification
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDIDField;

        private string tSSPRASField;

        private List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2> e1EDCT2Field;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDCT1SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDIDFieldSpecified;

        private bool tSSPRASFieldSpecified;

        private bool e1EDCT2FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDP01E1EDC01E1EDCT1()
        {
            this.e1EDCT2Field = new List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2>();
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TSSPRAS
        {
            get
            {
                return this.tSSPRASField;
            }
            set
            {
                if ((this.tSSPRASField != null))
                {
                    if ((tSSPRASField.Equals(value) != true))
                    {
                        this.tSSPRASField = value;
                        this.OnPropertyChanged("TSSPRAS");
                    }
                }
                else
                {
                    this.tSSPRASField = value;
                    this.OnPropertyChanged("TSSPRAS");
                }
            }
        }

        /// <summary>
        /// SS items: Texts
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDCT2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public List<ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2> E1EDCT2
        {
            get
            {
                return this.e1EDCT2Field;
            }
            set
            {
                if ((this.e1EDCT2Field != null))
                {
                    if ((e1EDCT2Field.Equals(value) != true))
                    {
                        this.e1EDCT2Field = value;
                        this.OnPropertyChanged("E1EDCT2");
                    }
                }
                else
                {
                    this.e1EDCT2Field = value;
                    this.OnPropertyChanged("E1EDCT2");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDCT1SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDIDSpecified
        {
            get
            {
                return tDIDFieldSpecified;
            }
            set
            {
                tDIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TSSPRASSpecified
        {
            get
            {
                return tSSPRASFieldSpecified;
            }
            set
            {
                tSSPRASFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDCT2Specified
        {
            get
            {
                return e1EDCT2FieldSpecified;
            }
            set
            {
                e1EDCT2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDCT1)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// SS items: Texts
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tDLINEField;

        private ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool tDLINEFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Text line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool TDLINESpecified
        {
            get
            {
                return tDLINEFieldSpecified;
            }
            set
            {
                tDLINEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDCT1E1EDCT2SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01E1EDCT1SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01E1EDC01SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDP01SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// CU: Configuration data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1CUCFG : System.ComponentModel.INotifyPropertyChanged
    {

        private string pOSEXField;

        private string cONFIG_IDField;

        private string rOOT_IDField;

        private string sCEField;

        private string kBNAMEField;

        private string kBVERSIONField;

        private string cOMPLETEField;

        private string cONSISTENTField;

        private string cFGINFOField;

        private string kBPROFILEField;

        private string kBLANGUAGEField;

        private string cBASE_IDField;

        private string cBASE_ID_TYPEField;

        private List<ORDERS05IDOCE1CUCFGE1CUINS> e1CUINSField;

        private List<ORDERS05IDOCE1CUCFGE1CUPRT> e1CUPRTField;

        private List<ORDERS05IDOCE1CUCFGE1CUVAL> e1CUVALField;

        private List<ORDERS05IDOCE1CUCFGE1CUBLB> e1CUBLBField;

        private ORDERS05IDOCE1CUCFGSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pOSEXFieldSpecified;

        private bool cONFIG_IDFieldSpecified;

        private bool rOOT_IDFieldSpecified;

        private bool sCEFieldSpecified;

        private bool kBNAMEFieldSpecified;

        private bool kBVERSIONFieldSpecified;

        private bool cOMPLETEFieldSpecified;

        private bool cONSISTENTFieldSpecified;

        private bool cFGINFOFieldSpecified;

        private bool kBPROFILEFieldSpecified;

        private bool kBLANGUAGEFieldSpecified;

        private bool cBASE_IDFieldSpecified;

        private bool cBASE_ID_TYPEFieldSpecified;

        private bool e1CUINSFieldSpecified;

        private bool e1CUPRTFieldSpecified;

        private bool e1CUVALFieldSpecified;

        private bool e1CUBLBFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1CUCFG class constructor
        /// </summary>
        public ORDERS05IDOCE1CUCFG()
        {
            this.e1CUBLBField = new List<ORDERS05IDOCE1CUCFGE1CUBLB>();
            this.e1CUVALField = new List<ORDERS05IDOCE1CUCFGE1CUVAL>();
            this.e1CUPRTField = new List<ORDERS05IDOCE1CUCFGE1CUPRT>();
            this.e1CUINSField = new List<ORDERS05IDOCE1CUCFGE1CUINS>();
        }

        /// <summary>
        /// Character field of length 6
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string POSEX
        {
            get
            {
                return this.pOSEXField;
            }
            set
            {
                if ((this.pOSEXField != null))
                {
                    if ((pOSEXField.Equals(value) != true))
                    {
                        this.pOSEXField = value;
                        this.OnPropertyChanged("POSEX");
                    }
                }
                else
                {
                    this.pOSEXField = value;
                    this.OnPropertyChanged("POSEX");
                }
            }
        }

        /// <summary>
        /// Character field of length 6
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CONFIG_ID
        {
            get
            {
                return this.cONFIG_IDField;
            }
            set
            {
                if ((this.cONFIG_IDField != null))
                {
                    if ((cONFIG_IDField.Equals(value) != true))
                    {
                        this.cONFIG_IDField = value;
                        this.OnPropertyChanged("CONFIG_ID");
                    }
                }
                else
                {
                    this.cONFIG_IDField = value;
                    this.OnPropertyChanged("CONFIG_ID");
                }
            }
        }

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string ROOT_ID
        {
            get
            {
                return this.rOOT_IDField;
            }
            set
            {
                if ((this.rOOT_IDField != null))
                {
                    if ((rOOT_IDField.Equals(value) != true))
                    {
                        this.rOOT_IDField = value;
                        this.OnPropertyChanged("ROOT_ID");
                    }
                }
                else
                {
                    this.rOOT_IDField = value;
                    this.OnPropertyChanged("ROOT_ID");
                }
            }
        }

        /// <summary>
        /// CU: Only Information Transferred from SCE to Configuration
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string SCE
        {
            get
            {
                return this.sCEField;
            }
            set
            {
                if ((this.sCEField != null))
                {
                    if ((sCEField.Equals(value) != true))
                    {
                        this.sCEField = value;
                        this.OnPropertyChanged("SCE");
                    }
                }
                else
                {
                    this.sCEField = value;
                    this.OnPropertyChanged("SCE");
                }
            }
        }

        /// <summary>
        /// Knowledge-Base Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string KBNAME
        {
            get
            {
                return this.kBNAMEField;
            }
            set
            {
                if ((this.kBNAMEField != null))
                {
                    if ((kBNAMEField.Equals(value) != true))
                    {
                        this.kBNAMEField = value;
                        this.OnPropertyChanged("KBNAME");
                    }
                }
                else
                {
                    this.kBNAMEField = value;
                    this.OnPropertyChanged("KBNAME");
                }
            }
        }

        /// <summary>
        /// Runtime Version of SCE Knowledge Base
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string KBVERSION
        {
            get
            {
                return this.kBVERSIONField;
            }
            set
            {
                if ((this.kBVERSIONField != null))
                {
                    if ((kBVERSIONField.Equals(value) != true))
                    {
                        this.kBVERSIONField = value;
                        this.OnPropertyChanged("KBVERSION");
                    }
                }
                else
                {
                    this.kBVERSIONField = value;
                    this.OnPropertyChanged("KBVERSION");
                }
            }
        }

        /// <summary>
        /// General Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string COMPLETE
        {
            get
            {
                return this.cOMPLETEField;
            }
            set
            {
                if ((this.cOMPLETEField != null))
                {
                    if ((cOMPLETEField.Equals(value) != true))
                    {
                        this.cOMPLETEField = value;
                        this.OnPropertyChanged("COMPLETE");
                    }
                }
                else
                {
                    this.cOMPLETEField = value;
                    this.OnPropertyChanged("COMPLETE");
                }
            }
        }

        /// <summary>
        /// General Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string CONSISTENT
        {
            get
            {
                return this.cONSISTENTField;
            }
            set
            {
                if ((this.cONSISTENTField != null))
                {
                    if ((cONSISTENTField.Equals(value) != true))
                    {
                        this.cONSISTENTField = value;
                        this.OnPropertyChanged("CONSISTENT");
                    }
                }
                else
                {
                    this.cONSISTENTField = value;
                    this.OnPropertyChanged("CONSISTENT");
                }
            }
        }

        /// <summary>
        /// CU: Configuration BLOB (SCE)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string CFGINFO
        {
            get
            {
                return this.cFGINFOField;
            }
            set
            {
                if ((this.cFGINFOField != null))
                {
                    if ((cFGINFOField.Equals(value) != true))
                    {
                        this.cFGINFOField = value;
                        this.OnPropertyChanged("CFGINFO");
                    }
                }
                else
                {
                    this.cFGINFOField = value;
                    this.OnPropertyChanged("CFGINFO");
                }
            }
        }

        /// <summary>
        /// Knowledge-Base Profile
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string KBPROFILE
        {
            get
            {
                return this.kBPROFILEField;
            }
            set
            {
                if ((this.kBPROFILEField != null))
                {
                    if ((kBPROFILEField.Equals(value) != true))
                    {
                        this.kBPROFILEField = value;
                        this.OnPropertyChanged("KBPROFILE");
                    }
                }
                else
                {
                    this.kBPROFILEField = value;
                    this.OnPropertyChanged("KBPROFILE");
                }
            }
        }

        /// <summary>
        /// Configuration Language
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string KBLANGUAGE
        {
            get
            {
                return this.kBLANGUAGEField;
            }
            set
            {
                if ((this.kBLANGUAGEField != null))
                {
                    if ((kBLANGUAGEField.Equals(value) != true))
                    {
                        this.kBLANGUAGEField = value;
                        this.OnPropertyChanged("KBLANGUAGE");
                    }
                }
                else
                {
                    this.kBLANGUAGEField = value;
                    this.OnPropertyChanged("KBLANGUAGE");
                }
            }
        }

        /// <summary>
        /// Instance Number (Persistent)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string CBASE_ID
        {
            get
            {
                return this.cBASE_IDField;
            }
            set
            {
                if ((this.cBASE_IDField != null))
                {
                    if ((cBASE_IDField.Equals(value) != true))
                    {
                        this.cBASE_IDField = value;
                        this.OnPropertyChanged("CBASE_ID");
                    }
                }
                else
                {
                    this.cBASE_IDField = value;
                    this.OnPropertyChanged("CBASE_ID");
                }
            }
        }

        /// <summary>
        /// Type of Instance Number (Persistent)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string CBASE_ID_TYPE
        {
            get
            {
                return this.cBASE_ID_TYPEField;
            }
            set
            {
                if ((this.cBASE_ID_TYPEField != null))
                {
                    if ((cBASE_ID_TYPEField.Equals(value) != true))
                    {
                        this.cBASE_ID_TYPEField = value;
                        this.OnPropertyChanged("CBASE_ID_TYPE");
                    }
                }
                else
                {
                    this.cBASE_ID_TYPEField = value;
                    this.OnPropertyChanged("CBASE_ID_TYPE");
                }
            }
        }

        /// <summary>
        /// CU: Instance data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1CUINS", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public List<ORDERS05IDOCE1CUCFGE1CUINS> E1CUINS
        {
            get
            {
                return this.e1CUINSField;
            }
            set
            {
                if ((this.e1CUINSField != null))
                {
                    if ((e1CUINSField.Equals(value) != true))
                    {
                        this.e1CUINSField = value;
                        this.OnPropertyChanged("E1CUINS");
                    }
                }
                else
                {
                    this.e1CUINSField = value;
                    this.OnPropertyChanged("E1CUINS");
                }
            }
        }

        /// <summary>
        /// CU: part-of data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1CUPRT", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public List<ORDERS05IDOCE1CUCFGE1CUPRT> E1CUPRT
        {
            get
            {
                return this.e1CUPRTField;
            }
            set
            {
                if ((this.e1CUPRTField != null))
                {
                    if ((e1CUPRTField.Equals(value) != true))
                    {
                        this.e1CUPRTField = value;
                        this.OnPropertyChanged("E1CUPRT");
                    }
                }
                else
                {
                    this.e1CUPRTField = value;
                    this.OnPropertyChanged("E1CUPRT");
                }
            }
        }

        /// <summary>
        /// CU: Characteristic valuation
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1CUVAL", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public List<ORDERS05IDOCE1CUCFGE1CUVAL> E1CUVAL
        {
            get
            {
                return this.e1CUVALField;
            }
            set
            {
                if ((this.e1CUVALField != null))
                {
                    if ((e1CUVALField.Equals(value) != true))
                    {
                        this.e1CUVALField = value;
                        this.OnPropertyChanged("E1CUVAL");
                    }
                }
                else
                {
                    this.e1CUVALField = value;
                    this.OnPropertyChanged("E1CUVAL");
                }
            }
        }

        /// <summary>
        /// CU: Configuration BLOB (SCE)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1CUBLB", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public List<ORDERS05IDOCE1CUCFGE1CUBLB> E1CUBLB
        {
            get
            {
                return this.e1CUBLBField;
            }
            set
            {
                if ((this.e1CUBLBField != null))
                {
                    if ((e1CUBLBField.Equals(value) != true))
                    {
                        this.e1CUBLBField = value;
                        this.OnPropertyChanged("E1CUBLB");
                    }
                }
                else
                {
                    this.e1CUBLBField = value;
                    this.OnPropertyChanged("E1CUBLB");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1CUCFGSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1CUCFG));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool POSEXSpecified
        {
            get
            {
                return pOSEXFieldSpecified;
            }
            set
            {
                pOSEXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CONFIG_IDSpecified
        {
            get
            {
                return cONFIG_IDFieldSpecified;
            }
            set
            {
                cONFIG_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ROOT_IDSpecified
        {
            get
            {
                return rOOT_IDFieldSpecified;
            }
            set
            {
                rOOT_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SCESpecified
        {
            get
            {
                return sCEFieldSpecified;
            }
            set
            {
                sCEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KBNAMESpecified
        {
            get
            {
                return kBNAMEFieldSpecified;
            }
            set
            {
                kBNAMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KBVERSIONSpecified
        {
            get
            {
                return kBVERSIONFieldSpecified;
            }
            set
            {
                kBVERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool COMPLETESpecified
        {
            get
            {
                return cOMPLETEFieldSpecified;
            }
            set
            {
                cOMPLETEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CONSISTENTSpecified
        {
            get
            {
                return cONSISTENTFieldSpecified;
            }
            set
            {
                cONSISTENTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CFGINFOSpecified
        {
            get
            {
                return cFGINFOFieldSpecified;
            }
            set
            {
                cFGINFOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KBPROFILESpecified
        {
            get
            {
                return kBPROFILEFieldSpecified;
            }
            set
            {
                kBPROFILEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KBLANGUAGESpecified
        {
            get
            {
                return kBLANGUAGEFieldSpecified;
            }
            set
            {
                kBLANGUAGEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CBASE_IDSpecified
        {
            get
            {
                return cBASE_IDFieldSpecified;
            }
            set
            {
                cBASE_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CBASE_ID_TYPESpecified
        {
            get
            {
                return cBASE_ID_TYPEFieldSpecified;
            }
            set
            {
                cBASE_ID_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUINSSpecified
        {
            get
            {
                return e1CUINSFieldSpecified;
            }
            set
            {
                e1CUINSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUPRTSpecified
        {
            get
            {
                return e1CUPRTFieldSpecified;
            }
            set
            {
                e1CUPRTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUVALSpecified
        {
            get
            {
                return e1CUVALFieldSpecified;
            }
            set
            {
                e1CUVALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1CUBLBSpecified
        {
            get
            {
                return e1CUBLBFieldSpecified;
            }
            set
            {
                e1CUBLBFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFG object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1CUCFG object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFG object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFG obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFG);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFG obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFG Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1CUCFG)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFG object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1CUCFG object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFG object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1CUCFG obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFG);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFG obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFG obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFG LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1CUCFG LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// CU: Instance data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1CUCFGE1CUINS : System.ComponentModel.INotifyPropertyChanged
    {

        private string iNST_IDField;

        private string oBJ_TYPEField;

        private string cLASS_TYPEField;

        private string oBJ_KEYField;

        private string oBJ_TXTField;

        private string qUANTITYField;

        private string aUTHORField;

        private string qUANTITY_UNITField;

        private string cOMPLETEField;

        private string cONSISTENTField;

        private string oBJECT_GUIDField;

        private string pERSIST_IDField;

        private string pERSIST_ID_TYPEField;

        private ORDERS05IDOCE1CUCFGE1CUINSSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iNST_IDFieldSpecified;

        private bool oBJ_TYPEFieldSpecified;

        private bool cLASS_TYPEFieldSpecified;

        private bool oBJ_KEYFieldSpecified;

        private bool oBJ_TXTFieldSpecified;

        private bool qUANTITYFieldSpecified;

        private bool aUTHORFieldSpecified;

        private bool qUANTITY_UNITFieldSpecified;

        private bool cOMPLETEFieldSpecified;

        private bool cONSISTENTFieldSpecified;

        private bool oBJECT_GUIDFieldSpecified;

        private bool pERSIST_IDFieldSpecified;

        private bool pERSIST_ID_TYPEFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string INST_ID
        {
            get
            {
                return this.iNST_IDField;
            }
            set
            {
                if ((this.iNST_IDField != null))
                {
                    if ((iNST_IDField.Equals(value) != true))
                    {
                        this.iNST_IDField = value;
                        this.OnPropertyChanged("INST_ID");
                    }
                }
                else
                {
                    this.iNST_IDField = value;
                    this.OnPropertyChanged("INST_ID");
                }
            }
        }

        /// <summary>
        /// Character Field Length = 10
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string OBJ_TYPE
        {
            get
            {
                return this.oBJ_TYPEField;
            }
            set
            {
                if ((this.oBJ_TYPEField != null))
                {
                    if ((oBJ_TYPEField.Equals(value) != true))
                    {
                        this.oBJ_TYPEField = value;
                        this.OnPropertyChanged("OBJ_TYPE");
                    }
                }
                else
                {
                    this.oBJ_TYPEField = value;
                    this.OnPropertyChanged("OBJ_TYPE");
                }
            }
        }

        /// <summary>
        /// 3-Byte field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CLASS_TYPE
        {
            get
            {
                return this.cLASS_TYPEField;
            }
            set
            {
                if ((this.cLASS_TYPEField != null))
                {
                    if ((cLASS_TYPEField.Equals(value) != true))
                    {
                        this.cLASS_TYPEField = value;
                        this.OnPropertyChanged("CLASS_TYPE");
                    }
                }
                else
                {
                    this.cLASS_TYPEField = value;
                    this.OnPropertyChanged("CLASS_TYPE");
                }
            }
        }

        /// <summary>
        /// Comment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string OBJ_KEY
        {
            get
            {
                return this.oBJ_KEYField;
            }
            set
            {
                if ((this.oBJ_KEYField != null))
                {
                    if ((oBJ_KEYField.Equals(value) != true))
                    {
                        this.oBJ_KEYField = value;
                        this.OnPropertyChanged("OBJ_KEY");
                    }
                }
                else
                {
                    this.oBJ_KEYField = value;
                    this.OnPropertyChanged("OBJ_KEY");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string OBJ_TXT
        {
            get
            {
                return this.oBJ_TXTField;
            }
            set
            {
                if ((this.oBJ_TXTField != null))
                {
                    if ((oBJ_TXTField.Equals(value) != true))
                    {
                        this.oBJ_TXTField = value;
                        this.OnPropertyChanged("OBJ_TXT");
                    }
                }
                else
                {
                    this.oBJ_TXTField = value;
                    this.OnPropertyChanged("OBJ_TXT");
                }
            }
        }

        /// <summary>
        /// Char 15
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string QUANTITY
        {
            get
            {
                return this.qUANTITYField;
            }
            set
            {
                if ((this.qUANTITYField != null))
                {
                    if ((qUANTITYField.Equals(value) != true))
                    {
                        this.qUANTITYField = value;
                        this.OnPropertyChanged("QUANTITY");
                    }
                }
                else
                {
                    this.qUANTITYField = value;
                    this.OnPropertyChanged("QUANTITY");
                }
            }
        }

        /// <summary>
        /// Statement was Inferred
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string AUTHOR
        {
            get
            {
                return this.aUTHORField;
            }
            set
            {
                if ((this.aUTHORField != null))
                {
                    if ((aUTHORField.Equals(value) != true))
                    {
                        this.aUTHORField = value;
                        this.OnPropertyChanged("AUTHOR");
                    }
                }
                else
                {
                    this.aUTHORField = value;
                    this.OnPropertyChanged("AUTHOR");
                }
            }
        }

        /// <summary>
        /// Unit of Measure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string QUANTITY_UNIT
        {
            get
            {
                return this.qUANTITY_UNITField;
            }
            set
            {
                if ((this.qUANTITY_UNITField != null))
                {
                    if ((qUANTITY_UNITField.Equals(value) != true))
                    {
                        this.qUANTITY_UNITField = value;
                        this.OnPropertyChanged("QUANTITY_UNIT");
                    }
                }
                else
                {
                    this.qUANTITY_UNITField = value;
                    this.OnPropertyChanged("QUANTITY_UNIT");
                }
            }
        }

        /// <summary>
        /// General Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string COMPLETE
        {
            get
            {
                return this.cOMPLETEField;
            }
            set
            {
                if ((this.cOMPLETEField != null))
                {
                    if ((cOMPLETEField.Equals(value) != true))
                    {
                        this.cOMPLETEField = value;
                        this.OnPropertyChanged("COMPLETE");
                    }
                }
                else
                {
                    this.cOMPLETEField = value;
                    this.OnPropertyChanged("COMPLETE");
                }
            }
        }

        /// <summary>
        /// General Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string CONSISTENT
        {
            get
            {
                return this.cONSISTENTField;
            }
            set
            {
                if ((this.cONSISTENTField != null))
                {
                    if ((cONSISTENTField.Equals(value) != true))
                    {
                        this.cONSISTENTField = value;
                        this.OnPropertyChanged("CONSISTENT");
                    }
                }
                else
                {
                    this.cONSISTENTField = value;
                    this.OnPropertyChanged("CONSISTENT");
                }
            }
        }

        /// <summary>
        /// GUID for TYPE_OF Statement of Instance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string OBJECT_GUID
        {
            get
            {
                return this.oBJECT_GUIDField;
            }
            set
            {
                if ((this.oBJECT_GUIDField != null))
                {
                    if ((oBJECT_GUIDField.Equals(value) != true))
                    {
                        this.oBJECT_GUIDField = value;
                        this.OnPropertyChanged("OBJECT_GUID");
                    }
                }
                else
                {
                    this.oBJECT_GUIDField = value;
                    this.OnPropertyChanged("OBJECT_GUID");
                }
            }
        }

        /// <summary>
        /// Instance Number (Persistent)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string PERSIST_ID
        {
            get
            {
                return this.pERSIST_IDField;
            }
            set
            {
                if ((this.pERSIST_IDField != null))
                {
                    if ((pERSIST_IDField.Equals(value) != true))
                    {
                        this.pERSIST_IDField = value;
                        this.OnPropertyChanged("PERSIST_ID");
                    }
                }
                else
                {
                    this.pERSIST_IDField = value;
                    this.OnPropertyChanged("PERSIST_ID");
                }
            }
        }

        /// <summary>
        /// Type of Instance Number (Persistent)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string PERSIST_ID_TYPE
        {
            get
            {
                return this.pERSIST_ID_TYPEField;
            }
            set
            {
                if ((this.pERSIST_ID_TYPEField != null))
                {
                    if ((pERSIST_ID_TYPEField.Equals(value) != true))
                    {
                        this.pERSIST_ID_TYPEField = value;
                        this.OnPropertyChanged("PERSIST_ID_TYPE");
                    }
                }
                else
                {
                    this.pERSIST_ID_TYPEField = value;
                    this.OnPropertyChanged("PERSIST_ID_TYPE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1CUCFGE1CUINSSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1CUCFGE1CUINS));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool INST_IDSpecified
        {
            get
            {
                return iNST_IDFieldSpecified;
            }
            set
            {
                iNST_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJ_TYPESpecified
        {
            get
            {
                return oBJ_TYPEFieldSpecified;
            }
            set
            {
                oBJ_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CLASS_TYPESpecified
        {
            get
            {
                return cLASS_TYPEFieldSpecified;
            }
            set
            {
                cLASS_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJ_KEYSpecified
        {
            get
            {
                return oBJ_KEYFieldSpecified;
            }
            set
            {
                oBJ_KEYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJ_TXTSpecified
        {
            get
            {
                return oBJ_TXTFieldSpecified;
            }
            set
            {
                oBJ_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool QUANTITYSpecified
        {
            get
            {
                return qUANTITYFieldSpecified;
            }
            set
            {
                qUANTITYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUTHORSpecified
        {
            get
            {
                return aUTHORFieldSpecified;
            }
            set
            {
                aUTHORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool QUANTITY_UNITSpecified
        {
            get
            {
                return qUANTITY_UNITFieldSpecified;
            }
            set
            {
                qUANTITY_UNITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool COMPLETESpecified
        {
            get
            {
                return cOMPLETEFieldSpecified;
            }
            set
            {
                cOMPLETEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CONSISTENTSpecified
        {
            get
            {
                return cONSISTENTFieldSpecified;
            }
            set
            {
                cONSISTENTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJECT_GUIDSpecified
        {
            get
            {
                return oBJECT_GUIDFieldSpecified;
            }
            set
            {
                oBJECT_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERSIST_IDSpecified
        {
            get
            {
                return pERSIST_IDFieldSpecified;
            }
            set
            {
                pERSIST_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PERSIST_ID_TYPESpecified
        {
            get
            {
                return pERSIST_ID_TYPEFieldSpecified;
            }
            set
            {
                pERSIST_ID_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUINS object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1CUCFGE1CUINS object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUINS object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUINS obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUINS);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUINS obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUINS Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1CUCFGE1CUINS)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUINS object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1CUCFGE1CUINS object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUINS object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1CUCFGE1CUINS obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUINS);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUINS obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUINS obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUINS LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1CUCFGE1CUINS LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1CUCFGE1CUINSSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// CU: part-of data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1CUCFGE1CUPRT : System.ComponentModel.INotifyPropertyChanged
    {

        private string pARENT_IDField;

        private string iNST_IDField;

        private string pART_OF_NOField;

        private string oBJ_TYPEField;

        private string cLASS_TYPEField;

        private string oBJ_KEYField;

        private string aUTHORField;

        private string sALES_RELEVANTField;

        private string pART_OF_GUIDField;

        private ORDERS05IDOCE1CUCFGE1CUPRTSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool pARENT_IDFieldSpecified;

        private bool iNST_IDFieldSpecified;

        private bool pART_OF_NOFieldSpecified;

        private bool oBJ_TYPEFieldSpecified;

        private bool cLASS_TYPEFieldSpecified;

        private bool oBJ_KEYFieldSpecified;

        private bool aUTHORFieldSpecified;

        private bool sALES_RELEVANTFieldSpecified;

        private bool pART_OF_GUIDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string PARENT_ID
        {
            get
            {
                return this.pARENT_IDField;
            }
            set
            {
                if ((this.pARENT_IDField != null))
                {
                    if ((pARENT_IDField.Equals(value) != true))
                    {
                        this.pARENT_IDField = value;
                        this.OnPropertyChanged("PARENT_ID");
                    }
                }
                else
                {
                    this.pARENT_IDField = value;
                    this.OnPropertyChanged("PARENT_ID");
                }
            }
        }

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string INST_ID
        {
            get
            {
                return this.iNST_IDField;
            }
            set
            {
                if ((this.iNST_IDField != null))
                {
                    if ((iNST_IDField.Equals(value) != true))
                    {
                        this.iNST_IDField = value;
                        this.OnPropertyChanged("INST_ID");
                    }
                }
                else
                {
                    this.iNST_IDField = value;
                    this.OnPropertyChanged("INST_ID");
                }
            }
        }

        /// <summary>
        /// Not More Closely Defined Area, Possibly Used for Patchlevels
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string PART_OF_NO
        {
            get
            {
                return this.pART_OF_NOField;
            }
            set
            {
                if ((this.pART_OF_NOField != null))
                {
                    if ((pART_OF_NOField.Equals(value) != true))
                    {
                        this.pART_OF_NOField = value;
                        this.OnPropertyChanged("PART_OF_NO");
                    }
                }
                else
                {
                    this.pART_OF_NOField = value;
                    this.OnPropertyChanged("PART_OF_NO");
                }
            }
        }

        /// <summary>
        /// Character Field Length = 10
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string OBJ_TYPE
        {
            get
            {
                return this.oBJ_TYPEField;
            }
            set
            {
                if ((this.oBJ_TYPEField != null))
                {
                    if ((oBJ_TYPEField.Equals(value) != true))
                    {
                        this.oBJ_TYPEField = value;
                        this.OnPropertyChanged("OBJ_TYPE");
                    }
                }
                else
                {
                    this.oBJ_TYPEField = value;
                    this.OnPropertyChanged("OBJ_TYPE");
                }
            }
        }

        /// <summary>
        /// 3-Byte field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string CLASS_TYPE
        {
            get
            {
                return this.cLASS_TYPEField;
            }
            set
            {
                if ((this.cLASS_TYPEField != null))
                {
                    if ((cLASS_TYPEField.Equals(value) != true))
                    {
                        this.cLASS_TYPEField = value;
                        this.OnPropertyChanged("CLASS_TYPE");
                    }
                }
                else
                {
                    this.cLASS_TYPEField = value;
                    this.OnPropertyChanged("CLASS_TYPE");
                }
            }
        }

        /// <summary>
        /// Comment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string OBJ_KEY
        {
            get
            {
                return this.oBJ_KEYField;
            }
            set
            {
                if ((this.oBJ_KEYField != null))
                {
                    if ((oBJ_KEYField.Equals(value) != true))
                    {
                        this.oBJ_KEYField = value;
                        this.OnPropertyChanged("OBJ_KEY");
                    }
                }
                else
                {
                    this.oBJ_KEYField = value;
                    this.OnPropertyChanged("OBJ_KEY");
                }
            }
        }

        /// <summary>
        /// Statement was Inferred
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string AUTHOR
        {
            get
            {
                return this.aUTHORField;
            }
            set
            {
                if ((this.aUTHORField != null))
                {
                    if ((aUTHORField.Equals(value) != true))
                    {
                        this.aUTHORField = value;
                        this.OnPropertyChanged("AUTHOR");
                    }
                }
                else
                {
                    this.aUTHORField = value;
                    this.OnPropertyChanged("AUTHOR");
                }
            }
        }

        /// <summary>
        /// Part is Sales-Relevant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string SALES_RELEVANT
        {
            get
            {
                return this.sALES_RELEVANTField;
            }
            set
            {
                if ((this.sALES_RELEVANTField != null))
                {
                    if ((sALES_RELEVANTField.Equals(value) != true))
                    {
                        this.sALES_RELEVANTField = value;
                        this.OnPropertyChanged("SALES_RELEVANT");
                    }
                }
                else
                {
                    this.sALES_RELEVANTField = value;
                    this.OnPropertyChanged("SALES_RELEVANT");
                }
            }
        }

        /// <summary>
        /// GUID for PART_OF Statement for Instance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string PART_OF_GUID
        {
            get
            {
                return this.pART_OF_GUIDField;
            }
            set
            {
                if ((this.pART_OF_GUIDField != null))
                {
                    if ((pART_OF_GUIDField.Equals(value) != true))
                    {
                        this.pART_OF_GUIDField = value;
                        this.OnPropertyChanged("PART_OF_GUID");
                    }
                }
                else
                {
                    this.pART_OF_GUIDField = value;
                    this.OnPropertyChanged("PART_OF_GUID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1CUCFGE1CUPRTSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1CUCFGE1CUPRT));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool PARENT_IDSpecified
        {
            get
            {
                return pARENT_IDFieldSpecified;
            }
            set
            {
                pARENT_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool INST_IDSpecified
        {
            get
            {
                return iNST_IDFieldSpecified;
            }
            set
            {
                iNST_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PART_OF_NOSpecified
        {
            get
            {
                return pART_OF_NOFieldSpecified;
            }
            set
            {
                pART_OF_NOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJ_TYPESpecified
        {
            get
            {
                return oBJ_TYPEFieldSpecified;
            }
            set
            {
                oBJ_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CLASS_TYPESpecified
        {
            get
            {
                return cLASS_TYPEFieldSpecified;
            }
            set
            {
                cLASS_TYPEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool OBJ_KEYSpecified
        {
            get
            {
                return oBJ_KEYFieldSpecified;
            }
            set
            {
                oBJ_KEYFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUTHORSpecified
        {
            get
            {
                return aUTHORFieldSpecified;
            }
            set
            {
                aUTHORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SALES_RELEVANTSpecified
        {
            get
            {
                return sALES_RELEVANTFieldSpecified;
            }
            set
            {
                sALES_RELEVANTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PART_OF_GUIDSpecified
        {
            get
            {
                return pART_OF_GUIDFieldSpecified;
            }
            set
            {
                pART_OF_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUPRT object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1CUCFGE1CUPRT object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUPRT object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUPRT obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUPRT);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUPRT obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUPRT Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1CUCFGE1CUPRT)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUPRT object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1CUCFGE1CUPRT object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUPRT object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1CUCFGE1CUPRT obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUPRT);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUPRT obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUPRT obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUPRT LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1CUCFGE1CUPRT LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1CUCFGE1CUPRTSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// CU: Characteristic valuation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1CUCFGE1CUVAL : System.ComponentModel.INotifyPropertyChanged
    {

        private string iNST_IDField;

        private string cHARCField;

        private string cHARC_TXTField;

        private string vALUEField;

        private string vALUE_TXTField;

        private string aUTHORField;

        private string vALUE_TOField;

        private string vALCODEField;

        private ORDERS05IDOCE1CUCFGE1CUVALSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool iNST_IDFieldSpecified;

        private bool cHARCFieldSpecified;

        private bool cHARC_TXTFieldSpecified;

        private bool vALUEFieldSpecified;

        private bool vALUE_TXTFieldSpecified;

        private bool aUTHORFieldSpecified;

        private bool vALUE_TOFieldSpecified;

        private bool vALCODEFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Character field, 8 characters long
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string INST_ID
        {
            get
            {
                return this.iNST_IDField;
            }
            set
            {
                if ((this.iNST_IDField != null))
                {
                    if ((iNST_IDField.Equals(value) != true))
                    {
                        this.iNST_IDField = value;
                        this.OnPropertyChanged("INST_ID");
                    }
                }
                else
                {
                    this.iNST_IDField = value;
                    this.OnPropertyChanged("INST_ID");
                }
            }
        }

        /// <summary>
        /// Character field of length 40
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string CHARC
        {
            get
            {
                return this.cHARCField;
            }
            set
            {
                if ((this.cHARCField != null))
                {
                    if ((cHARCField.Equals(value) != true))
                    {
                        this.cHARCField = value;
                        this.OnPropertyChanged("CHARC");
                    }
                }
                else
                {
                    this.cHARCField = value;
                    this.OnPropertyChanged("CHARC");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CHARC_TXT
        {
            get
            {
                return this.cHARC_TXTField;
            }
            set
            {
                if ((this.cHARC_TXTField != null))
                {
                    if ((cHARC_TXTField.Equals(value) != true))
                    {
                        this.cHARC_TXTField = value;
                        this.OnPropertyChanged("CHARC_TXT");
                    }
                }
                else
                {
                    this.cHARC_TXTField = value;
                    this.OnPropertyChanged("CHARC_TXT");
                }
            }
        }

        /// <summary>
        /// Character field of length 40
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string VALUE
        {
            get
            {
                return this.vALUEField;
            }
            set
            {
                if ((this.vALUEField != null))
                {
                    if ((vALUEField.Equals(value) != true))
                    {
                        this.vALUEField = value;
                        this.OnPropertyChanged("VALUE");
                    }
                }
                else
                {
                    this.vALUEField = value;
                    this.OnPropertyChanged("VALUE");
                }
            }
        }

        /// <summary>
        /// Character field, length 70
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string VALUE_TXT
        {
            get
            {
                return this.vALUE_TXTField;
            }
            set
            {
                if ((this.vALUE_TXTField != null))
                {
                    if ((vALUE_TXTField.Equals(value) != true))
                    {
                        this.vALUE_TXTField = value;
                        this.OnPropertyChanged("VALUE_TXT");
                    }
                }
                else
                {
                    this.vALUE_TXTField = value;
                    this.OnPropertyChanged("VALUE_TXT");
                }
            }
        }

        /// <summary>
        /// Statement was Inferred
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string AUTHOR
        {
            get
            {
                return this.aUTHORField;
            }
            set
            {
                if ((this.aUTHORField != null))
                {
                    if ((aUTHORField.Equals(value) != true))
                    {
                        this.aUTHORField = value;
                        this.OnPropertyChanged("AUTHOR");
                    }
                }
                else
                {
                    this.aUTHORField = value;
                    this.OnPropertyChanged("AUTHOR");
                }
            }
        }

        /// <summary>
        /// Characteristic Value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string VALUE_TO
        {
            get
            {
                return this.vALUE_TOField;
            }
            set
            {
                if ((this.vALUE_TOField != null))
                {
                    if ((vALUE_TOField.Equals(value) != true))
                    {
                        this.vALUE_TOField = value;
                        this.OnPropertyChanged("VALUE_TO");
                    }
                }
                else
                {
                    this.vALUE_TOField = value;
                    this.OnPropertyChanged("VALUE_TO");
                }
            }
        }

        /// <summary>
        /// Value Type: Interval Limits - Single Values
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string VALCODE
        {
            get
            {
                return this.vALCODEField;
            }
            set
            {
                if ((this.vALCODEField != null))
                {
                    if ((vALCODEField.Equals(value) != true))
                    {
                        this.vALCODEField = value;
                        this.OnPropertyChanged("VALCODE");
                    }
                }
                else
                {
                    this.vALCODEField = value;
                    this.OnPropertyChanged("VALCODE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1CUCFGE1CUVALSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1CUCFGE1CUVAL));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool INST_IDSpecified
        {
            get
            {
                return iNST_IDFieldSpecified;
            }
            set
            {
                iNST_IDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CHARCSpecified
        {
            get
            {
                return cHARCFieldSpecified;
            }
            set
            {
                cHARCFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CHARC_TXTSpecified
        {
            get
            {
                return cHARC_TXTFieldSpecified;
            }
            set
            {
                cHARC_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VALUESpecified
        {
            get
            {
                return vALUEFieldSpecified;
            }
            set
            {
                vALUEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VALUE_TXTSpecified
        {
            get
            {
                return vALUE_TXTFieldSpecified;
            }
            set
            {
                vALUE_TXTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AUTHORSpecified
        {
            get
            {
                return aUTHORFieldSpecified;
            }
            set
            {
                aUTHORFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VALUE_TOSpecified
        {
            get
            {
                return vALUE_TOFieldSpecified;
            }
            set
            {
                vALUE_TOFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VALCODESpecified
        {
            get
            {
                return vALCODEFieldSpecified;
            }
            set
            {
                vALCODEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUVAL object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1CUCFGE1CUVAL object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUVAL object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUVAL obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUVAL);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUVAL obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUVAL Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1CUCFGE1CUVAL)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUVAL object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1CUCFGE1CUVAL object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUVAL object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1CUCFGE1CUVAL obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUVAL);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUVAL obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUVAL obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUVAL LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1CUCFGE1CUVAL LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1CUCFGE1CUVALSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// CU: Configuration BLOB (SCE)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1CUCFGE1CUBLB : System.ComponentModel.INotifyPropertyChanged
    {

        private string cONTENTField;

        private ORDERS05IDOCE1CUCFGE1CUBLBSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool cONTENTFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// CU: Configuration BLOB (SCE)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string CONTENT
        {
            get
            {
                return this.cONTENTField;
            }
            set
            {
                if ((this.cONTENTField != null))
                {
                    if ((cONTENTField.Equals(value) != true))
                    {
                        this.cONTENTField = value;
                        this.OnPropertyChanged("CONTENT");
                    }
                }
                else
                {
                    this.cONTENTField = value;
                    this.OnPropertyChanged("CONTENT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1CUCFGE1CUBLBSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1CUCFGE1CUBLB));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool CONTENTSpecified
        {
            get
            {
                return cONTENTFieldSpecified;
            }
            set
            {
                cONTENTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUBLB object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1CUCFGE1CUBLB object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUBLB object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUBLB obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUBLB);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1CUCFGE1CUBLB obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUBLB Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1CUCFGE1CUBLB)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1CUCFGE1CUBLB object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1CUCFGE1CUBLB object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1CUCFGE1CUBLB object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1CUCFGE1CUBLB obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1CUCFGE1CUBLB);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUBLB obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1CUCFGE1CUBLB obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1CUCFGE1CUBLB LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1CUCFGE1CUBLB LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1CUCFGE1CUBLBSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1CUCFGSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Handling unit header
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDL37 : System.ComponentModel.INotifyPropertyChanged
    {

        private string eXIDVField;

        private string tARAGField;

        private string gWEITField;

        private string bRGEWField;

        private string nTGEWField;

        private string mAGEWField;

        private string gWEIMField;

        private string bTVOLField;

        private string nTVOLField;

        private string mAVOLField;

        private string vOLEMField;

        private string tAVOLField;

        private string vOLETField;

        private string vEGR2Field;

        private string vEGR1Field;

        private string vEGR3Field;

        private string vHILMField;

        private string vEGR4Field;

        private string lAENGField;

        private string vEGR5Field;

        private string bREITField;

        private string hOEHEField;

        private string mEABMField;

        private string iNHALTField;

        private string vHARTField;

        private string mAGRVField;

        private string lADLGField;

        private string lADEHField;

        private string fARZTField;

        private string fAREHField;

        private string eNTFEField;

        private string eHENTField;

        private string vELTPField;

        private string eXIDV2Field;

        private string lANDTField;

        private string lANDFField;

        private string nAMEFField;

        private string nAMBEField;

        private string vHILM_KUField;

        private string vEBEZField;

        private string sMGKNField;

        private string kDMAT35Field;

        private string sORTLField;

        private string eRNAMField;

        private string gEWFXField;

        private string eRLKZField;

        private string eXIDAField;

        private string mOVE_STATUSField;

        private string pACKVORSCHRField;

        private string pACKVORSCHR_STField;

        private string lABELTYPField;

        private string zUL_AUFLField;

        private string vHILM_EXTERNALField;

        private string vHILM_VERSIONField;

        private string vHILM_GUIDField;

        private List<ORDERS05IDOCE1EDL37E1EDL39> e1EDL39Field;

        private ORDERS05IDOCE1EDL37E1EDL38 e1EDL38Field;

        private List<ORDERS05IDOCE1EDL37E1EDL44> e1EDL44Field;

        private ORDERS05IDOCE1EDL37SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool eXIDVFieldSpecified;

        private bool tARAGFieldSpecified;

        private bool gWEITFieldSpecified;

        private bool bRGEWFieldSpecified;

        private bool nTGEWFieldSpecified;

        private bool mAGEWFieldSpecified;

        private bool gWEIMFieldSpecified;

        private bool bTVOLFieldSpecified;

        private bool nTVOLFieldSpecified;

        private bool mAVOLFieldSpecified;

        private bool vOLEMFieldSpecified;

        private bool tAVOLFieldSpecified;

        private bool vOLETFieldSpecified;

        private bool vEGR2FieldSpecified;

        private bool vEGR1FieldSpecified;

        private bool vEGR3FieldSpecified;

        private bool vHILMFieldSpecified;

        private bool vEGR4FieldSpecified;

        private bool lAENGFieldSpecified;

        private bool vEGR5FieldSpecified;

        private bool bREITFieldSpecified;

        private bool hOEHEFieldSpecified;

        private bool mEABMFieldSpecified;

        private bool iNHALTFieldSpecified;

        private bool vHARTFieldSpecified;

        private bool mAGRVFieldSpecified;

        private bool lADLGFieldSpecified;

        private bool lADEHFieldSpecified;

        private bool fARZTFieldSpecified;

        private bool fAREHFieldSpecified;

        private bool eNTFEFieldSpecified;

        private bool eHENTFieldSpecified;

        private bool vELTPFieldSpecified;

        private bool eXIDV2FieldSpecified;

        private bool lANDTFieldSpecified;

        private bool lANDFFieldSpecified;

        private bool nAMEFFieldSpecified;

        private bool nAMBEFieldSpecified;

        private bool vHILM_KUFieldSpecified;

        private bool vEBEZFieldSpecified;

        private bool sMGKNFieldSpecified;

        private bool kDMAT35FieldSpecified;

        private bool sORTLFieldSpecified;

        private bool eRNAMFieldSpecified;

        private bool gEWFXFieldSpecified;

        private bool eRLKZFieldSpecified;

        private bool eXIDAFieldSpecified;

        private bool mOVE_STATUSFieldSpecified;

        private bool pACKVORSCHRFieldSpecified;

        private bool pACKVORSCHR_STFieldSpecified;

        private bool lABELTYPFieldSpecified;

        private bool zUL_AUFLFieldSpecified;

        private bool vHILM_EXTERNALFieldSpecified;

        private bool vHILM_VERSIONFieldSpecified;

        private bool vHILM_GUIDFieldSpecified;

        private bool e1EDL39FieldSpecified;

        private bool e1EDL38FieldSpecified;

        private bool e1EDL44FieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// ORDERS05IDOCE1EDL37 class constructor
        /// </summary>
        public ORDERS05IDOCE1EDL37()
        {
            this.e1EDL44Field = new List<ORDERS05IDOCE1EDL37E1EDL44>();
            this.e1EDL38Field = new ORDERS05IDOCE1EDL37E1EDL38();
            this.e1EDL39Field = new List<ORDERS05IDOCE1EDL37E1EDL39>();
        }

        /// <summary>
        /// External Handling Unit Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string EXIDV
        {
            get
            {
                return this.eXIDVField;
            }
            set
            {
                if ((this.eXIDVField != null))
                {
                    if ((eXIDVField.Equals(value) != true))
                    {
                        this.eXIDVField = value;
                        this.OnPropertyChanged("EXIDV");
                    }
                }
                else
                {
                    this.eXIDVField = value;
                    this.OnPropertyChanged("EXIDV");
                }
            }
        }

        /// <summary>
        /// Tare weight of handling unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TARAG
        {
            get
            {
                return this.tARAGField;
            }
            set
            {
                if ((this.tARAGField != null))
                {
                    if ((tARAGField.Equals(value) != true))
                    {
                        this.tARAGField = value;
                        this.OnPropertyChanged("TARAG");
                    }
                }
                else
                {
                    this.tARAGField = value;
                    this.OnPropertyChanged("TARAG");
                }
            }
        }

        /// <summary>
        /// Weight Unit Tare
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string GWEIT
        {
            get
            {
                return this.gWEITField;
            }
            set
            {
                if ((this.gWEITField != null))
                {
                    if ((gWEITField.Equals(value) != true))
                    {
                        this.gWEITField = value;
                        this.OnPropertyChanged("GWEIT");
                    }
                }
                else
                {
                    this.gWEITField = value;
                    this.OnPropertyChanged("GWEIT");
                }
            }
        }

        /// <summary>
        /// Total Weight of Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BRGEW
        {
            get
            {
                return this.bRGEWField;
            }
            set
            {
                if ((this.bRGEWField != null))
                {
                    if ((bRGEWField.Equals(value) != true))
                    {
                        this.bRGEWField = value;
                        this.OnPropertyChanged("BRGEW");
                    }
                }
                else
                {
                    this.bRGEWField = value;
                    this.OnPropertyChanged("BRGEW");
                }
            }
        }

        /// <summary>
        /// Loading Weight of Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string NTGEW
        {
            get
            {
                return this.nTGEWField;
            }
            set
            {
                if ((this.nTGEWField != null))
                {
                    if ((nTGEWField.Equals(value) != true))
                    {
                        this.nTGEWField = value;
                        this.OnPropertyChanged("NTGEW");
                    }
                }
                else
                {
                    this.nTGEWField = value;
                    this.OnPropertyChanged("NTGEW");
                }
            }
        }

        /// <summary>
        /// Allowed Loading Weight of a Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string MAGEW
        {
            get
            {
                return this.mAGEWField;
            }
            set
            {
                if ((this.mAGEWField != null))
                {
                    if ((mAGEWField.Equals(value) != true))
                    {
                        this.mAGEWField = value;
                        this.OnPropertyChanged("MAGEW");
                    }
                }
                else
                {
                    this.mAGEWField = value;
                    this.OnPropertyChanged("MAGEW");
                }
            }
        }

        /// <summary>
        /// Weight Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string GWEIM
        {
            get
            {
                return this.gWEIMField;
            }
            set
            {
                if ((this.gWEIMField != null))
                {
                    if ((gWEIMField.Equals(value) != true))
                    {
                        this.gWEIMField = value;
                        this.OnPropertyChanged("GWEIM");
                    }
                }
                else
                {
                    this.gWEIMField = value;
                    this.OnPropertyChanged("GWEIM");
                }
            }
        }

        /// <summary>
        /// Total Volume of Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string BTVOL
        {
            get
            {
                return this.bTVOLField;
            }
            set
            {
                if ((this.bTVOLField != null))
                {
                    if ((bTVOLField.Equals(value) != true))
                    {
                        this.bTVOLField = value;
                        this.OnPropertyChanged("BTVOL");
                    }
                }
                else
                {
                    this.bTVOLField = value;
                    this.OnPropertyChanged("BTVOL");
                }
            }
        }

        /// <summary>
        /// Loading Volume of Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string NTVOL
        {
            get
            {
                return this.nTVOLField;
            }
            set
            {
                if ((this.nTVOLField != null))
                {
                    if ((nTVOLField.Equals(value) != true))
                    {
                        this.nTVOLField = value;
                        this.OnPropertyChanged("NTVOL");
                    }
                }
                else
                {
                    this.nTVOLField = value;
                    this.OnPropertyChanged("NTVOL");
                }
            }
        }

        /// <summary>
        /// Allowed Loading Volume for Handling Unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string MAVOL
        {
            get
            {
                return this.mAVOLField;
            }
            set
            {
                if ((this.mAVOLField != null))
                {
                    if ((mAVOLField.Equals(value) != true))
                    {
                        this.mAVOLField = value;
                        this.OnPropertyChanged("MAVOL");
                    }
                }
                else
                {
                    this.mAVOLField = value;
                    this.OnPropertyChanged("MAVOL");
                }
            }
        }

        /// <summary>
        /// Volume unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string VOLEM
        {
            get
            {
                return this.vOLEMField;
            }
            set
            {
                if ((this.vOLEMField != null))
                {
                    if ((vOLEMField.Equals(value) != true))
                    {
                        this.vOLEMField = value;
                        this.OnPropertyChanged("VOLEM");
                    }
                }
                else
                {
                    this.vOLEMField = value;
                    this.OnPropertyChanged("VOLEM");
                }
            }
        }

        /// <summary>
        /// Tare volume of handling unit
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string TAVOL
        {
            get
            {
                return this.tAVOLField;
            }
            set
            {
                if ((this.tAVOLField != null))
                {
                    if ((tAVOLField.Equals(value) != true))
                    {
                        this.tAVOLField = value;
                        this.OnPropertyChanged("TAVOL");
                    }
                }
                else
                {
                    this.tAVOLField = value;
                    this.OnPropertyChanged("TAVOL");
                }
            }
        }

        /// <summary>
        /// Volume Unit Tare
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string VOLET
        {
            get
            {
                return this.vOLETField;
            }
            set
            {
                if ((this.vOLETField != null))
                {
                    if ((vOLETField.Equals(value) != true))
                    {
                        this.vOLETField = value;
                        this.OnPropertyChanged("VOLET");
                    }
                }
                else
                {
                    this.vOLETField = value;
                    this.OnPropertyChanged("VOLET");
                }
            }
        }

        /// <summary>
        /// Handling Unit Group 2                     (Freely Definable)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string VEGR2
        {
            get
            {
                return this.vEGR2Field;
            }
            set
            {
                if ((this.vEGR2Field != null))
                {
                    if ((vEGR2Field.Equals(value) != true))
                    {
                        this.vEGR2Field = value;
                        this.OnPropertyChanged("VEGR2");
                    }
                }
                else
                {
                    this.vEGR2Field = value;
                    this.OnPropertyChanged("VEGR2");
                }
            }
        }

        /// <summary>
        /// Handling Unit Group 1                     (Freely Definable)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string VEGR1
        {
            get
            {
                return this.vEGR1Field;
            }
            set
            {
                if ((this.vEGR1Field != null))
                {
                    if ((vEGR1Field.Equals(value) != true))
                    {
                        this.vEGR1Field = value;
                        this.OnPropertyChanged("VEGR1");
                    }
                }
                else
                {
                    this.vEGR1Field = value;
                    this.OnPropertyChanged("VEGR1");
                }
            }
        }

        /// <summary>
        /// Handling Unit Group 3                     (Freely Definable)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string VEGR3
        {
            get
            {
                return this.vEGR3Field;
            }
            set
            {
                if ((this.vEGR3Field != null))
                {
                    if ((vEGR3Field.Equals(value) != true))
                    {
                        this.vEGR3Field = value;
                        this.OnPropertyChanged("VEGR3");
                    }
                }
                else
                {
                    this.vEGR3Field = value;
                    this.OnPropertyChanged("VEGR3");
                }
            }
        }

        /// <summary>
        /// Packaging Materials
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string VHILM
        {
            get
            {
                return this.vHILMField;
            }
            set
            {
                if ((this.vHILMField != null))
                {
                    if ((vHILMField.Equals(value) != true))
                    {
                        this.vHILMField = value;
                        this.OnPropertyChanged("VHILM");
                    }
                }
                else
                {
                    this.vHILMField = value;
                    this.OnPropertyChanged("VHILM");
                }
            }
        }

        /// <summary>
        /// Handling Unit Group 4                     (Freely Definable)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string VEGR4
        {
            get
            {
                return this.vEGR4Field;
            }
            set
            {
                if ((this.vEGR4Field != null))
                {
                    if ((vEGR4Field.Equals(value) != true))
                    {
                        this.vEGR4Field = value;
                        this.OnPropertyChanged("VEGR4");
                    }
                }
                else
                {
                    this.vEGR4Field = value;
                    this.OnPropertyChanged("VEGR4");
                }
            }
        }

        /// <summary>
        /// Length
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string LAENG
        {
            get
            {
                return this.lAENGField;
            }
            set
            {
                if ((this.lAENGField != null))
                {
                    if ((lAENGField.Equals(value) != true))
                    {
                        this.lAENGField = value;
                        this.OnPropertyChanged("LAENG");
                    }
                }
                else
                {
                    this.lAENGField = value;
                    this.OnPropertyChanged("LAENG");
                }
            }
        }

        /// <summary>
        /// Handling Unit Group 5                     (Freely Definable)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string VEGR5
        {
            get
            {
                return this.vEGR5Field;
            }
            set
            {
                if ((this.vEGR5Field != null))
                {
                    if ((vEGR5Field.Equals(value) != true))
                    {
                        this.vEGR5Field = value;
                        this.OnPropertyChanged("VEGR5");
                    }
                }
                else
                {
                    this.vEGR5Field = value;
                    this.OnPropertyChanged("VEGR5");
                }
            }
        }

        /// <summary>
        /// Width
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string BREIT
        {
            get
            {
                return this.bREITField;
            }
            set
            {
                if ((this.bREITField != null))
                {
                    if ((bREITField.Equals(value) != true))
                    {
                        this.bREITField = value;
                        this.OnPropertyChanged("BREIT");
                    }
                }
                else
                {
                    this.bREITField = value;
                    this.OnPropertyChanged("BREIT");
                }
            }
        }

        /// <summary>
        /// Height
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string HOEHE
        {
            get
            {
                return this.hOEHEField;
            }
            set
            {
                if ((this.hOEHEField != null))
                {
                    if ((hOEHEField.Equals(value) != true))
                    {
                        this.hOEHEField = value;
                        this.OnPropertyChanged("HOEHE");
                    }
                }
                else
                {
                    this.hOEHEField = value;
                    this.OnPropertyChanged("HOEHE");
                }
            }
        }

        /// <summary>
        /// Unit of Dimension for Length/Width/Height
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string MEABM
        {
            get
            {
                return this.mEABMField;
            }
            set
            {
                if ((this.mEABMField != null))
                {
                    if ((mEABMField.Equals(value) != true))
                    {
                        this.mEABMField = value;
                        this.OnPropertyChanged("MEABM");
                    }
                }
                else
                {
                    this.mEABMField = value;
                    this.OnPropertyChanged("MEABM");
                }
            }
        }

        /// <summary>
        /// Description of Handling Unit Content
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string INHALT
        {
            get
            {
                return this.iNHALTField;
            }
            set
            {
                if ((this.iNHALTField != null))
                {
                    if ((iNHALTField.Equals(value) != true))
                    {
                        this.iNHALTField = value;
                        this.OnPropertyChanged("INHALT");
                    }
                }
                else
                {
                    this.iNHALTField = value;
                    this.OnPropertyChanged("INHALT");
                }
            }
        }

        /// <summary>
        /// Packaging Material Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string VHART
        {
            get
            {
                return this.vHARTField;
            }
            set
            {
                if ((this.vHARTField != null))
                {
                    if ((vHARTField.Equals(value) != true))
                    {
                        this.vHARTField = value;
                        this.OnPropertyChanged("VHART");
                    }
                }
                else
                {
                    this.vHARTField = value;
                    this.OnPropertyChanged("VHART");
                }
            }
        }

        /// <summary>
        /// Material Group: Packaging Materials
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string MAGRV
        {
            get
            {
                return this.mAGRVField;
            }
            set
            {
                if ((this.mAGRVField != null))
                {
                    if ((mAGRVField.Equals(value) != true))
                    {
                        this.mAGRVField = value;
                        this.OnPropertyChanged("MAGRV");
                    }
                }
                else
                {
                    this.mAGRVField = value;
                    this.OnPropertyChanged("MAGRV");
                }
            }
        }

        /// <summary>
        /// Lgth of loading platform in lgth of LdPlat measurement units
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string LADLG
        {
            get
            {
                return this.lADLGField;
            }
            set
            {
                if ((this.lADLGField != null))
                {
                    if ((lADLGField.Equals(value) != true))
                    {
                        this.lADLGField = value;
                        this.OnPropertyChanged("LADLG");
                    }
                }
                else
                {
                    this.lADLGField = value;
                    this.OnPropertyChanged("LADLG");
                }
            }
        }

        /// <summary>
        /// Unit of measure to measure the length of loading platform
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string LADEH
        {
            get
            {
                return this.lADEHField;
            }
            set
            {
                if ((this.lADEHField != null))
                {
                    if ((lADEHField.Equals(value) != true))
                    {
                        this.lADEHField = value;
                        this.OnPropertyChanged("LADEH");
                    }
                }
                else
                {
                    this.lADEHField = value;
                    this.OnPropertyChanged("LADEH");
                }
            }
        }

        /// <summary>
        /// Travel Time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string FARZT
        {
            get
            {
                return this.fARZTField;
            }
            set
            {
                if ((this.fARZTField != null))
                {
                    if ((fARZTField.Equals(value) != true))
                    {
                        this.fARZTField = value;
                        this.OnPropertyChanged("FARZT");
                    }
                }
                else
                {
                    this.fARZTField = value;
                    this.OnPropertyChanged("FARZT");
                }
            }
        }

        /// <summary>
        /// Unit of travel time
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string FAREH
        {
            get
            {
                return this.fAREHField;
            }
            set
            {
                if ((this.fAREHField != null))
                {
                    if ((fAREHField.Equals(value) != true))
                    {
                        this.fAREHField = value;
                        this.OnPropertyChanged("FAREH");
                    }
                }
                else
                {
                    this.fAREHField = value;
                    this.OnPropertyChanged("FAREH");
                }
            }
        }

        /// <summary>
        /// Distance Travelled
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string ENTFE
        {
            get
            {
                return this.eNTFEField;
            }
            set
            {
                if ((this.eNTFEField != null))
                {
                    if ((eNTFEField.Equals(value) != true))
                    {
                        this.eNTFEField = value;
                        this.OnPropertyChanged("ENTFE");
                    }
                }
                else
                {
                    this.eNTFEField = value;
                    this.OnPropertyChanged("ENTFE");
                }
            }
        }

        /// <summary>
        /// Unit of distance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string EHENT
        {
            get
            {
                return this.eHENTField;
            }
            set
            {
                if ((this.eHENTField != null))
                {
                    if ((eHENTField.Equals(value) != true))
                    {
                        this.eHENTField = value;
                        this.OnPropertyChanged("EHENT");
                    }
                }
                else
                {
                    this.eHENTField = value;
                    this.OnPropertyChanged("EHENT");
                }
            }
        }

        /// <summary>
        /// Packaging Material Category
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string VELTP
        {
            get
            {
                return this.vELTPField;
            }
            set
            {
                if ((this.vELTPField != null))
                {
                    if ((vELTPField.Equals(value) != true))
                    {
                        this.vELTPField = value;
                        this.OnPropertyChanged("VELTP");
                    }
                }
                else
                {
                    this.vELTPField = value;
                    this.OnPropertyChanged("VELTP");
                }
            }
        }

        /// <summary>
        /// Handling Unit's 2nd External Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string EXIDV2
        {
            get
            {
                return this.eXIDV2Field;
            }
            set
            {
                if ((this.eXIDV2Field != null))
                {
                    if ((eXIDV2Field.Equals(value) != true))
                    {
                        this.eXIDV2Field = value;
                        this.OnPropertyChanged("EXIDV2");
                    }
                }
                else
                {
                    this.eXIDV2Field = value;
                    this.OnPropertyChanged("EXIDV2");
                }
            }
        }

        /// <summary>
        /// Country providing means of transport
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string LANDT
        {
            get
            {
                return this.lANDTField;
            }
            set
            {
                if ((this.lANDTField != null))
                {
                    if ((lANDTField.Equals(value) != true))
                    {
                        this.lANDTField = value;
                        this.OnPropertyChanged("LANDT");
                    }
                }
                else
                {
                    this.lANDTField = value;
                    this.OnPropertyChanged("LANDT");
                }
            }
        }

        /// <summary>
        /// Driver's Nationality
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string LANDF
        {
            get
            {
                return this.lANDFField;
            }
            set
            {
                if ((this.lANDFField != null))
                {
                    if ((lANDFField.Equals(value) != true))
                    {
                        this.lANDFField = value;
                        this.OnPropertyChanged("LANDF");
                    }
                }
                else
                {
                    this.lANDFField = value;
                    this.OnPropertyChanged("LANDF");
                }
            }
        }

        /// <summary>
        /// Driver name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string NAMEF
        {
            get
            {
                return this.nAMEFField;
            }
            set
            {
                if ((this.nAMEFField != null))
                {
                    if ((nAMEFField.Equals(value) != true))
                    {
                        this.nAMEFField = value;
                        this.OnPropertyChanged("NAMEF");
                    }
                }
                else
                {
                    this.nAMEFField = value;
                    this.OnPropertyChanged("NAMEF");
                }
            }
        }

        /// <summary>
        /// Alternate Driver's Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string NAMBE
        {
            get
            {
                return this.nAMBEField;
            }
            set
            {
                if ((this.nAMBEField != null))
                {
                    if ((nAMBEField.Equals(value) != true))
                    {
                        this.nAMBEField = value;
                        this.OnPropertyChanged("NAMBE");
                    }
                }
                else
                {
                    this.nAMBEField = value;
                    this.OnPropertyChanged("NAMBE");
                }
            }
        }

        /// <summary>
        /// Material belonging to the customer
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string VHILM_KU
        {
            get
            {
                return this.vHILM_KUField;
            }
            set
            {
                if ((this.vHILM_KUField != null))
                {
                    if ((vHILM_KUField.Equals(value) != true))
                    {
                        this.vHILM_KUField = value;
                        this.OnPropertyChanged("VHILM_KU");
                    }
                }
                else
                {
                    this.vHILM_KUField = value;
                    this.OnPropertyChanged("VHILM_KU");
                }
            }
        }

        /// <summary>
        /// Description of Packaging Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string VEBEZ
        {
            get
            {
                return this.vEBEZField;
            }
            set
            {
                if ((this.vEBEZField != null))
                {
                    if ((vEBEZField.Equals(value) != true))
                    {
                        this.vEBEZField = value;
                        this.OnPropertyChanged("VEBEZ");
                    }
                }
                else
                {
                    this.vEBEZField = value;
                    this.OnPropertyChanged("VEBEZ");
                }
            }
        }

        /// <summary>
        /// SMG identification for material tag
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string SMGKN
        {
            get
            {
                return this.sMGKNField;
            }
            set
            {
                if ((this.sMGKNField != null))
                {
                    if ((sMGKNField.Equals(value) != true))
                    {
                        this.sMGKNField = value;
                        this.OnPropertyChanged("SMGKN");
                    }
                }
                else
                {
                    this.sMGKNField = value;
                    this.OnPropertyChanged("SMGKN");
                }
            }
        }

        /// <summary>
        /// Partner's (Customer's or Vendor's) Packaging Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string KDMAT35
        {
            get
            {
                return this.kDMAT35Field;
            }
            set
            {
                if ((this.kDMAT35Field != null))
                {
                    if ((kDMAT35Field.Equals(value) != true))
                    {
                        this.kDMAT35Field = value;
                        this.OnPropertyChanged("KDMAT35");
                    }
                }
                else
                {
                    this.kDMAT35Field = value;
                    this.OnPropertyChanged("KDMAT35");
                }
            }
        }

        /// <summary>
        /// Sort field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string SORTL
        {
            get
            {
                return this.sORTLField;
            }
            set
            {
                if ((this.sORTLField != null))
                {
                    if ((sORTLField.Equals(value) != true))
                    {
                        this.sORTLField = value;
                        this.OnPropertyChanged("SORTL");
                    }
                }
                else
                {
                    this.sORTLField = value;
                    this.OnPropertyChanged("SORTL");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Weight and Volume Fixed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string GEWFX
        {
            get
            {
                return this.gEWFXField;
            }
            set
            {
                if ((this.gEWFXField != null))
                {
                    if ((gEWFXField.Equals(value) != true))
                    {
                        this.gEWFXField = value;
                        this.OnPropertyChanged("GEWFX");
                    }
                }
                else
                {
                    this.gEWFXField = value;
                    this.OnPropertyChanged("GEWFX");
                }
            }
        }

        /// <summary>
        /// Status (at this time without functionality)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string ERLKZ
        {
            get
            {
                return this.eRLKZField;
            }
            set
            {
                if ((this.eRLKZField != null))
                {
                    if ((eRLKZField.Equals(value) != true))
                    {
                        this.eRLKZField = value;
                        this.OnPropertyChanged("ERLKZ");
                    }
                }
                else
                {
                    this.eRLKZField = value;
                    this.OnPropertyChanged("ERLKZ");
                }
            }
        }

        /// <summary>
        /// Type of External Handling Unit Identifier
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public string EXIDA
        {
            get
            {
                return this.eXIDAField;
            }
            set
            {
                if ((this.eXIDAField != null))
                {
                    if ((eXIDAField.Equals(value) != true))
                    {
                        this.eXIDAField = value;
                        this.OnPropertyChanged("EXIDA");
                    }
                }
                else
                {
                    this.eXIDAField = value;
                    this.OnPropertyChanged("EXIDA");
                }
            }
        }

        /// <summary>
        /// Handling unit status
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public string MOVE_STATUS
        {
            get
            {
                return this.mOVE_STATUSField;
            }
            set
            {
                if ((this.mOVE_STATUSField != null))
                {
                    if ((mOVE_STATUSField.Equals(value) != true))
                    {
                        this.mOVE_STATUSField = value;
                        this.OnPropertyChanged("MOVE_STATUS");
                    }
                }
                else
                {
                    this.mOVE_STATUSField = value;
                    this.OnPropertyChanged("MOVE_STATUS");
                }
            }
        }

        /// <summary>
        /// Text string 22 characters
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public string PACKVORSCHR
        {
            get
            {
                return this.pACKVORSCHRField;
            }
            set
            {
                if ((this.pACKVORSCHRField != null))
                {
                    if ((pACKVORSCHRField.Equals(value) != true))
                    {
                        this.pACKVORSCHRField = value;
                        this.OnPropertyChanged("PACKVORSCHR");
                    }
                }
                else
                {
                    this.pACKVORSCHRField = value;
                    this.OnPropertyChanged("PACKVORSCHR");
                }
            }
        }

        /// <summary>
        /// Single-Character Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 49)]
        public string PACKVORSCHR_ST
        {
            get
            {
                return this.pACKVORSCHR_STField;
            }
            set
            {
                if ((this.pACKVORSCHR_STField != null))
                {
                    if ((pACKVORSCHR_STField.Equals(value) != true))
                    {
                        this.pACKVORSCHR_STField = value;
                        this.OnPropertyChanged("PACKVORSCHR_ST");
                    }
                }
                else
                {
                    this.pACKVORSCHR_STField = value;
                    this.OnPropertyChanged("PACKVORSCHR_ST");
                }
            }
        }

        /// <summary>
        /// Indicator: do not print external shipping label
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 50)]
        public string LABELTYP
        {
            get
            {
                return this.lABELTYPField;
            }
            set
            {
                if ((this.lABELTYPField != null))
                {
                    if ((lABELTYPField.Equals(value) != true))
                    {
                        this.lABELTYPField = value;
                        this.OnPropertyChanged("LABELTYP");
                    }
                }
                else
                {
                    this.lABELTYPField = value;
                    this.OnPropertyChanged("LABELTYP");
                }
            }
        }

        /// <summary>
        /// 17-Char. Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 51)]
        public string ZUL_AUFL
        {
            get
            {
                return this.zUL_AUFLField;
            }
            set
            {
                if ((this.zUL_AUFLField != null))
                {
                    if ((zUL_AUFLField.Equals(value) != true))
                    {
                        this.zUL_AUFLField = value;
                        this.OnPropertyChanged("ZUL_AUFL");
                    }
                }
                else
                {
                    this.zUL_AUFLField = value;
                    this.OnPropertyChanged("ZUL_AUFL");
                }
            }
        }

        /// <summary>
        /// Shipping Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 52)]
        public string VHILM_EXTERNAL
        {
            get
            {
                return this.vHILM_EXTERNALField;
            }
            set
            {
                if ((this.vHILM_EXTERNALField != null))
                {
                    if ((vHILM_EXTERNALField.Equals(value) != true))
                    {
                        this.vHILM_EXTERNALField = value;
                        this.OnPropertyChanged("VHILM_EXTERNAL");
                    }
                }
                else
                {
                    this.vHILM_EXTERNALField = value;
                    this.OnPropertyChanged("VHILM_EXTERNAL");
                }
            }
        }

        /// <summary>
        /// Version Number for Field VHILM
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 53)]
        public string VHILM_VERSION
        {
            get
            {
                return this.vHILM_VERSIONField;
            }
            set
            {
                if ((this.vHILM_VERSIONField != null))
                {
                    if ((vHILM_VERSIONField.Equals(value) != true))
                    {
                        this.vHILM_VERSIONField = value;
                        this.OnPropertyChanged("VHILM_VERSION");
                    }
                }
                else
                {
                    this.vHILM_VERSIONField = value;
                    this.OnPropertyChanged("VHILM_VERSION");
                }
            }
        }

        /// <summary>
        /// External GUID for Field VHILM
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 54)]
        public string VHILM_GUID
        {
            get
            {
                return this.vHILM_GUIDField;
            }
            set
            {
                if ((this.vHILM_GUIDField != null))
                {
                    if ((vHILM_GUIDField.Equals(value) != true))
                    {
                        this.vHILM_GUIDField = value;
                        this.OnPropertyChanged("VHILM_GUID");
                    }
                }
                else
                {
                    this.vHILM_GUIDField = value;
                    this.OnPropertyChanged("VHILM_GUID");
                }
            }
        }

        /// <summary>
        /// Control Segment for Handling Units
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDL39", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 55)]
        public List<ORDERS05IDOCE1EDL37E1EDL39> E1EDL39
        {
            get
            {
                return this.e1EDL39Field;
            }
            set
            {
                if ((this.e1EDL39Field != null))
                {
                    if ((e1EDL39Field.Equals(value) != true))
                    {
                        this.e1EDL39Field = value;
                        this.OnPropertyChanged("E1EDL39");
                    }
                }
                else
                {
                    this.e1EDL39Field = value;
                    this.OnPropertyChanged("E1EDL39");
                }
            }
        }

        /// <summary>
        /// Handling Unit Header Descriptions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 56)]
        public ORDERS05IDOCE1EDL37E1EDL38 E1EDL38
        {
            get
            {
                return this.e1EDL38Field;
            }
            set
            {
                if ((this.e1EDL38Field != null))
                {
                    if ((e1EDL38Field.Equals(value) != true))
                    {
                        this.e1EDL38Field = value;
                        this.OnPropertyChanged("E1EDL38");
                    }
                }
                else
                {
                    this.e1EDL38Field = value;
                    this.OnPropertyChanged("E1EDL38");
                }
            }
        }

        /// <summary>
        /// IDoc: Handling Unit Item (Delivery)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1EDL44", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 57)]
        public List<ORDERS05IDOCE1EDL37E1EDL44> E1EDL44
        {
            get
            {
                return this.e1EDL44Field;
            }
            set
            {
                if ((this.e1EDL44Field != null))
                {
                    if ((e1EDL44Field.Equals(value) != true))
                    {
                        this.e1EDL44Field = value;
                        this.OnPropertyChanged("E1EDL44");
                    }
                }
                else
                {
                    this.e1EDL44Field = value;
                    this.OnPropertyChanged("E1EDL44");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDL37SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDL37));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool EXIDVSpecified
        {
            get
            {
                return eXIDVFieldSpecified;
            }
            set
            {
                eXIDVFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TARAGSpecified
        {
            get
            {
                return tARAGFieldSpecified;
            }
            set
            {
                tARAGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GWEITSpecified
        {
            get
            {
                return gWEITFieldSpecified;
            }
            set
            {
                gWEITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BRGEWSpecified
        {
            get
            {
                return bRGEWFieldSpecified;
            }
            set
            {
                bRGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NTGEWSpecified
        {
            get
            {
                return nTGEWFieldSpecified;
            }
            set
            {
                nTGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MAGEWSpecified
        {
            get
            {
                return mAGEWFieldSpecified;
            }
            set
            {
                mAGEWFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GWEIMSpecified
        {
            get
            {
                return gWEIMFieldSpecified;
            }
            set
            {
                gWEIMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BTVOLSpecified
        {
            get
            {
                return bTVOLFieldSpecified;
            }
            set
            {
                bTVOLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NTVOLSpecified
        {
            get
            {
                return nTVOLFieldSpecified;
            }
            set
            {
                nTVOLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MAVOLSpecified
        {
            get
            {
                return mAVOLFieldSpecified;
            }
            set
            {
                mAVOLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VOLEMSpecified
        {
            get
            {
                return vOLEMFieldSpecified;
            }
            set
            {
                vOLEMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TAVOLSpecified
        {
            get
            {
                return tAVOLFieldSpecified;
            }
            set
            {
                tAVOLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VOLETSpecified
        {
            get
            {
                return vOLETFieldSpecified;
            }
            set
            {
                vOLETFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR2Specified
        {
            get
            {
                return vEGR2FieldSpecified;
            }
            set
            {
                vEGR2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR1Specified
        {
            get
            {
                return vEGR1FieldSpecified;
            }
            set
            {
                vEGR1FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR3Specified
        {
            get
            {
                return vEGR3FieldSpecified;
            }
            set
            {
                vEGR3FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHILMSpecified
        {
            get
            {
                return vHILMFieldSpecified;
            }
            set
            {
                vHILMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR4Specified
        {
            get
            {
                return vEGR4FieldSpecified;
            }
            set
            {
                vEGR4FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LAENGSpecified
        {
            get
            {
                return lAENGFieldSpecified;
            }
            set
            {
                lAENGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR5Specified
        {
            get
            {
                return vEGR5FieldSpecified;
            }
            set
            {
                vEGR5FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BREITSpecified
        {
            get
            {
                return bREITFieldSpecified;
            }
            set
            {
                bREITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool HOEHESpecified
        {
            get
            {
                return hOEHEFieldSpecified;
            }
            set
            {
                hOEHEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MEABMSpecified
        {
            get
            {
                return mEABMFieldSpecified;
            }
            set
            {
                mEABMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool INHALTSpecified
        {
            get
            {
                return iNHALTFieldSpecified;
            }
            set
            {
                iNHALTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHARTSpecified
        {
            get
            {
                return vHARTFieldSpecified;
            }
            set
            {
                vHARTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MAGRVSpecified
        {
            get
            {
                return mAGRVFieldSpecified;
            }
            set
            {
                mAGRVFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LADLGSpecified
        {
            get
            {
                return lADLGFieldSpecified;
            }
            set
            {
                lADLGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LADEHSpecified
        {
            get
            {
                return lADEHFieldSpecified;
            }
            set
            {
                lADEHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FARZTSpecified
        {
            get
            {
                return fARZTFieldSpecified;
            }
            set
            {
                fARZTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FAREHSpecified
        {
            get
            {
                return fAREHFieldSpecified;
            }
            set
            {
                fAREHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ENTFESpecified
        {
            get
            {
                return eNTFEFieldSpecified;
            }
            set
            {
                eNTFEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EHENTSpecified
        {
            get
            {
                return eHENTFieldSpecified;
            }
            set
            {
                eHENTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VELTPSpecified
        {
            get
            {
                return vELTPFieldSpecified;
            }
            set
            {
                vELTPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXIDV2Specified
        {
            get
            {
                return eXIDV2FieldSpecified;
            }
            set
            {
                eXIDV2FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LANDTSpecified
        {
            get
            {
                return lANDTFieldSpecified;
            }
            set
            {
                lANDTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LANDFSpecified
        {
            get
            {
                return lANDFFieldSpecified;
            }
            set
            {
                lANDFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAMEFSpecified
        {
            get
            {
                return nAMEFFieldSpecified;
            }
            set
            {
                nAMEFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NAMBESpecified
        {
            get
            {
                return nAMBEFieldSpecified;
            }
            set
            {
                nAMBEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHILM_KUSpecified
        {
            get
            {
                return vHILM_KUFieldSpecified;
            }
            set
            {
                vHILM_KUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEBEZSpecified
        {
            get
            {
                return vEBEZFieldSpecified;
            }
            set
            {
                vEBEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SMGKNSpecified
        {
            get
            {
                return sMGKNFieldSpecified;
            }
            set
            {
                sMGKNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KDMAT35Specified
        {
            get
            {
                return kDMAT35FieldSpecified;
            }
            set
            {
                kDMAT35FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SORTLSpecified
        {
            get
            {
                return sORTLFieldSpecified;
            }
            set
            {
                sORTLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ERNAMSpecified
        {
            get
            {
                return eRNAMFieldSpecified;
            }
            set
            {
                eRNAMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GEWFXSpecified
        {
            get
            {
                return gEWFXFieldSpecified;
            }
            set
            {
                gEWFXFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ERLKZSpecified
        {
            get
            {
                return eRLKZFieldSpecified;
            }
            set
            {
                eRLKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXIDASpecified
        {
            get
            {
                return eXIDAFieldSpecified;
            }
            set
            {
                eXIDAFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MOVE_STATUSSpecified
        {
            get
            {
                return mOVE_STATUSFieldSpecified;
            }
            set
            {
                mOVE_STATUSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PACKVORSCHRSpecified
        {
            get
            {
                return pACKVORSCHRFieldSpecified;
            }
            set
            {
                pACKVORSCHRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PACKVORSCHR_STSpecified
        {
            get
            {
                return pACKVORSCHR_STFieldSpecified;
            }
            set
            {
                pACKVORSCHR_STFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LABELTYPSpecified
        {
            get
            {
                return lABELTYPFieldSpecified;
            }
            set
            {
                lABELTYPFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ZUL_AUFLSpecified
        {
            get
            {
                return zUL_AUFLFieldSpecified;
            }
            set
            {
                zUL_AUFLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHILM_EXTERNALSpecified
        {
            get
            {
                return vHILM_EXTERNALFieldSpecified;
            }
            set
            {
                vHILM_EXTERNALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHILM_VERSIONSpecified
        {
            get
            {
                return vHILM_VERSIONFieldSpecified;
            }
            set
            {
                vHILM_VERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHILM_GUIDSpecified
        {
            get
            {
                return vHILM_GUIDFieldSpecified;
            }
            set
            {
                vHILM_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDL39Specified
        {
            get
            {
                return e1EDL39FieldSpecified;
            }
            set
            {
                e1EDL39FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDL38Specified
        {
            get
            {
                return e1EDL38FieldSpecified;
            }
            set
            {
                e1EDL38FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool E1EDL44Specified
        {
            get
            {
                return e1EDL44FieldSpecified;
            }
            set
            {
                e1EDL44FieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDL37 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDL37)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDL37 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDL37 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDL37 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Control Segment for Handling Units
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDL37E1EDL39 : System.ComponentModel.INotifyPropertyChanged
    {

        private string qUALFField;

        private string pARAMField;

        private ORDERS05IDOCE1EDL37E1EDL39SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool qUALFFieldSpecified;

        private bool pARAMFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier: Control (shipping unit)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string QUALF
        {
            get
            {
                return this.qUALFField;
            }
            set
            {
                if ((this.qUALFField != null))
                {
                    if ((qUALFField.Equals(value) != true))
                    {
                        this.qUALFField = value;
                        this.OnPropertyChanged("QUALF");
                    }
                }
                else
                {
                    this.qUALFField = value;
                    this.OnPropertyChanged("QUALF");
                }
            }
        }

        /// <summary>
        /// IDOC: Control Parameters
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string PARAM
        {
            get
            {
                return this.pARAMField;
            }
            set
            {
                if ((this.pARAMField != null))
                {
                    if ((pARAMField.Equals(value) != true))
                    {
                        this.pARAMField = value;
                        this.OnPropertyChanged("PARAM");
                    }
                }
                else
                {
                    this.pARAMField = value;
                    this.OnPropertyChanged("PARAM");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDL37E1EDL39SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDL37E1EDL39));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool QUALFSpecified
        {
            get
            {
                return qUALFFieldSpecified;
            }
            set
            {
                qUALFFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARAMSpecified
        {
            get
            {
                return pARAMFieldSpecified;
            }
            set
            {
                pARAMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL39 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDL37E1EDL39 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL39 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL39 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL39);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL39 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL39 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDL37E1EDL39)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL39 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDL37E1EDL39 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL39 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDL37E1EDL39 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL39);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL39 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL39 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL39 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDL37E1EDL39 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDL37E1EDL39SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Handling Unit Header Descriptions
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDL37E1EDL38 : System.ComponentModel.INotifyPropertyChanged
    {

        private string vEGR1_BEZField;

        private string vEGR2_BEZField;

        private string vEGR3_BEZField;

        private string vEGR4_BEZField;

        private string vEGR5_BEZField;

        private string vHART_BEZField;

        private string mAGRV_BEZField;

        private string vEBEZField;

        private ORDERS05IDOCE1EDL37E1EDL38SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool vEGR1_BEZFieldSpecified;

        private bool vEGR2_BEZFieldSpecified;

        private bool vEGR3_BEZFieldSpecified;

        private bool vEGR4_BEZFieldSpecified;

        private bool vEGR5_BEZFieldSpecified;

        private bool vHART_BEZFieldSpecified;

        private bool mAGRV_BEZFieldSpecified;

        private bool vEBEZFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Description of shipping unit 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string VEGR1_BEZ
        {
            get
            {
                return this.vEGR1_BEZField;
            }
            set
            {
                if ((this.vEGR1_BEZField != null))
                {
                    if ((vEGR1_BEZField.Equals(value) != true))
                    {
                        this.vEGR1_BEZField = value;
                        this.OnPropertyChanged("VEGR1_BEZ");
                    }
                }
                else
                {
                    this.vEGR1_BEZField = value;
                    this.OnPropertyChanged("VEGR1_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of shipping unit 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string VEGR2_BEZ
        {
            get
            {
                return this.vEGR2_BEZField;
            }
            set
            {
                if ((this.vEGR2_BEZField != null))
                {
                    if ((vEGR2_BEZField.Equals(value) != true))
                    {
                        this.vEGR2_BEZField = value;
                        this.OnPropertyChanged("VEGR2_BEZ");
                    }
                }
                else
                {
                    this.vEGR2_BEZField = value;
                    this.OnPropertyChanged("VEGR2_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of shipping unit 3
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string VEGR3_BEZ
        {
            get
            {
                return this.vEGR3_BEZField;
            }
            set
            {
                if ((this.vEGR3_BEZField != null))
                {
                    if ((vEGR3_BEZField.Equals(value) != true))
                    {
                        this.vEGR3_BEZField = value;
                        this.OnPropertyChanged("VEGR3_BEZ");
                    }
                }
                else
                {
                    this.vEGR3_BEZField = value;
                    this.OnPropertyChanged("VEGR3_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of shipping unit 4
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string VEGR4_BEZ
        {
            get
            {
                return this.vEGR4_BEZField;
            }
            set
            {
                if ((this.vEGR4_BEZField != null))
                {
                    if ((vEGR4_BEZField.Equals(value) != true))
                    {
                        this.vEGR4_BEZField = value;
                        this.OnPropertyChanged("VEGR4_BEZ");
                    }
                }
                else
                {
                    this.vEGR4_BEZField = value;
                    this.OnPropertyChanged("VEGR4_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of shipping unit 5
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string VEGR5_BEZ
        {
            get
            {
                return this.vEGR5_BEZField;
            }
            set
            {
                if ((this.vEGR5_BEZField != null))
                {
                    if ((vEGR5_BEZField.Equals(value) != true))
                    {
                        this.vEGR5_BEZField = value;
                        this.OnPropertyChanged("VEGR5_BEZ");
                    }
                }
                else
                {
                    this.vEGR5_BEZField = value;
                    this.OnPropertyChanged("VEGR5_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of shipping material type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string VHART_BEZ
        {
            get
            {
                return this.vHART_BEZField;
            }
            set
            {
                if ((this.vHART_BEZField != null))
                {
                    if ((vHART_BEZField.Equals(value) != true))
                    {
                        this.vHART_BEZField = value;
                        this.OnPropertyChanged("VHART_BEZ");
                    }
                }
                else
                {
                    this.vHART_BEZField = value;
                    this.OnPropertyChanged("VHART_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of material grouping shipping material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string MAGRV_BEZ
        {
            get
            {
                return this.mAGRV_BEZField;
            }
            set
            {
                if ((this.mAGRV_BEZField != null))
                {
                    if ((mAGRV_BEZField.Equals(value) != true))
                    {
                        this.mAGRV_BEZField = value;
                        this.OnPropertyChanged("MAGRV_BEZ");
                    }
                }
                else
                {
                    this.mAGRV_BEZField = value;
                    this.OnPropertyChanged("MAGRV_BEZ");
                }
            }
        }

        /// <summary>
        /// Description of Packaging Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string VEBEZ
        {
            get
            {
                return this.vEBEZField;
            }
            set
            {
                if ((this.vEBEZField != null))
                {
                    if ((vEBEZField.Equals(value) != true))
                    {
                        this.vEBEZField = value;
                        this.OnPropertyChanged("VEBEZ");
                    }
                }
                else
                {
                    this.vEBEZField = value;
                    this.OnPropertyChanged("VEBEZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDL37E1EDL38SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDL37E1EDL38));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool VEGR1_BEZSpecified
        {
            get
            {
                return vEGR1_BEZFieldSpecified;
            }
            set
            {
                vEGR1_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR2_BEZSpecified
        {
            get
            {
                return vEGR2_BEZFieldSpecified;
            }
            set
            {
                vEGR2_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR3_BEZSpecified
        {
            get
            {
                return vEGR3_BEZFieldSpecified;
            }
            set
            {
                vEGR3_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR4_BEZSpecified
        {
            get
            {
                return vEGR4_BEZFieldSpecified;
            }
            set
            {
                vEGR4_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEGR5_BEZSpecified
        {
            get
            {
                return vEGR5_BEZFieldSpecified;
            }
            set
            {
                vEGR5_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VHART_BEZSpecified
        {
            get
            {
                return vHART_BEZFieldSpecified;
            }
            set
            {
                vHART_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MAGRV_BEZSpecified
        {
            get
            {
                return mAGRV_BEZFieldSpecified;
            }
            set
            {
                mAGRV_BEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEBEZSpecified
        {
            get
            {
                return vEBEZFieldSpecified;
            }
            set
            {
                vEBEZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL38 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDL37E1EDL38 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL38 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL38 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL38);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL38 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL38 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDL37E1EDL38)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL38 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDL37E1EDL38 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL38 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDL37E1EDL38 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL38);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL38 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL38 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL38 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDL37E1EDL38 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDL37E1EDL38SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Handling Unit Item (Delivery)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDL37E1EDL44 : System.ComponentModel.INotifyPropertyChanged
    {

        private string vELINField;

        private string vBELNField;

        private string pOSNRField;

        private string eXIDVField;

        private string vEMNGField;

        private string vEMEHField;

        private string mATNRField;

        private string kDMATField;

        private string cHARGField;

        private string wERKSField;

        private string lGORTField;

        private string cUOBJField;

        private string bESTQField;

        private string sOBKZField;

        private string sONUMField;

        private string aNZSNField;

        private string wDATUField;

        private string pARIDField;

        private string mATNR_EXTERNALField;

        private string mATNR_VERSIONField;

        private string mATNR_GUIDField;

        private string kDMAT_EXTERNALField;

        private string kDMAT_VERSIONField;

        private string kDMAT_GUIDField;

        private ORDERS05IDOCE1EDL37E1EDL44SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool vELINFieldSpecified;

        private bool vBELNFieldSpecified;

        private bool pOSNRFieldSpecified;

        private bool eXIDVFieldSpecified;

        private bool vEMNGFieldSpecified;

        private bool vEMEHFieldSpecified;

        private bool mATNRFieldSpecified;

        private bool kDMATFieldSpecified;

        private bool cHARGFieldSpecified;

        private bool wERKSFieldSpecified;

        private bool lGORTFieldSpecified;

        private bool cUOBJFieldSpecified;

        private bool bESTQFieldSpecified;

        private bool sOBKZFieldSpecified;

        private bool sONUMFieldSpecified;

        private bool aNZSNFieldSpecified;

        private bool wDATUFieldSpecified;

        private bool pARIDFieldSpecified;

        private bool mATNR_EXTERNALFieldSpecified;

        private bool mATNR_VERSIONFieldSpecified;

        private bool mATNR_GUIDFieldSpecified;

        private bool kDMAT_EXTERNALFieldSpecified;

        private bool kDMAT_VERSIONFieldSpecified;

        private bool kDMAT_GUIDFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Type of Handling-unit Item Content
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string VELIN
        {
            get
            {
                return this.vELINField;
            }
            set
            {
                if ((this.vELINField != null))
                {
                    if ((vELINField.Equals(value) != true))
                    {
                        this.vELINField = value;
                        this.OnPropertyChanged("VELIN");
                    }
                }
                else
                {
                    this.vELINField = value;
                    this.OnPropertyChanged("VELIN");
                }
            }
        }

        /// <summary>
        /// Sales and Distribution Document Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string VBELN
        {
            get
            {
                return this.vBELNField;
            }
            set
            {
                if ((this.vBELNField != null))
                {
                    if ((vBELNField.Equals(value) != true))
                    {
                        this.vBELNField = value;
                        this.OnPropertyChanged("VBELN");
                    }
                }
                else
                {
                    this.vBELNField = value;
                    this.OnPropertyChanged("VBELN");
                }
            }
        }

        /// <summary>
        /// Item number of the SD document
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string POSNR
        {
            get
            {
                return this.pOSNRField;
            }
            set
            {
                if ((this.pOSNRField != null))
                {
                    if ((pOSNRField.Equals(value) != true))
                    {
                        this.pOSNRField = value;
                        this.OnPropertyChanged("POSNR");
                    }
                }
                else
                {
                    this.pOSNRField = value;
                    this.OnPropertyChanged("POSNR");
                }
            }
        }

        /// <summary>
        /// External Handling Unit Identification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string EXIDV
        {
            get
            {
                return this.eXIDVField;
            }
            set
            {
                if ((this.eXIDVField != null))
                {
                    if ((eXIDVField.Equals(value) != true))
                    {
                        this.eXIDVField = value;
                        this.OnPropertyChanged("EXIDV");
                    }
                }
                else
                {
                    this.eXIDVField = value;
                    this.OnPropertyChanged("EXIDV");
                }
            }
        }

        /// <summary>
        /// Base Quantity Packed in the Handling Unit Item
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string VEMNG
        {
            get
            {
                return this.vEMNGField;
            }
            set
            {
                if ((this.vEMNGField != null))
                {
                    if ((vEMNGField.Equals(value) != true))
                    {
                        this.vEMNGField = value;
                        this.OnPropertyChanged("VEMNG");
                    }
                }
                else
                {
                    this.vEMNGField = value;
                    this.OnPropertyChanged("VEMNG");
                }
            }
        }

        /// <summary>
        /// Base Unit of Measure of the Quantity to be Packed (VEMNG)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string VEMEH
        {
            get
            {
                return this.vEMEHField;
            }
            set
            {
                if ((this.vEMEHField != null))
                {
                    if ((vEMEHField.Equals(value) != true))
                    {
                        this.vEMEHField = value;
                        this.OnPropertyChanged("VEMEH");
                    }
                }
                else
                {
                    this.vEMEHField = value;
                    this.OnPropertyChanged("VEMEH");
                }
            }
        }

        /// <summary>
        /// Material Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string MATNR
        {
            get
            {
                return this.mATNRField;
            }
            set
            {
                if ((this.mATNRField != null))
                {
                    if ((mATNRField.Equals(value) != true))
                    {
                        this.mATNRField = value;
                        this.OnPropertyChanged("MATNR");
                    }
                }
                else
                {
                    this.mATNRField = value;
                    this.OnPropertyChanged("MATNR");
                }
            }
        }

        /// <summary>
        /// Material belonging to the customer
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string KDMAT
        {
            get
            {
                return this.kDMATField;
            }
            set
            {
                if ((this.kDMATField != null))
                {
                    if ((kDMATField.Equals(value) != true))
                    {
                        this.kDMATField = value;
                        this.OnPropertyChanged("KDMAT");
                    }
                }
                else
                {
                    this.kDMATField = value;
                    this.OnPropertyChanged("KDMAT");
                }
            }
        }

        /// <summary>
        /// Batch Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string CHARG
        {
            get
            {
                return this.cHARGField;
            }
            set
            {
                if ((this.cHARGField != null))
                {
                    if ((cHARGField.Equals(value) != true))
                    {
                        this.cHARGField = value;
                        this.OnPropertyChanged("CHARG");
                    }
                }
                else
                {
                    this.cHARGField = value;
                    this.OnPropertyChanged("CHARG");
                }
            }
        }

        /// <summary>
        /// Plant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string WERKS
        {
            get
            {
                return this.wERKSField;
            }
            set
            {
                if ((this.wERKSField != null))
                {
                    if ((wERKSField.Equals(value) != true))
                    {
                        this.wERKSField = value;
                        this.OnPropertyChanged("WERKS");
                    }
                }
                else
                {
                    this.wERKSField = value;
                    this.OnPropertyChanged("WERKS");
                }
            }
        }

        /// <summary>
        /// Storage Location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string LGORT
        {
            get
            {
                return this.lGORTField;
            }
            set
            {
                if ((this.lGORTField != null))
                {
                    if ((lGORTField.Equals(value) != true))
                    {
                        this.lGORTField = value;
                        this.OnPropertyChanged("LGORT");
                    }
                }
                else
                {
                    this.lGORTField = value;
                    this.OnPropertyChanged("LGORT");
                }
            }
        }

        /// <summary>
        /// Configuration (internal object number)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string CUOBJ
        {
            get
            {
                return this.cUOBJField;
            }
            set
            {
                if ((this.cUOBJField != null))
                {
                    if ((cUOBJField.Equals(value) != true))
                    {
                        this.cUOBJField = value;
                        this.OnPropertyChanged("CUOBJ");
                    }
                }
                else
                {
                    this.cUOBJField = value;
                    this.OnPropertyChanged("CUOBJ");
                }
            }
        }

        /// <summary>
        /// Stock Category in the Warehouse Management System
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string BESTQ
        {
            get
            {
                return this.bESTQField;
            }
            set
            {
                if ((this.bESTQField != null))
                {
                    if ((bESTQField.Equals(value) != true))
                    {
                        this.bESTQField = value;
                        this.OnPropertyChanged("BESTQ");
                    }
                }
                else
                {
                    this.bESTQField = value;
                    this.OnPropertyChanged("BESTQ");
                }
            }
        }

        /// <summary>
        /// Special Stock Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string SOBKZ
        {
            get
            {
                return this.sOBKZField;
            }
            set
            {
                if ((this.sOBKZField != null))
                {
                    if ((sOBKZField.Equals(value) != true))
                    {
                        this.sOBKZField = value;
                        this.OnPropertyChanged("SOBKZ");
                    }
                }
                else
                {
                    this.sOBKZField = value;
                    this.OnPropertyChanged("SOBKZ");
                }
            }
        }

        /// <summary>
        /// Special Stock Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string SONUM
        {
            get
            {
                return this.sONUMField;
            }
            set
            {
                if ((this.sONUMField != null))
                {
                    if ((sONUMField.Equals(value) != true))
                    {
                        this.sONUMField = value;
                        this.OnPropertyChanged("SONUM");
                    }
                }
                else
                {
                    this.sONUMField = value;
                    this.OnPropertyChanged("SONUM");
                }
            }
        }

        /// <summary>
        /// Number of serial numbers
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string ANZSN
        {
            get
            {
                return this.aNZSNField;
            }
            set
            {
                if ((this.aNZSNField != null))
                {
                    if ((aNZSNField.Equals(value) != true))
                    {
                        this.aNZSNField = value;
                        this.OnPropertyChanged("ANZSN");
                    }
                }
                else
                {
                    this.aNZSNField = value;
                    this.OnPropertyChanged("ANZSN");
                }
            }
        }

        /// <summary>
        /// Date of Goods Receipt
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string WDATU
        {
            get
            {
                return this.wDATUField;
            }
            set
            {
                if ((this.wDATUField != null))
                {
                    if ((wDATUField.Equals(value) != true))
                    {
                        this.wDATUField = value;
                        this.OnPropertyChanged("WDATU");
                    }
                }
                else
                {
                    this.wDATUField = value;
                    this.OnPropertyChanged("WDATU");
                }
            }
        }

        /// <summary>
        /// External partner number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string PARID
        {
            get
            {
                return this.pARIDField;
            }
            set
            {
                if ((this.pARIDField != null))
                {
                    if ((pARIDField.Equals(value) != true))
                    {
                        this.pARIDField = value;
                        this.OnPropertyChanged("PARID");
                    }
                }
                else
                {
                    this.pARIDField = value;
                    this.OnPropertyChanged("PARID");
                }
            }
        }

        /// <summary>
        /// Material Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string MATNR_EXTERNAL
        {
            get
            {
                return this.mATNR_EXTERNALField;
            }
            set
            {
                if ((this.mATNR_EXTERNALField != null))
                {
                    if ((mATNR_EXTERNALField.Equals(value) != true))
                    {
                        this.mATNR_EXTERNALField = value;
                        this.OnPropertyChanged("MATNR_EXTERNAL");
                    }
                }
                else
                {
                    this.mATNR_EXTERNALField = value;
                    this.OnPropertyChanged("MATNR_EXTERNAL");
                }
            }
        }

        /// <summary>
        /// Version Number for MATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string MATNR_VERSION
        {
            get
            {
                return this.mATNR_VERSIONField;
            }
            set
            {
                if ((this.mATNR_VERSIONField != null))
                {
                    if ((mATNR_VERSIONField.Equals(value) != true))
                    {
                        this.mATNR_VERSIONField = value;
                        this.OnPropertyChanged("MATNR_VERSION");
                    }
                }
                else
                {
                    this.mATNR_VERSIONField = value;
                    this.OnPropertyChanged("MATNR_VERSION");
                }
            }
        }

        /// <summary>
        /// External GUID for MATNR Field
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string MATNR_GUID
        {
            get
            {
                return this.mATNR_GUIDField;
            }
            set
            {
                if ((this.mATNR_GUIDField != null))
                {
                    if ((mATNR_GUIDField.Equals(value) != true))
                    {
                        this.mATNR_GUIDField = value;
                        this.OnPropertyChanged("MATNR_GUID");
                    }
                }
                else
                {
                    this.mATNR_GUIDField = value;
                    this.OnPropertyChanged("MATNR_GUID");
                }
            }
        }

        /// <summary>
        /// Customer Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string KDMAT_EXTERNAL
        {
            get
            {
                return this.kDMAT_EXTERNALField;
            }
            set
            {
                if ((this.kDMAT_EXTERNALField != null))
                {
                    if ((kDMAT_EXTERNALField.Equals(value) != true))
                    {
                        this.kDMAT_EXTERNALField = value;
                        this.OnPropertyChanged("KDMAT_EXTERNAL");
                    }
                }
                else
                {
                    this.kDMAT_EXTERNALField = value;
                    this.OnPropertyChanged("KDMAT_EXTERNAL");
                }
            }
        }

        /// <summary>
        /// Customer Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string KDMAT_VERSION
        {
            get
            {
                return this.kDMAT_VERSIONField;
            }
            set
            {
                if ((this.kDMAT_VERSIONField != null))
                {
                    if ((kDMAT_VERSIONField.Equals(value) != true))
                    {
                        this.kDMAT_VERSIONField = value;
                        this.OnPropertyChanged("KDMAT_VERSION");
                    }
                }
                else
                {
                    this.kDMAT_VERSIONField = value;
                    this.OnPropertyChanged("KDMAT_VERSION");
                }
            }
        }

        /// <summary>
        /// Customer Material
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string KDMAT_GUID
        {
            get
            {
                return this.kDMAT_GUIDField;
            }
            set
            {
                if ((this.kDMAT_GUIDField != null))
                {
                    if ((kDMAT_GUIDField.Equals(value) != true))
                    {
                        this.kDMAT_GUIDField = value;
                        this.OnPropertyChanged("KDMAT_GUID");
                    }
                }
                else
                {
                    this.kDMAT_GUIDField = value;
                    this.OnPropertyChanged("KDMAT_GUID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDL37E1EDL44SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDL37E1EDL44));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool VELINSpecified
        {
            get
            {
                return vELINFieldSpecified;
            }
            set
            {
                vELINFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VBELNSpecified
        {
            get
            {
                return vBELNFieldSpecified;
            }
            set
            {
                vBELNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool POSNRSpecified
        {
            get
            {
                return pOSNRFieldSpecified;
            }
            set
            {
                pOSNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool EXIDVSpecified
        {
            get
            {
                return eXIDVFieldSpecified;
            }
            set
            {
                eXIDVFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEMNGSpecified
        {
            get
            {
                return vEMNGFieldSpecified;
            }
            set
            {
                vEMNGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VEMEHSpecified
        {
            get
            {
                return vEMEHFieldSpecified;
            }
            set
            {
                vEMEHFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNRSpecified
        {
            get
            {
                return mATNRFieldSpecified;
            }
            set
            {
                mATNRFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KDMATSpecified
        {
            get
            {
                return kDMATFieldSpecified;
            }
            set
            {
                kDMATFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CHARGSpecified
        {
            get
            {
                return cHARGFieldSpecified;
            }
            set
            {
                cHARGFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WERKSSpecified
        {
            get
            {
                return wERKSFieldSpecified;
            }
            set
            {
                wERKSFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LGORTSpecified
        {
            get
            {
                return lGORTFieldSpecified;
            }
            set
            {
                lGORTFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CUOBJSpecified
        {
            get
            {
                return cUOBJFieldSpecified;
            }
            set
            {
                cUOBJFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool BESTQSpecified
        {
            get
            {
                return bESTQFieldSpecified;
            }
            set
            {
                bESTQFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SOBKZSpecified
        {
            get
            {
                return sOBKZFieldSpecified;
            }
            set
            {
                sOBKZFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SONUMSpecified
        {
            get
            {
                return sONUMFieldSpecified;
            }
            set
            {
                sONUMFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ANZSNSpecified
        {
            get
            {
                return aNZSNFieldSpecified;
            }
            set
            {
                aNZSNFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WDATUSpecified
        {
            get
            {
                return wDATUFieldSpecified;
            }
            set
            {
                wDATUFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PARIDSpecified
        {
            get
            {
                return pARIDFieldSpecified;
            }
            set
            {
                pARIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_EXTERNALSpecified
        {
            get
            {
                return mATNR_EXTERNALFieldSpecified;
            }
            set
            {
                mATNR_EXTERNALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_VERSIONSpecified
        {
            get
            {
                return mATNR_VERSIONFieldSpecified;
            }
            set
            {
                mATNR_VERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MATNR_GUIDSpecified
        {
            get
            {
                return mATNR_GUIDFieldSpecified;
            }
            set
            {
                mATNR_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KDMAT_EXTERNALSpecified
        {
            get
            {
                return kDMAT_EXTERNALFieldSpecified;
            }
            set
            {
                kDMAT_EXTERNALFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KDMAT_VERSIONSpecified
        {
            get
            {
                return kDMAT_VERSIONFieldSpecified;
            }
            set
            {
                kDMAT_VERSIONFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KDMAT_GUIDSpecified
        {
            get
            {
                return kDMAT_GUIDFieldSpecified;
            }
            set
            {
                kDMAT_GUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL44 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDL37E1EDL44 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL44 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL44 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL44);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDL37E1EDL44 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL44 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDL37E1EDL44)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDL37E1EDL44 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDL37E1EDL44 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDL37E1EDL44 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDL37E1EDL44 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDL37E1EDL44);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL44 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDL37E1EDL44 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDL37E1EDL44 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDL37E1EDL44 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDL37E1EDL44SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDL37SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// IDoc: Summary segment general
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ORDERS05IDOCE1EDS01 : System.ComponentModel.INotifyPropertyChanged
    {

        private string sUMIDField;

        private string sUMMEField;

        private string sUNITField;

        private string wAERQField;

        private ORDERS05IDOCE1EDS01SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        private bool sUMIDFieldSpecified;

        private bool sUMMEFieldSpecified;

        private bool sUNITFieldSpecified;

        private bool wAERQFieldSpecified;

        private bool sEGMENTFieldSpecified;

        /// <summary>
        /// Qualifier for totals segment for shipping notification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string SUMID
        {
            get
            {
                return this.sUMIDField;
            }
            set
            {
                if ((this.sUMIDField != null))
                {
                    if ((sUMIDField.Equals(value) != true))
                    {
                        this.sUMIDField = value;
                        this.OnPropertyChanged("SUMID");
                    }
                }
                else
                {
                    this.sUMIDField = value;
                    this.OnPropertyChanged("SUMID");
                }
            }
        }

        /// <summary>
        /// Total value of sum segment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string SUMME
        {
            get
            {
                return this.sUMMEField;
            }
            set
            {
                if ((this.sUMMEField != null))
                {
                    if ((sUMMEField.Equals(value) != true))
                    {
                        this.sUMMEField = value;
                        this.OnPropertyChanged("SUMME");
                    }
                }
                else
                {
                    this.sUMMEField = value;
                    this.OnPropertyChanged("SUMME");
                }
            }
        }

        /// <summary>
        /// Total value unit for totals segment in the shipping notif.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string SUNIT
        {
            get
            {
                return this.sUNITField;
            }
            set
            {
                if ((this.sUNITField != null))
                {
                    if ((sUNITField.Equals(value) != true))
                    {
                        this.sUNITField = value;
                        this.OnPropertyChanged("SUNIT");
                    }
                }
                else
                {
                    this.sUNITField = value;
                    this.OnPropertyChanged("SUNIT");
                }
            }
        }

        /// <summary>
        /// Currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string WAERQ
        {
            get
            {
                return this.wAERQField;
            }
            set
            {
                if ((this.wAERQField != null))
                {
                    if ((wAERQField.Equals(value) != true))
                    {
                        this.wAERQField = value;
                        this.OnPropertyChanged("WAERQ");
                    }
                }
                else
                {
                    this.wAERQField = value;
                    this.OnPropertyChanged("WAERQ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ORDERS05IDOCE1EDS01SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ORDERS05IDOCE1EDS01));
                }
                return serializer;
            }
        }

        [XmlIgnore()]
        public bool SUMIDSpecified
        {
            get
            {
                return sUMIDFieldSpecified;
            }
            set
            {
                sUMIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SUMMESpecified
        {
            get
            {
                return sUMMEFieldSpecified;
            }
            set
            {
                sUMMEFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SUNITSpecified
        {
            get
            {
                return sUNITFieldSpecified;
            }
            set
            {
                sUNITFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WAERQSpecified
        {
            get
            {
                return wAERQFieldSpecified;
            }
            set
            {
                wAERQFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SEGMENTSpecified
        {
            get
            {
                return sEGMENTFieldSpecified;
            }
            set
            {
                sEGMENTFieldSpecified = value;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDS01 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an ORDERS05IDOCE1EDS01 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDS01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDS01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDS01);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ORDERS05IDOCE1EDS01 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDS01 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ORDERS05IDOCE1EDS01)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ORDERS05IDOCE1EDS01 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ORDERS05IDOCE1EDS01 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ORDERS05IDOCE1EDS01 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out ORDERS05IDOCE1EDS01 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ORDERS05IDOCE1EDS01);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDS01 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out ORDERS05IDOCE1EDS01 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ORDERS05IDOCE1EDS01 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static ORDERS05IDOCE1EDS01 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCE1EDS01SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum ORDERS05IDOCBEGIN
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }
}
