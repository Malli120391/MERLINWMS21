// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>SAPIntegration.INOUT</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>True</OrderXMLAttrib><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>None</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace SAPIntegration.INOUT
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;


    /// <summary>
    /// Vendor master data distribution
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class CREMAS05 : System.ComponentModel.INotifyPropertyChanged
    {

        private CREMAS05IDOC iDOCField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05 class constructor
        /// </summary>
        public CREMAS05()
        {
            this.iDOCField = new CREMAS05IDOC();
        }

        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public CREMAS05IDOC IDOC
        {
            get
            {
                return this.iDOCField;
            }
            set
            {
                if ((this.iDOCField != null))
                {
                    if ((iDOCField.Equals(value) != true))
                    {
                        this.iDOCField = value;
                        this.OnPropertyChanged("IDOC");
                    }
                }
                else
                {
                    this.iDOCField = value;
                    this.OnPropertyChanged("IDOC");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOC : System.ComponentModel.INotifyPropertyChanged
    {

        private CREMAS05IDOCEDI_DC40 eDI_DC40Field;

        private CREMAS05IDOCE1LFA1M e1LFA1MField;

        private CREMAS05IDOCBEGIN bEGINField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOC class constructor
        /// </summary>
        public CREMAS05IDOC()
        {
            this.e1LFA1MField = new CREMAS05IDOCE1LFA1M();
            this.eDI_DC40Field = new CREMAS05IDOCEDI_DC40();
        }

        /// <summary>
        /// IDoc Control Record for Interface to External System
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public CREMAS05IDOCEDI_DC40 EDI_DC40
        {
            get
            {
                return this.eDI_DC40Field;
            }
            set
            {
                if ((this.eDI_DC40Field != null))
                {
                    if ((eDI_DC40Field.Equals(value) != true))
                    {
                        this.eDI_DC40Field = value;
                        this.OnPropertyChanged("EDI_DC40");
                    }
                }
                else
                {
                    this.eDI_DC40Field = value;
                    this.OnPropertyChanged("EDI_DC40");
                }
            }
        }

        /// <summary>
        /// Segment for general vendor data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public CREMAS05IDOCE1LFA1M E1LFA1M
        {
            get
            {
                return this.e1LFA1MField;
            }
            set
            {
                if ((this.e1LFA1MField != null))
                {
                    if ((e1LFA1MField.Equals(value) != true))
                    {
                        this.e1LFA1MField = value;
                        this.OnPropertyChanged("E1LFA1M");
                    }
                }
                else
                {
                    this.e1LFA1MField = value;
                    this.OnPropertyChanged("E1LFA1M");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCBEGIN BEGIN
        {
            get
            {
                return this.bEGINField;
            }
            set
            {
                if ((bEGINField.Equals(value) != true))
                {
                    this.bEGINField = value;
                    this.OnPropertyChanged("BEGIN");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOC));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOC object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOC object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOC object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOC obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOC);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOC obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOC Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOC)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOC object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOC object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOC object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOC obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOC);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOC obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOC obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOC LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOC LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// IDoc Control Record for Interface to External System
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCEDI_DC40 : System.ComponentModel.INotifyPropertyChanged
    {

        private string tABNAMField;

        private string mANDTField;

        private string dOCNUMField;

        private string dOCRELField;

        private string sTATUSField;

        private CREMAS05IDOCEDI_DC40DIRECT dIRECTField;

        private string oUTMODField;

        private string eXPRSSField;

        private string tESTField;

        private string iDOCTYPField;

        private string cIMTYPField;

        private string mESTYPField;

        private string mESCODField;

        private string mESFCTField;

        private string sTDField;

        private string sTDVRSField;

        private string sTDMESField;

        private string sNDPORField;

        private string sNDPRTField;

        private string sNDPFCField;

        private string sNDPRNField;

        private string sNDSADField;

        private string sNDLADField;

        private string rCVPORField;

        private string rCVPRTField;

        private string rCVPFCField;

        private string rCVPRNField;

        private string rCVSADField;

        private string rCVLADField;

        private string cREDATField;

        private string cRETIMField;

        private string rEFINTField;

        private string rEFGRPField;

        private string rEFMESField;

        private string aRCKEYField;

        private string sERIALField;

        private CREMAS05IDOCEDI_DC40SEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        public CREMAS05IDOCEDI_DC40()
        {
            this.tABNAMField = "EDI_DC40";
            this.iDOCTYPField = "CREMAS05";
            this.cIMTYPField = "";
        }

        /// <summary>
        /// Name of Table Structure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string TABNAM
        {
            get
            {
                return this.tABNAMField;
            }
            set
            {
                if ((this.tABNAMField != null))
                {
                    if ((tABNAMField.Equals(value) != true))
                    {
                        this.tABNAMField = value;
                        this.OnPropertyChanged("TABNAM");
                    }
                }
                else
                {
                    this.tABNAMField = value;
                    this.OnPropertyChanged("TABNAM");
                }
            }
        }

        /// <summary>
        /// Client
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string MANDT
        {
            get
            {
                return this.mANDTField;
            }
            set
            {
                if ((this.mANDTField != null))
                {
                    if ((mANDTField.Equals(value) != true))
                    {
                        this.mANDTField = value;
                        this.OnPropertyChanged("MANDT");
                    }
                }
                else
                {
                    this.mANDTField = value;
                    this.OnPropertyChanged("MANDT");
                }
            }
        }

        /// <summary>
        /// IDoc number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string DOCNUM
        {
            get
            {
                return this.dOCNUMField;
            }
            set
            {
                if ((this.dOCNUMField != null))
                {
                    if ((dOCNUMField.Equals(value) != true))
                    {
                        this.dOCNUMField = value;
                        this.OnPropertyChanged("DOCNUM");
                    }
                }
                else
                {
                    this.dOCNUMField = value;
                    this.OnPropertyChanged("DOCNUM");
                }
            }
        }

        /// <summary>
        /// SAP Release for IDoc
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string DOCREL
        {
            get
            {
                return this.dOCRELField;
            }
            set
            {
                if ((this.dOCRELField != null))
                {
                    if ((dOCRELField.Equals(value) != true))
                    {
                        this.dOCRELField = value;
                        this.OnPropertyChanged("DOCREL");
                    }
                }
                else
                {
                    this.dOCRELField = value;
                    this.OnPropertyChanged("DOCREL");
                }
            }
        }

        /// <summary>
        /// Status of IDoc
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string STATUS
        {
            get
            {
                return this.sTATUSField;
            }
            set
            {
                if ((this.sTATUSField != null))
                {
                    if ((sTATUSField.Equals(value) != true))
                    {
                        this.sTATUSField = value;
                        this.OnPropertyChanged("STATUS");
                    }
                }
                else
                {
                    this.sTATUSField = value;
                    this.OnPropertyChanged("STATUS");
                }
            }
        }

        /// <summary>
        /// Direction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public CREMAS05IDOCEDI_DC40DIRECT DIRECT
        {
            get
            {
                return this.dIRECTField;
            }
            set
            {
                if ((dIRECTField.Equals(value) != true))
                {
                    this.dIRECTField = value;
                    this.OnPropertyChanged("DIRECT");
                }
            }
        }

        /// <summary>
        /// Output mode
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string OUTMOD
        {
            get
            {
                return this.oUTMODField;
            }
            set
            {
                if ((this.oUTMODField != null))
                {
                    if ((oUTMODField.Equals(value) != true))
                    {
                        this.oUTMODField = value;
                        this.OnPropertyChanged("OUTMOD");
                    }
                }
                else
                {
                    this.oUTMODField = value;
                    this.OnPropertyChanged("OUTMOD");
                }
            }
        }

        /// <summary>
        /// Overriding in inbound processing
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string EXPRSS
        {
            get
            {
                return this.eXPRSSField;
            }
            set
            {
                if ((this.eXPRSSField != null))
                {
                    if ((eXPRSSField.Equals(value) != true))
                    {
                        this.eXPRSSField = value;
                        this.OnPropertyChanged("EXPRSS");
                    }
                }
                else
                {
                    this.eXPRSSField = value;
                    this.OnPropertyChanged("EXPRSS");
                }
            }
        }

        /// <summary>
        /// Test flag
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string TEST
        {
            get
            {
                return this.tESTField;
            }
            set
            {
                if ((this.tESTField != null))
                {
                    if ((tESTField.Equals(value) != true))
                    {
                        this.tESTField = value;
                        this.OnPropertyChanged("TEST");
                    }
                }
                else
                {
                    this.tESTField = value;
                    this.OnPropertyChanged("TEST");
                }
            }
        }

        /// <summary>
        /// Name of basic type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string IDOCTYP
        {
            get
            {
                return this.iDOCTYPField;
            }
            set
            {
                if ((this.iDOCTYPField != null))
                {
                    if ((iDOCTYPField.Equals(value) != true))
                    {
                        this.iDOCTYPField = value;
                        this.OnPropertyChanged("IDOCTYP");
                    }
                }
                else
                {
                    this.iDOCTYPField = value;
                    this.OnPropertyChanged("IDOCTYP");
                }
            }
        }

        /// <summary>
        /// Extension (defined by customer)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string CIMTYP
        {
            get
            {
                return this.cIMTYPField;
            }
            set
            {
                if ((this.cIMTYPField != null))
                {
                    if ((cIMTYPField.Equals(value) != true))
                    {
                        this.cIMTYPField = value;
                        this.OnPropertyChanged("CIMTYP");
                    }
                }
                else
                {
                    this.cIMTYPField = value;
                    this.OnPropertyChanged("CIMTYP");
                }
            }
        }

        /// <summary>
        /// Message type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MESTYP
        {
            get
            {
                return this.mESTYPField;
            }
            set
            {
                if ((this.mESTYPField != null))
                {
                    if ((mESTYPField.Equals(value) != true))
                    {
                        this.mESTYPField = value;
                        this.OnPropertyChanged("MESTYP");
                    }
                }
                else
                {
                    this.mESTYPField = value;
                    this.OnPropertyChanged("MESTYP");
                }
            }
        }

        /// <summary>
        /// Message code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string MESCOD
        {
            get
            {
                return this.mESCODField;
            }
            set
            {
                if ((this.mESCODField != null))
                {
                    if ((mESCODField.Equals(value) != true))
                    {
                        this.mESCODField = value;
                        this.OnPropertyChanged("MESCOD");
                    }
                }
                else
                {
                    this.mESCODField = value;
                    this.OnPropertyChanged("MESCOD");
                }
            }
        }

        /// <summary>
        /// Message Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string MESFCT
        {
            get
            {
                return this.mESFCTField;
            }
            set
            {
                if ((this.mESFCTField != null))
                {
                    if ((mESFCTField.Equals(value) != true))
                    {
                        this.mESFCTField = value;
                        this.OnPropertyChanged("MESFCT");
                    }
                }
                else
                {
                    this.mESFCTField = value;
                    this.OnPropertyChanged("MESFCT");
                }
            }
        }

        /// <summary>
        /// EDI standard, flag
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string STD
        {
            get
            {
                return this.sTDField;
            }
            set
            {
                if ((this.sTDField != null))
                {
                    if ((sTDField.Equals(value) != true))
                    {
                        this.sTDField = value;
                        this.OnPropertyChanged("STD");
                    }
                }
                else
                {
                    this.sTDField = value;
                    this.OnPropertyChanged("STD");
                }
            }
        }

        /// <summary>
        /// EDI standard, version and release
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string STDVRS
        {
            get
            {
                return this.sTDVRSField;
            }
            set
            {
                if ((this.sTDVRSField != null))
                {
                    if ((sTDVRSField.Equals(value) != true))
                    {
                        this.sTDVRSField = value;
                        this.OnPropertyChanged("STDVRS");
                    }
                }
                else
                {
                    this.sTDVRSField = value;
                    this.OnPropertyChanged("STDVRS");
                }
            }
        }

        /// <summary>
        /// EDI message type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string STDMES
        {
            get
            {
                return this.sTDMESField;
            }
            set
            {
                if ((this.sTDMESField != null))
                {
                    if ((sTDMESField.Equals(value) != true))
                    {
                        this.sTDMESField = value;
                        this.OnPropertyChanged("STDMES");
                    }
                }
                else
                {
                    this.sTDMESField = value;
                    this.OnPropertyChanged("STDMES");
                }
            }
        }

        /// <summary>
        /// Sender port (SAP System, external subsystem)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string SNDPOR
        {
            get
            {
                return this.sNDPORField;
            }
            set
            {
                if ((this.sNDPORField != null))
                {
                    if ((sNDPORField.Equals(value) != true))
                    {
                        this.sNDPORField = value;
                        this.OnPropertyChanged("SNDPOR");
                    }
                }
                else
                {
                    this.sNDPORField = value;
                    this.OnPropertyChanged("SNDPOR");
                }
            }
        }

        /// <summary>
        /// Partner type of sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string SNDPRT
        {
            get
            {
                return this.sNDPRTField;
            }
            set
            {
                if ((this.sNDPRTField != null))
                {
                    if ((sNDPRTField.Equals(value) != true))
                    {
                        this.sNDPRTField = value;
                        this.OnPropertyChanged("SNDPRT");
                    }
                }
                else
                {
                    this.sNDPRTField = value;
                    this.OnPropertyChanged("SNDPRT");
                }
            }
        }

        /// <summary>
        /// Partner Function of Sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string SNDPFC
        {
            get
            {
                return this.sNDPFCField;
            }
            set
            {
                if ((this.sNDPFCField != null))
                {
                    if ((sNDPFCField.Equals(value) != true))
                    {
                        this.sNDPFCField = value;
                        this.OnPropertyChanged("SNDPFC");
                    }
                }
                else
                {
                    this.sNDPFCField = value;
                    this.OnPropertyChanged("SNDPFC");
                }
            }
        }

        /// <summary>
        /// Partner Number of Sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string SNDPRN
        {
            get
            {
                return this.sNDPRNField;
            }
            set
            {
                if ((this.sNDPRNField != null))
                {
                    if ((sNDPRNField.Equals(value) != true))
                    {
                        this.sNDPRNField = value;
                        this.OnPropertyChanged("SNDPRN");
                    }
                }
                else
                {
                    this.sNDPRNField = value;
                    this.OnPropertyChanged("SNDPRN");
                }
            }
        }

        /// <summary>
        /// Sender address (SADR)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string SNDSAD
        {
            get
            {
                return this.sNDSADField;
            }
            set
            {
                if ((this.sNDSADField != null))
                {
                    if ((sNDSADField.Equals(value) != true))
                    {
                        this.sNDSADField = value;
                        this.OnPropertyChanged("SNDSAD");
                    }
                }
                else
                {
                    this.sNDSADField = value;
                    this.OnPropertyChanged("SNDSAD");
                }
            }
        }

        /// <summary>
        /// Logical address of sender
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string SNDLAD
        {
            get
            {
                return this.sNDLADField;
            }
            set
            {
                if ((this.sNDLADField != null))
                {
                    if ((sNDLADField.Equals(value) != true))
                    {
                        this.sNDLADField = value;
                        this.OnPropertyChanged("SNDLAD");
                    }
                }
                else
                {
                    this.sNDLADField = value;
                    this.OnPropertyChanged("SNDLAD");
                }
            }
        }

        /// <summary>
        /// Receiver port
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string RCVPOR
        {
            get
            {
                return this.rCVPORField;
            }
            set
            {
                if ((this.rCVPORField != null))
                {
                    if ((rCVPORField.Equals(value) != true))
                    {
                        this.rCVPORField = value;
                        this.OnPropertyChanged("RCVPOR");
                    }
                }
                else
                {
                    this.rCVPORField = value;
                    this.OnPropertyChanged("RCVPOR");
                }
            }
        }

        /// <summary>
        /// Partner Type of Receiver
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string RCVPRT
        {
            get
            {
                return this.rCVPRTField;
            }
            set
            {
                if ((this.rCVPRTField != null))
                {
                    if ((rCVPRTField.Equals(value) != true))
                    {
                        this.rCVPRTField = value;
                        this.OnPropertyChanged("RCVPRT");
                    }
                }
                else
                {
                    this.rCVPRTField = value;
                    this.OnPropertyChanged("RCVPRT");
                }
            }
        }

        /// <summary>
        /// Partner function of recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string RCVPFC
        {
            get
            {
                return this.rCVPFCField;
            }
            set
            {
                if ((this.rCVPFCField != null))
                {
                    if ((rCVPFCField.Equals(value) != true))
                    {
                        this.rCVPFCField = value;
                        this.OnPropertyChanged("RCVPFC");
                    }
                }
                else
                {
                    this.rCVPFCField = value;
                    this.OnPropertyChanged("RCVPFC");
                }
            }
        }

        /// <summary>
        /// Partner Number of Receiver
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string RCVPRN
        {
            get
            {
                return this.rCVPRNField;
            }
            set
            {
                if ((this.rCVPRNField != null))
                {
                    if ((rCVPRNField.Equals(value) != true))
                    {
                        this.rCVPRNField = value;
                        this.OnPropertyChanged("RCVPRN");
                    }
                }
                else
                {
                    this.rCVPRNField = value;
                    this.OnPropertyChanged("RCVPRN");
                }
            }
        }

        /// <summary>
        /// Recipient address (SADR)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string RCVSAD
        {
            get
            {
                return this.rCVSADField;
            }
            set
            {
                if ((this.rCVSADField != null))
                {
                    if ((rCVSADField.Equals(value) != true))
                    {
                        this.rCVSADField = value;
                        this.OnPropertyChanged("RCVSAD");
                    }
                }
                else
                {
                    this.rCVSADField = value;
                    this.OnPropertyChanged("RCVSAD");
                }
            }
        }

        /// <summary>
        /// Logical address of recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string RCVLAD
        {
            get
            {
                return this.rCVLADField;
            }
            set
            {
                if ((this.rCVLADField != null))
                {
                    if ((rCVLADField.Equals(value) != true))
                    {
                        this.rCVLADField = value;
                        this.OnPropertyChanged("RCVLAD");
                    }
                }
                else
                {
                    this.rCVLADField = value;
                    this.OnPropertyChanged("RCVLAD");
                }
            }
        }

        /// <summary>
        /// Created on
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string CREDAT
        {
            get
            {
                return this.cREDATField;
            }
            set
            {
                if ((this.cREDATField != null))
                {
                    if ((cREDATField.Equals(value) != true))
                    {
                        this.cREDATField = value;
                        this.OnPropertyChanged("CREDAT");
                    }
                }
                else
                {
                    this.cREDATField = value;
                    this.OnPropertyChanged("CREDAT");
                }
            }
        }

        /// <summary>
        /// Created at
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string CRETIM
        {
            get
            {
                return this.cRETIMField;
            }
            set
            {
                if ((this.cRETIMField != null))
                {
                    if ((cRETIMField.Equals(value) != true))
                    {
                        this.cRETIMField = value;
                        this.OnPropertyChanged("CRETIM");
                    }
                }
                else
                {
                    this.cRETIMField = value;
                    this.OnPropertyChanged("CRETIM");
                }
            }
        }

        /// <summary>
        /// Transmission file (EDI Interchange)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string REFINT
        {
            get
            {
                return this.rEFINTField;
            }
            set
            {
                if ((this.rEFINTField != null))
                {
                    if ((rEFINTField.Equals(value) != true))
                    {
                        this.rEFINTField = value;
                        this.OnPropertyChanged("REFINT");
                    }
                }
                else
                {
                    this.rEFINTField = value;
                    this.OnPropertyChanged("REFINT");
                }
            }
        }

        /// <summary>
        /// Message group (EDI Message Group)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string REFGRP
        {
            get
            {
                return this.rEFGRPField;
            }
            set
            {
                if ((this.rEFGRPField != null))
                {
                    if ((rEFGRPField.Equals(value) != true))
                    {
                        this.rEFGRPField = value;
                        this.OnPropertyChanged("REFGRP");
                    }
                }
                else
                {
                    this.rEFGRPField = value;
                    this.OnPropertyChanged("REFGRP");
                }
            }
        }

        /// <summary>
        /// Message (EDI Message)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string REFMES
        {
            get
            {
                return this.rEFMESField;
            }
            set
            {
                if ((this.rEFMESField != null))
                {
                    if ((rEFMESField.Equals(value) != true))
                    {
                        this.rEFMESField = value;
                        this.OnPropertyChanged("REFMES");
                    }
                }
                else
                {
                    this.rEFMESField = value;
                    this.OnPropertyChanged("REFMES");
                }
            }
        }

        /// <summary>
        /// Key for external message archive
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string ARCKEY
        {
            get
            {
                return this.aRCKEYField;
            }
            set
            {
                if ((this.aRCKEYField != null))
                {
                    if ((aRCKEYField.Equals(value) != true))
                    {
                        this.aRCKEYField = value;
                        this.OnPropertyChanged("ARCKEY");
                    }
                }
                else
                {
                    this.aRCKEYField = value;
                    this.OnPropertyChanged("ARCKEY");
                }
            }
        }

        /// <summary>
        /// Serialization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string SERIAL
        {
            get
            {
                return this.sERIALField;
            }
            set
            {
                if ((this.sERIALField != null))
                {
                    if ((sERIALField.Equals(value) != true))
                    {
                        this.sERIALField = value;
                        this.OnPropertyChanged("SERIAL");
                    }
                }
                else
                {
                    this.sERIALField = value;
                    this.OnPropertyChanged("SERIAL");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCEDI_DC40SEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCEDI_DC40));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCEDI_DC40 object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCEDI_DC40 object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCEDI_DC40 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCEDI_DC40);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCEDI_DC40 obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCEDI_DC40 Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCEDI_DC40)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCEDI_DC40 object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCEDI_DC40 object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCEDI_DC40 object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCEDI_DC40);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCEDI_DC40 obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCEDI_DC40 obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCEDI_DC40 LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCEDI_DC40 LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCEDI_DC40DIRECT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCEDI_DC40SEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for general vendor data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string aNREDField;

        private string bAHNSField;

        private string bBBNRField;

        private string bBSNRField;

        private string bEGRUField;

        private string bRSCHField;

        private string bUBKZField;

        private string dATLTField;

        private string dTAMSField;

        private string dTAWSField;

        private string eRDATField;

        private string eRNAMField;

        private string eSRNRField;

        private string kONZSField;

        private string kTOKKField;

        private string kUNNRField;

        private string lAND1Field;

        private string lNRZAField;

        private string lOEVMField;

        private string nAME1Field;

        private string nAME2Field;

        private string nAME3Field;

        private string nAME4Field;

        private string oRT01Field;

        private string oRT02Field;

        private string pFACHField;

        private string pSTL2Field;

        private string pSTLZField;

        private string rEGIOField;

        private string sORTLField;

        private string sPERRField;

        private string sPERMField;

        private string sPRASField;

        private string sTCD1Field;

        private string sTCD2Field;

        private string sTKZAField;

        private string sTKZUField;

        private string sTRASField;

        private string tELBXField;

        private string tELF1Field;

        private string tELF2Field;

        private string tELFXField;

        private string tELTXField;

        private string tELX1Field;

        private string xCPDKField;

        private string xZEMPField;

        private string vBUNDField;

        private string fISKNField;

        private string sTCEGField;

        private string sTKZNField;

        private string sPERQField;

        private string aDRNRField;

        private string mCOD1Field;

        private string mCOD2Field;

        private string mCOD3Field;

        private string gBORTField;

        private string gBDATField;

        private string sEXKZField;

        private string kRAUSField;

        private string rEVDBField;

        private string qSSYSField;

        private string kTOCKField;

        private string pFORTField;

        private string wERKSField;

        private string lTSNAField;

        private string wERKRField;

        private string pLKALField;

        private string dUEFLField;

        private string tXJCDField;

        private string sCACDField;

        private string sFRGRField;

        private string lZONEField;

        private string dLGRPField;

        private string fITYPField;

        private string sTCDTField;

        private string rEGSSField;

        private string aCTSSField;

        private string sTCD3Field;

        private string sTCD4Field;

        private string iPISPField;

        private string tAXBSField;

        private string pROFSField;

        private string sTGDLField;

        private string eMNFRField;

        private string nODELField;

        private string cARRIER_CONFField;

        private string tRANSPORT_CHAINField;

        private string sTAGING_TIMEField;

        private string sUBMI_RELEVANTField;

        private string sCHEDULING_TYPEField;

        private CREMAS05IDOCE1LFA1ME1LFA1B e1LFA1BField;

        private CREMAS05IDOCE1LFA1ME1LFA1A e1LFA1AField;

        private List<CREMAS05IDOCE1LFA1ME1LFA1H> e1LFA1HField;

        private List<CREMAS05IDOCE1LFA1ME1LFB1M> e1LFB1MField;

        private List<CREMAS05IDOCE1LFA1ME1LFM1M> e1LFM1MField;

        private List<CREMAS05IDOCE1LFA1ME1LFBKM> e1LFBKMField;

        private List<CREMAS05IDOCE1LFA1ME1LFASM> e1LFASMField;

        private List<CREMAS05IDOCE1LFA1ME1WYT1M> e1WYT1MField;

        private CREMAS05IDOCE1LFA1MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1M class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1M()
        {
            this.e1WYT1MField = new List<CREMAS05IDOCE1LFA1ME1WYT1M>();
            this.e1LFASMField = new List<CREMAS05IDOCE1LFA1ME1LFASM>();
            this.e1LFBKMField = new List<CREMAS05IDOCE1LFA1ME1LFBKM>();
            this.e1LFM1MField = new List<CREMAS05IDOCE1LFA1ME1LFM1M>();
            this.e1LFB1MField = new List<CREMAS05IDOCE1LFA1ME1LFB1M>();
            this.e1LFA1HField = new List<CREMAS05IDOCE1LFA1ME1LFA1H>();
            this.e1LFA1AField = new CREMAS05IDOCE1LFA1ME1LFA1A();
            this.e1LFA1BField = new CREMAS05IDOCE1LFA1ME1LFA1B();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Title
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string ANRED
        {
            get
            {
                return this.aNREDField;
            }
            set
            {
                if ((this.aNREDField != null))
                {
                    if ((aNREDField.Equals(value) != true))
                    {
                        this.aNREDField = value;
                        this.OnPropertyChanged("ANRED");
                    }
                }
                else
                {
                    this.aNREDField = value;
                    this.OnPropertyChanged("ANRED");
                }
            }
        }

        /// <summary>
        /// Train station
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BAHNS
        {
            get
            {
                return this.bAHNSField;
            }
            set
            {
                if ((this.bAHNSField != null))
                {
                    if ((bAHNSField.Equals(value) != true))
                    {
                        this.bAHNSField = value;
                        this.OnPropertyChanged("BAHNS");
                    }
                }
                else
                {
                    this.bAHNSField = value;
                    this.OnPropertyChanged("BAHNS");
                }
            }
        }

        /// <summary>
        /// International location number  (part 1)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string BBBNR
        {
            get
            {
                return this.bBBNRField;
            }
            set
            {
                if ((this.bBBNRField != null))
                {
                    if ((bBBNRField.Equals(value) != true))
                    {
                        this.bBBNRField = value;
                        this.OnPropertyChanged("BBBNR");
                    }
                }
                else
                {
                    this.bBBNRField = value;
                    this.OnPropertyChanged("BBBNR");
                }
            }
        }

        /// <summary>
        /// International location number (Part 2)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string BBSNR
        {
            get
            {
                return this.bBSNRField;
            }
            set
            {
                if ((this.bBSNRField != null))
                {
                    if ((bBSNRField.Equals(value) != true))
                    {
                        this.bBSNRField = value;
                        this.OnPropertyChanged("BBSNR");
                    }
                }
                else
                {
                    this.bBSNRField = value;
                    this.OnPropertyChanged("BBSNR");
                }
            }
        }

        /// <summary>
        /// Authorization Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string BEGRU
        {
            get
            {
                return this.bEGRUField;
            }
            set
            {
                if ((this.bEGRUField != null))
                {
                    if ((bEGRUField.Equals(value) != true))
                    {
                        this.bEGRUField = value;
                        this.OnPropertyChanged("BEGRU");
                    }
                }
                else
                {
                    this.bEGRUField = value;
                    this.OnPropertyChanged("BEGRU");
                }
            }
        }

        /// <summary>
        /// Industry key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string BRSCH
        {
            get
            {
                return this.bRSCHField;
            }
            set
            {
                if ((this.bRSCHField != null))
                {
                    if ((bRSCHField.Equals(value) != true))
                    {
                        this.bRSCHField = value;
                        this.OnPropertyChanged("BRSCH");
                    }
                }
                else
                {
                    this.bRSCHField = value;
                    this.OnPropertyChanged("BRSCH");
                }
            }
        }

        /// <summary>
        /// Check digit for the international location number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string BUBKZ
        {
            get
            {
                return this.bUBKZField;
            }
            set
            {
                if ((this.bUBKZField != null))
                {
                    if ((bUBKZField.Equals(value) != true))
                    {
                        this.bUBKZField = value;
                        this.OnPropertyChanged("BUBKZ");
                    }
                }
                else
                {
                    this.bUBKZField = value;
                    this.OnPropertyChanged("BUBKZ");
                }
            }
        }

        /// <summary>
        /// Data communication line no.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string DATLT
        {
            get
            {
                return this.dATLTField;
            }
            set
            {
                if ((this.dATLTField != null))
                {
                    if ((dATLTField.Equals(value) != true))
                    {
                        this.dATLTField = value;
                        this.OnPropertyChanged("DATLT");
                    }
                }
                else
                {
                    this.dATLTField = value;
                    this.OnPropertyChanged("DATLT");
                }
            }
        }

        /// <summary>
        /// Indicator for Data Medium Exchange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string DTAMS
        {
            get
            {
                return this.dTAMSField;
            }
            set
            {
                if ((this.dTAMSField != null))
                {
                    if ((dTAMSField.Equals(value) != true))
                    {
                        this.dTAMSField = value;
                        this.OnPropertyChanged("DTAMS");
                    }
                }
                else
                {
                    this.dTAMSField = value;
                    this.OnPropertyChanged("DTAMS");
                }
            }
        }

        /// <summary>
        /// Instruction key for data medium exchange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string DTAWS
        {
            get
            {
                return this.dTAWSField;
            }
            set
            {
                if ((this.dTAWSField != null))
                {
                    if ((dTAWSField.Equals(value) != true))
                    {
                        this.dTAWSField = value;
                        this.OnPropertyChanged("DTAWS");
                    }
                }
                else
                {
                    this.dTAWSField = value;
                    this.OnPropertyChanged("DTAWS");
                }
            }
        }

        /// <summary>
        /// Date on which the Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// ISR Subscriber Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string ESRNR
        {
            get
            {
                return this.eSRNRField;
            }
            set
            {
                if ((this.eSRNRField != null))
                {
                    if ((eSRNRField.Equals(value) != true))
                    {
                        this.eSRNRField = value;
                        this.OnPropertyChanged("ESRNR");
                    }
                }
                else
                {
                    this.eSRNRField = value;
                    this.OnPropertyChanged("ESRNR");
                }
            }
        }

        /// <summary>
        /// Group key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string KONZS
        {
            get
            {
                return this.kONZSField;
            }
            set
            {
                if ((this.kONZSField != null))
                {
                    if ((kONZSField.Equals(value) != true))
                    {
                        this.kONZSField = value;
                        this.OnPropertyChanged("KONZS");
                    }
                }
                else
                {
                    this.kONZSField = value;
                    this.OnPropertyChanged("KONZS");
                }
            }
        }

        /// <summary>
        /// Vendor account group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string KTOKK
        {
            get
            {
                return this.kTOKKField;
            }
            set
            {
                if ((this.kTOKKField != null))
                {
                    if ((kTOKKField.Equals(value) != true))
                    {
                        this.kTOKKField = value;
                        this.OnPropertyChanged("KTOKK");
                    }
                }
                else
                {
                    this.kTOKKField = value;
                    this.OnPropertyChanged("KTOKK");
                }
            }
        }

        /// <summary>
        /// Customer Number 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string KUNNR
        {
            get
            {
                return this.kUNNRField;
            }
            set
            {
                if ((this.kUNNRField != null))
                {
                    if ((kUNNRField.Equals(value) != true))
                    {
                        this.kUNNRField = value;
                        this.OnPropertyChanged("KUNNR");
                    }
                }
                else
                {
                    this.kUNNRField = value;
                    this.OnPropertyChanged("KUNNR");
                }
            }
        }

        /// <summary>
        /// Country of company
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string LAND1
        {
            get
            {
                return this.lAND1Field;
            }
            set
            {
                if ((this.lAND1Field != null))
                {
                    if ((lAND1Field.Equals(value) != true))
                    {
                        this.lAND1Field = value;
                        this.OnPropertyChanged("LAND1");
                    }
                }
                else
                {
                    this.lAND1Field = value;
                    this.OnPropertyChanged("LAND1");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string LNRZA
        {
            get
            {
                return this.lNRZAField;
            }
            set
            {
                if ((this.lNRZAField != null))
                {
                    if ((lNRZAField.Equals(value) != true))
                    {
                        this.lNRZAField = value;
                        this.OnPropertyChanged("LNRZA");
                    }
                }
                else
                {
                    this.lNRZAField = value;
                    this.OnPropertyChanged("LNRZA");
                }
            }
        }

        /// <summary>
        /// Central Deletion Flag for Master Record
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string LOEVM
        {
            get
            {
                return this.lOEVMField;
            }
            set
            {
                if ((this.lOEVMField != null))
                {
                    if ((lOEVMField.Equals(value) != true))
                    {
                        this.lOEVMField = value;
                        this.OnPropertyChanged("LOEVM");
                    }
                }
                else
                {
                    this.lOEVMField = value;
                    this.OnPropertyChanged("LOEVM");
                }
            }
        }

        /// <summary>
        /// Employee's last name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string NAME1
        {
            get
            {
                return this.nAME1Field;
            }
            set
            {
                if ((this.nAME1Field != null))
                {
                    if ((nAME1Field.Equals(value) != true))
                    {
                        this.nAME1Field = value;
                        this.OnPropertyChanged("NAME1");
                    }
                }
                else
                {
                    this.nAME1Field = value;
                    this.OnPropertyChanged("NAME1");
                }
            }
        }

        /// <summary>
        /// Employee's last name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string NAME2
        {
            get
            {
                return this.nAME2Field;
            }
            set
            {
                if ((this.nAME2Field != null))
                {
                    if ((nAME2Field.Equals(value) != true))
                    {
                        this.nAME2Field = value;
                        this.OnPropertyChanged("NAME2");
                    }
                }
                else
                {
                    this.nAME2Field = value;
                    this.OnPropertyChanged("NAME2");
                }
            }
        }

        /// <summary>
        /// Employee's last name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string NAME3
        {
            get
            {
                return this.nAME3Field;
            }
            set
            {
                if ((this.nAME3Field != null))
                {
                    if ((nAME3Field.Equals(value) != true))
                    {
                        this.nAME3Field = value;
                        this.OnPropertyChanged("NAME3");
                    }
                }
                else
                {
                    this.nAME3Field = value;
                    this.OnPropertyChanged("NAME3");
                }
            }
        }

        /// <summary>
        /// Employee's last name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string NAME4
        {
            get
            {
                return this.nAME4Field;
            }
            set
            {
                if ((this.nAME4Field != null))
                {
                    if ((nAME4Field.Equals(value) != true))
                    {
                        this.nAME4Field = value;
                        this.OnPropertyChanged("NAME4");
                    }
                }
                else
                {
                    this.nAME4Field = value;
                    this.OnPropertyChanged("NAME4");
                }
            }
        }

        /// <summary>
        /// City
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string ORT01
        {
            get
            {
                return this.oRT01Field;
            }
            set
            {
                if ((this.oRT01Field != null))
                {
                    if ((oRT01Field.Equals(value) != true))
                    {
                        this.oRT01Field = value;
                        this.OnPropertyChanged("ORT01");
                    }
                }
                else
                {
                    this.oRT01Field = value;
                    this.OnPropertyChanged("ORT01");
                }
            }
        }

        /// <summary>
        /// District
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string ORT02
        {
            get
            {
                return this.oRT02Field;
            }
            set
            {
                if ((this.oRT02Field != null))
                {
                    if ((oRT02Field.Equals(value) != true))
                    {
                        this.oRT02Field = value;
                        this.OnPropertyChanged("ORT02");
                    }
                }
                else
                {
                    this.oRT02Field = value;
                    this.OnPropertyChanged("ORT02");
                }
            }
        }

        /// <summary>
        /// PO Box
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string PFACH
        {
            get
            {
                return this.pFACHField;
            }
            set
            {
                if ((this.pFACHField != null))
                {
                    if ((pFACHField.Equals(value) != true))
                    {
                        this.pFACHField = value;
                        this.OnPropertyChanged("PFACH");
                    }
                }
                else
                {
                    this.pFACHField = value;
                    this.OnPropertyChanged("PFACH");
                }
            }
        }

        /// <summary>
        /// Postal Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string PSTL2
        {
            get
            {
                return this.pSTL2Field;
            }
            set
            {
                if ((this.pSTL2Field != null))
                {
                    if ((pSTL2Field.Equals(value) != true))
                    {
                        this.pSTL2Field = value;
                        this.OnPropertyChanged("PSTL2");
                    }
                }
                else
                {
                    this.pSTL2Field = value;
                    this.OnPropertyChanged("PSTL2");
                }
            }
        }

        /// <summary>
        /// Postal Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string PSTLZ
        {
            get
            {
                return this.pSTLZField;
            }
            set
            {
                if ((this.pSTLZField != null))
                {
                    if ((pSTLZField.Equals(value) != true))
                    {
                        this.pSTLZField = value;
                        this.OnPropertyChanged("PSTLZ");
                    }
                }
                else
                {
                    this.pSTLZField = value;
                    this.OnPropertyChanged("PSTLZ");
                }
            }
        }

        /// <summary>
        /// Region (State, Province, County)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string REGIO
        {
            get
            {
                return this.rEGIOField;
            }
            set
            {
                if ((this.rEGIOField != null))
                {
                    if ((rEGIOField.Equals(value) != true))
                    {
                        this.rEGIOField = value;
                        this.OnPropertyChanged("REGIO");
                    }
                }
                else
                {
                    this.rEGIOField = value;
                    this.OnPropertyChanged("REGIO");
                }
            }
        }

        /// <summary>
        /// Character Field Length = 10
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string SORTL
        {
            get
            {
                return this.sORTLField;
            }
            set
            {
                if ((this.sORTLField != null))
                {
                    if ((sORTLField.Equals(value) != true))
                    {
                        this.sORTLField = value;
                        this.OnPropertyChanged("SORTL");
                    }
                }
                else
                {
                    this.sORTLField = value;
                    this.OnPropertyChanged("SORTL");
                }
            }
        }

        /// <summary>
        /// Central posting block
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string SPERR
        {
            get
            {
                return this.sPERRField;
            }
            set
            {
                if ((this.sPERRField != null))
                {
                    if ((sPERRField.Equals(value) != true))
                    {
                        this.sPERRField = value;
                        this.OnPropertyChanged("SPERR");
                    }
                }
                else
                {
                    this.sPERRField = value;
                    this.OnPropertyChanged("SPERR");
                }
            }
        }

        /// <summary>
        /// Centrally imposed purchasing block
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string SPERM
        {
            get
            {
                return this.sPERMField;
            }
            set
            {
                if ((this.sPERMField != null))
                {
                    if ((sPERMField.Equals(value) != true))
                    {
                        this.sPERMField = value;
                        this.OnPropertyChanged("SPERM");
                    }
                }
                else
                {
                    this.sPERMField = value;
                    this.OnPropertyChanged("SPERM");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Tax Number 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string STCD1
        {
            get
            {
                return this.sTCD1Field;
            }
            set
            {
                if ((this.sTCD1Field != null))
                {
                    if ((sTCD1Field.Equals(value) != true))
                    {
                        this.sTCD1Field = value;
                        this.OnPropertyChanged("STCD1");
                    }
                }
                else
                {
                    this.sTCD1Field = value;
                    this.OnPropertyChanged("STCD1");
                }
            }
        }

        /// <summary>
        /// Tax Number 2
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string STCD2
        {
            get
            {
                return this.sTCD2Field;
            }
            set
            {
                if ((this.sTCD2Field != null))
                {
                    if ((sTCD2Field.Equals(value) != true))
                    {
                        this.sTCD2Field = value;
                        this.OnPropertyChanged("STCD2");
                    }
                }
                else
                {
                    this.sTCD2Field = value;
                    this.OnPropertyChanged("STCD2");
                }
            }
        }

        /// <summary>
        /// Indicator: Business Partner Subject to Equalization Tax?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string STKZA
        {
            get
            {
                return this.sTKZAField;
            }
            set
            {
                if ((this.sTKZAField != null))
                {
                    if ((sTKZAField.Equals(value) != true))
                    {
                        this.sTKZAField = value;
                        this.OnPropertyChanged("STKZA");
                    }
                }
                else
                {
                    this.sTKZAField = value;
                    this.OnPropertyChanged("STKZA");
                }
            }
        }

        /// <summary>
        /// Liable for VAT
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string STKZU
        {
            get
            {
                return this.sTKZUField;
            }
            set
            {
                if ((this.sTKZUField != null))
                {
                    if ((sTKZUField.Equals(value) != true))
                    {
                        this.sTKZUField = value;
                        this.OnPropertyChanged("STKZU");
                    }
                }
                else
                {
                    this.sTKZUField = value;
                    this.OnPropertyChanged("STKZU");
                }
            }
        }

        /// <summary>
        /// House number and street
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string STRAS
        {
            get
            {
                return this.sTRASField;
            }
            set
            {
                if ((this.sTRASField != null))
                {
                    if ((sTRASField.Equals(value) != true))
                    {
                        this.sTRASField = value;
                        this.OnPropertyChanged("STRAS");
                    }
                }
                else
                {
                    this.sTRASField = value;
                    this.OnPropertyChanged("STRAS");
                }
            }
        }

        /// <summary>
        /// Telebox number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string TELBX
        {
            get
            {
                return this.tELBXField;
            }
            set
            {
                if ((this.tELBXField != null))
                {
                    if ((tELBXField.Equals(value) != true))
                    {
                        this.tELBXField = value;
                        this.OnPropertyChanged("TELBX");
                    }
                }
                else
                {
                    this.tELBXField = value;
                    this.OnPropertyChanged("TELBX");
                }
            }
        }

        /// <summary>
        /// First telephone number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// Second telephone number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string TELF2
        {
            get
            {
                return this.tELF2Field;
            }
            set
            {
                if ((this.tELF2Field != null))
                {
                    if ((tELF2Field.Equals(value) != true))
                    {
                        this.tELF2Field = value;
                        this.OnPropertyChanged("TELF2");
                    }
                }
                else
                {
                    this.tELF2Field = value;
                    this.OnPropertyChanged("TELF2");
                }
            }
        }

        /// <summary>
        /// Fax Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string TELFX
        {
            get
            {
                return this.tELFXField;
            }
            set
            {
                if ((this.tELFXField != null))
                {
                    if ((tELFXField.Equals(value) != true))
                    {
                        this.tELFXField = value;
                        this.OnPropertyChanged("TELFX");
                    }
                }
                else
                {
                    this.tELFXField = value;
                    this.OnPropertyChanged("TELFX");
                }
            }
        }

        /// <summary>
        /// Teletex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string TELTX
        {
            get
            {
                return this.tELTXField;
            }
            set
            {
                if ((this.tELTXField != null))
                {
                    if ((tELTXField.Equals(value) != true))
                    {
                        this.tELTXField = value;
                        this.OnPropertyChanged("TELTX");
                    }
                }
                else
                {
                    this.tELTXField = value;
                    this.OnPropertyChanged("TELTX");
                }
            }
        }

        /// <summary>
        /// Telex number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string TELX1
        {
            get
            {
                return this.tELX1Field;
            }
            set
            {
                if ((this.tELX1Field != null))
                {
                    if ((tELX1Field.Equals(value) != true))
                    {
                        this.tELX1Field = value;
                        this.OnPropertyChanged("TELX1");
                    }
                }
                else
                {
                    this.tELX1Field = value;
                    this.OnPropertyChanged("TELX1");
                }
            }
        }

        /// <summary>
        /// Indicator: Is the account a one-time account?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public string XCPDK
        {
            get
            {
                return this.xCPDKField;
            }
            set
            {
                if ((this.xCPDKField != null))
                {
                    if ((xCPDKField.Equals(value) != true))
                    {
                        this.xCPDKField = value;
                        this.OnPropertyChanged("XCPDK");
                    }
                }
                else
                {
                    this.xCPDKField = value;
                    this.OnPropertyChanged("XCPDK");
                }
            }
        }

        /// <summary>
        /// Indicator: Alternative payee in document allowed ?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public string XZEMP
        {
            get
            {
                return this.xZEMPField;
            }
            set
            {
                if ((this.xZEMPField != null))
                {
                    if ((xZEMPField.Equals(value) != true))
                    {
                        this.xZEMPField = value;
                        this.OnPropertyChanged("XZEMP");
                    }
                }
                else
                {
                    this.xZEMPField = value;
                    this.OnPropertyChanged("XZEMP");
                }
            }
        }

        /// <summary>
        /// Company ID of trading partner
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public string VBUND
        {
            get
            {
                return this.vBUNDField;
            }
            set
            {
                if ((this.vBUNDField != null))
                {
                    if ((vBUNDField.Equals(value) != true))
                    {
                        this.vBUNDField = value;
                        this.OnPropertyChanged("VBUND");
                    }
                }
                else
                {
                    this.vBUNDField = value;
                    this.OnPropertyChanged("VBUND");
                }
            }
        }

        /// <summary>
        /// Account number of the master record with fiscal address
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 49)]
        public string FISKN
        {
            get
            {
                return this.fISKNField;
            }
            set
            {
                if ((this.fISKNField != null))
                {
                    if ((fISKNField.Equals(value) != true))
                    {
                        this.fISKNField = value;
                        this.OnPropertyChanged("FISKN");
                    }
                }
                else
                {
                    this.fISKNField = value;
                    this.OnPropertyChanged("FISKN");
                }
            }
        }

        /// <summary>
        /// VAT Registration Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 50)]
        public string STCEG
        {
            get
            {
                return this.sTCEGField;
            }
            set
            {
                if ((this.sTCEGField != null))
                {
                    if ((sTCEGField.Equals(value) != true))
                    {
                        this.sTCEGField = value;
                        this.OnPropertyChanged("STCEG");
                    }
                }
                else
                {
                    this.sTCEGField = value;
                    this.OnPropertyChanged("STCEG");
                }
            }
        }

        /// <summary>
        /// Natural Person
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 51)]
        public string STKZN
        {
            get
            {
                return this.sTKZNField;
            }
            set
            {
                if ((this.sTKZNField != null))
                {
                    if ((sTKZNField.Equals(value) != true))
                    {
                        this.sTKZNField = value;
                        this.OnPropertyChanged("STKZN");
                    }
                }
                else
                {
                    this.sTKZNField = value;
                    this.OnPropertyChanged("STKZN");
                }
            }
        }

        /// <summary>
        /// Function That Will Be Blocked
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 52)]
        public string SPERQ
        {
            get
            {
                return this.sPERQField;
            }
            set
            {
                if ((this.sPERQField != null))
                {
                    if ((sPERQField.Equals(value) != true))
                    {
                        this.sPERQField = value;
                        this.OnPropertyChanged("SPERQ");
                    }
                }
                else
                {
                    this.sPERQField = value;
                    this.OnPropertyChanged("SPERQ");
                }
            }
        }

        /// <summary>
        /// Address
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 53)]
        public string ADRNR
        {
            get
            {
                return this.aDRNRField;
            }
            set
            {
                if ((this.aDRNRField != null))
                {
                    if ((aDRNRField.Equals(value) != true))
                    {
                        this.aDRNRField = value;
                        this.OnPropertyChanged("ADRNR");
                    }
                }
                else
                {
                    this.aDRNRField = value;
                    this.OnPropertyChanged("ADRNR");
                }
            }
        }

        /// <summary>
        /// Search term for matchcode search
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 54)]
        public string MCOD1
        {
            get
            {
                return this.mCOD1Field;
            }
            set
            {
                if ((this.mCOD1Field != null))
                {
                    if ((mCOD1Field.Equals(value) != true))
                    {
                        this.mCOD1Field = value;
                        this.OnPropertyChanged("MCOD1");
                    }
                }
                else
                {
                    this.mCOD1Field = value;
                    this.OnPropertyChanged("MCOD1");
                }
            }
        }

        /// <summary>
        /// Search term for matchcode search
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 55)]
        public string MCOD2
        {
            get
            {
                return this.mCOD2Field;
            }
            set
            {
                if ((this.mCOD2Field != null))
                {
                    if ((mCOD2Field.Equals(value) != true))
                    {
                        this.mCOD2Field = value;
                        this.OnPropertyChanged("MCOD2");
                    }
                }
                else
                {
                    this.mCOD2Field = value;
                    this.OnPropertyChanged("MCOD2");
                }
            }
        }

        /// <summary>
        /// Search term for matchcode search
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 56)]
        public string MCOD3
        {
            get
            {
                return this.mCOD3Field;
            }
            set
            {
                if ((this.mCOD3Field != null))
                {
                    if ((mCOD3Field.Equals(value) != true))
                    {
                        this.mCOD3Field = value;
                        this.OnPropertyChanged("MCOD3");
                    }
                }
                else
                {
                    this.mCOD3Field = value;
                    this.OnPropertyChanged("MCOD3");
                }
            }
        }

        /// <summary>
        /// Place of birth of the person subject to withholding tax
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 57)]
        public string GBORT
        {
            get
            {
                return this.gBORTField;
            }
            set
            {
                if ((this.gBORTField != null))
                {
                    if ((gBORTField.Equals(value) != true))
                    {
                        this.gBORTField = value;
                        this.OnPropertyChanged("GBORT");
                    }
                }
                else
                {
                    this.gBORTField = value;
                    this.OnPropertyChanged("GBORT");
                }
            }
        }

        /// <summary>
        /// Date of Birth
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 58)]
        public string GBDAT
        {
            get
            {
                return this.gBDATField;
            }
            set
            {
                if ((this.gBDATField != null))
                {
                    if ((gBDATField.Equals(value) != true))
                    {
                        this.gBDATField = value;
                        this.OnPropertyChanged("GBDAT");
                    }
                }
                else
                {
                    this.gBDATField = value;
                    this.OnPropertyChanged("GBDAT");
                }
            }
        }

        /// <summary>
        /// Key for the Sex of the Person Subject to Withholding Tax
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 59)]
        public string SEXKZ
        {
            get
            {
                return this.sEXKZField;
            }
            set
            {
                if ((this.sEXKZField != null))
                {
                    if ((sEXKZField.Equals(value) != true))
                    {
                        this.sEXKZField = value;
                        this.OnPropertyChanged("SEXKZ");
                    }
                }
                else
                {
                    this.sEXKZField = value;
                    this.OnPropertyChanged("SEXKZ");
                }
            }
        }

        /// <summary>
        /// Credit information number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 60)]
        public string KRAUS
        {
            get
            {
                return this.kRAUSField;
            }
            set
            {
                if ((this.kRAUSField != null))
                {
                    if ((kRAUSField.Equals(value) != true))
                    {
                        this.kRAUSField = value;
                        this.OnPropertyChanged("KRAUS");
                    }
                }
                else
                {
                    this.kRAUSField = value;
                    this.OnPropertyChanged("KRAUS");
                }
            }
        }

        /// <summary>
        /// Last review (external)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 61)]
        public string REVDB
        {
            get
            {
                return this.rEVDBField;
            }
            set
            {
                if ((this.rEVDBField != null))
                {
                    if ((rEVDBField.Equals(value) != true))
                    {
                        this.rEVDBField = value;
                        this.OnPropertyChanged("REVDB");
                    }
                }
                else
                {
                    this.rEVDBField = value;
                    this.OnPropertyChanged("REVDB");
                }
            }
        }

        /// <summary>
        /// Vendor's QM system
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 62)]
        public string QSSYS
        {
            get
            {
                return this.qSSYSField;
            }
            set
            {
                if ((this.qSSYSField != null))
                {
                    if ((qSSYSField.Equals(value) != true))
                    {
                        this.qSSYSField = value;
                        this.OnPropertyChanged("QSSYS");
                    }
                }
                else
                {
                    this.qSSYSField = value;
                    this.OnPropertyChanged("QSSYS");
                }
            }
        }

        /// <summary>
        /// Reference Account Group for One-Time Account (Vendor)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 63)]
        public string KTOCK
        {
            get
            {
                return this.kTOCKField;
            }
            set
            {
                if ((this.kTOCKField != null))
                {
                    if ((kTOCKField.Equals(value) != true))
                    {
                        this.kTOCKField = value;
                        this.OnPropertyChanged("KTOCK");
                    }
                }
                else
                {
                    this.kTOCKField = value;
                    this.OnPropertyChanged("KTOCK");
                }
            }
        }

        /// <summary>
        /// PO Box city
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 64)]
        public string PFORT
        {
            get
            {
                return this.pFORTField;
            }
            set
            {
                if ((this.pFORTField != null))
                {
                    if ((pFORTField.Equals(value) != true))
                    {
                        this.pFORTField = value;
                        this.OnPropertyChanged("PFORT");
                    }
                }
                else
                {
                    this.pFORTField = value;
                    this.OnPropertyChanged("PFORT");
                }
            }
        }

        /// <summary>
        /// Plant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 65)]
        public string WERKS
        {
            get
            {
                return this.wERKSField;
            }
            set
            {
                if ((this.wERKSField != null))
                {
                    if ((wERKSField.Equals(value) != true))
                    {
                        this.wERKSField = value;
                        this.OnPropertyChanged("WERKS");
                    }
                }
                else
                {
                    this.wERKSField = value;
                    this.OnPropertyChanged("WERKS");
                }
            }
        }

        /// <summary>
        /// Indicator: vendor sub-range relevant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 66)]
        public string LTSNA
        {
            get
            {
                return this.lTSNAField;
            }
            set
            {
                if ((this.lTSNAField != null))
                {
                    if ((lTSNAField.Equals(value) != true))
                    {
                        this.lTSNAField = value;
                        this.OnPropertyChanged("LTSNA");
                    }
                }
                else
                {
                    this.lTSNAField = value;
                    this.OnPropertyChanged("LTSNA");
                }
            }
        }

        /// <summary>
        /// Indicator: plant level relevant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 67)]
        public string WERKR
        {
            get
            {
                return this.wERKRField;
            }
            set
            {
                if ((this.wERKRField != null))
                {
                    if ((wERKRField.Equals(value) != true))
                    {
                        this.wERKRField = value;
                        this.OnPropertyChanged("WERKR");
                    }
                }
                else
                {
                    this.wERKRField = value;
                    this.OnPropertyChanged("WERKR");
                }
            }
        }

        /// <summary>
        /// Factory calendar key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 68)]
        public string PLKAL
        {
            get
            {
                return this.pLKALField;
            }
            set
            {
                if ((this.pLKALField != null))
                {
                    if ((pLKALField.Equals(value) != true))
                    {
                        this.pLKALField = value;
                        this.OnPropertyChanged("PLKAL");
                    }
                }
                else
                {
                    this.pLKALField = value;
                    this.OnPropertyChanged("PLKAL");
                }
            }
        }

        /// <summary>
        /// Status of Data Transfer into Subsequent Release
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 69)]
        public string DUEFL
        {
            get
            {
                return this.dUEFLField;
            }
            set
            {
                if ((this.dUEFLField != null))
                {
                    if ((dUEFLField.Equals(value) != true))
                    {
                        this.dUEFLField = value;
                        this.OnPropertyChanged("DUEFL");
                    }
                }
                else
                {
                    this.dUEFLField = value;
                    this.OnPropertyChanged("DUEFL");
                }
            }
        }

        /// <summary>
        /// Tax Jurisdiction
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 70)]
        public string TXJCD
        {
            get
            {
                return this.tXJCDField;
            }
            set
            {
                if ((this.tXJCDField != null))
                {
                    if ((tXJCDField.Equals(value) != true))
                    {
                        this.tXJCDField = value;
                        this.OnPropertyChanged("TXJCD");
                    }
                }
                else
                {
                    this.tXJCDField = value;
                    this.OnPropertyChanged("TXJCD");
                }
            }
        }

        /// <summary>
        /// Standard carrier access code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 71)]
        public string SCACD
        {
            get
            {
                return this.sCACDField;
            }
            set
            {
                if ((this.sCACDField != null))
                {
                    if ((sCACDField.Equals(value) != true))
                    {
                        this.sCACDField = value;
                        this.OnPropertyChanged("SCACD");
                    }
                }
                else
                {
                    this.sCACDField = value;
                    this.OnPropertyChanged("SCACD");
                }
            }
        }

        /// <summary>
        /// Forwarding agent freight group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 72)]
        public string SFRGR
        {
            get
            {
                return this.sFRGRField;
            }
            set
            {
                if ((this.sFRGRField != null))
                {
                    if ((sFRGRField.Equals(value) != true))
                    {
                        this.sFRGRField = value;
                        this.OnPropertyChanged("SFRGR");
                    }
                }
                else
                {
                    this.sFRGRField = value;
                    this.OnPropertyChanged("SFRGR");
                }
            }
        }

        /// <summary>
        /// Transportation zone to or from which the goods are delivered
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 73)]
        public string LZONE
        {
            get
            {
                return this.lZONEField;
            }
            set
            {
                if ((this.lZONEField != null))
                {
                    if ((lZONEField.Equals(value) != true))
                    {
                        this.lZONEField = value;
                        this.OnPropertyChanged("LZONE");
                    }
                }
                else
                {
                    this.lZONEField = value;
                    this.OnPropertyChanged("LZONE");
                }
            }
        }

        /// <summary>
        /// Service agent procedure group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 74)]
        public string DLGRP
        {
            get
            {
                return this.dLGRPField;
            }
            set
            {
                if ((this.dLGRPField != null))
                {
                    if ((dLGRPField.Equals(value) != true))
                    {
                        this.dLGRPField = value;
                        this.OnPropertyChanged("DLGRP");
                    }
                }
                else
                {
                    this.dLGRPField = value;
                    this.OnPropertyChanged("DLGRP");
                }
            }
        }

        /// <summary>
        /// Tax type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 75)]
        public string FITYP
        {
            get
            {
                return this.fITYPField;
            }
            set
            {
                if ((this.fITYPField != null))
                {
                    if ((fITYPField.Equals(value) != true))
                    {
                        this.fITYPField = value;
                        this.OnPropertyChanged("FITYP");
                    }
                }
                else
                {
                    this.fITYPField = value;
                    this.OnPropertyChanged("FITYP");
                }
            }
        }

        /// <summary>
        /// Tax Number Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 76)]
        public string STCDT
        {
            get
            {
                return this.sTCDTField;
            }
            set
            {
                if ((this.sTCDTField != null))
                {
                    if ((sTCDTField.Equals(value) != true))
                    {
                        this.sTCDTField = value;
                        this.OnPropertyChanged("STCDT");
                    }
                }
                else
                {
                    this.sTCDTField = value;
                    this.OnPropertyChanged("STCDT");
                }
            }
        }

        /// <summary>
        /// Registered for Social Insurance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 77)]
        public string REGSS
        {
            get
            {
                return this.rEGSSField;
            }
            set
            {
                if ((this.rEGSSField != null))
                {
                    if ((rEGSSField.Equals(value) != true))
                    {
                        this.rEGSSField = value;
                        this.OnPropertyChanged("REGSS");
                    }
                }
                else
                {
                    this.rEGSSField = value;
                    this.OnPropertyChanged("REGSS");
                }
            }
        }

        /// <summary>
        /// Activity Code for Social Insurance
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 78)]
        public string ACTSS
        {
            get
            {
                return this.aCTSSField;
            }
            set
            {
                if ((this.aCTSSField != null))
                {
                    if ((aCTSSField.Equals(value) != true))
                    {
                        this.aCTSSField = value;
                        this.OnPropertyChanged("ACTSS");
                    }
                }
                else
                {
                    this.aCTSSField = value;
                    this.OnPropertyChanged("ACTSS");
                }
            }
        }

        /// <summary>
        /// Tax Number 3
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 79)]
        public string STCD3
        {
            get
            {
                return this.sTCD3Field;
            }
            set
            {
                if ((this.sTCD3Field != null))
                {
                    if ((sTCD3Field.Equals(value) != true))
                    {
                        this.sTCD3Field = value;
                        this.OnPropertyChanged("STCD3");
                    }
                }
                else
                {
                    this.sTCD3Field = value;
                    this.OnPropertyChanged("STCD3");
                }
            }
        }

        /// <summary>
        /// Tax Number 4
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 80)]
        public string STCD4
        {
            get
            {
                return this.sTCD4Field;
            }
            set
            {
                if ((this.sTCD4Field != null))
                {
                    if ((sTCD4Field.Equals(value) != true))
                    {
                        this.sTCD4Field = value;
                        this.OnPropertyChanged("STCD4");
                    }
                }
                else
                {
                    this.sTCD4Field = value;
                    this.OnPropertyChanged("STCD4");
                }
            }
        }

        /// <summary>
        /// Tax Split
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 81)]
        public string IPISP
        {
            get
            {
                return this.iPISPField;
            }
            set
            {
                if ((this.iPISPField != null))
                {
                    if ((iPISPField.Equals(value) != true))
                    {
                        this.iPISPField = value;
                        this.OnPropertyChanged("IPISP");
                    }
                }
                else
                {
                    this.iPISPField = value;
                    this.OnPropertyChanged("IPISP");
                }
            }
        }

        /// <summary>
        /// Tax Base in Percentage
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 82)]
        public string TAXBS
        {
            get
            {
                return this.tAXBSField;
            }
            set
            {
                if ((this.tAXBSField != null))
                {
                    if ((tAXBSField.Equals(value) != true))
                    {
                        this.tAXBSField = value;
                        this.OnPropertyChanged("TAXBS");
                    }
                }
                else
                {
                    this.tAXBSField = value;
                    this.OnPropertyChanged("TAXBS");
                }
            }
        }

        /// <summary>
        /// Profession
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 83)]
        public string PROFS
        {
            get
            {
                return this.pROFSField;
            }
            set
            {
                if ((this.pROFSField != null))
                {
                    if ((pROFSField.Equals(value) != true))
                    {
                        this.pROFSField = value;
                        this.OnPropertyChanged("PROFS");
                    }
                }
                else
                {
                    this.pROFSField = value;
                    this.OnPropertyChanged("PROFS");
                }
            }
        }

        /// <summary>
        /// Shipment: statistics group, transportation service agent
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 84)]
        public string STGDL
        {
            get
            {
                return this.sTGDLField;
            }
            set
            {
                if ((this.sTGDLField != null))
                {
                    if ((sTGDLField.Equals(value) != true))
                    {
                        this.sTGDLField = value;
                        this.OnPropertyChanged("STGDL");
                    }
                }
                else
                {
                    this.sTGDLField = value;
                    this.OnPropertyChanged("STGDL");
                }
            }
        }

        /// <summary>
        /// External manufacturer code name or number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 85)]
        public string EMNFR
        {
            get
            {
                return this.eMNFRField;
            }
            set
            {
                if ((this.eMNFRField != null))
                {
                    if ((eMNFRField.Equals(value) != true))
                    {
                        this.eMNFRField = value;
                        this.OnPropertyChanged("EMNFR");
                    }
                }
                else
                {
                    this.eMNFRField = value;
                    this.OnPropertyChanged("EMNFR");
                }
            }
        }

        /// <summary>
        /// Central deletion block for master record
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 86)]
        public string NODEL
        {
            get
            {
                return this.nODELField;
            }
            set
            {
                if ((this.nODELField != null))
                {
                    if ((nODELField.Equals(value) != true))
                    {
                        this.nODELField = value;
                        this.OnPropertyChanged("NODEL");
                    }
                }
                else
                {
                    this.nODELField = value;
                    this.OnPropertyChanged("NODEL");
                }
            }
        }

        /// <summary>
        /// Carrier confirmation is expected
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 87)]
        public string CARRIER_CONF
        {
            get
            {
                return this.cARRIER_CONFField;
            }
            set
            {
                if ((this.cARRIER_CONFField != null))
                {
                    if ((cARRIER_CONFField.Equals(value) != true))
                    {
                        this.cARRIER_CONFField = value;
                        this.OnPropertyChanged("CARRIER_CONF");
                    }
                }
                else
                {
                    this.cARRIER_CONFField = value;
                    this.OnPropertyChanged("CARRIER_CONF");
                }
            }
        }

        /// <summary>
        /// Transportation Chain
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 88)]
        public string TRANSPORT_CHAIN
        {
            get
            {
                return this.tRANSPORT_CHAINField;
            }
            set
            {
                if ((this.tRANSPORT_CHAINField != null))
                {
                    if ((tRANSPORT_CHAINField.Equals(value) != true))
                    {
                        this.tRANSPORT_CHAINField = value;
                        this.OnPropertyChanged("TRANSPORT_CHAIN");
                    }
                }
                else
                {
                    this.tRANSPORT_CHAINField = value;
                    this.OnPropertyChanged("TRANSPORT_CHAIN");
                }
            }
        }

        /// <summary>
        /// Staging Time in Days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 89)]
        public string STAGING_TIME
        {
            get
            {
                return this.sTAGING_TIMEField;
            }
            set
            {
                if ((this.sTAGING_TIMEField != null))
                {
                    if ((sTAGING_TIMEField.Equals(value) != true))
                    {
                        this.sTAGING_TIMEField = value;
                        this.OnPropertyChanged("STAGING_TIME");
                    }
                }
                else
                {
                    this.sTAGING_TIMEField = value;
                    this.OnPropertyChanged("STAGING_TIME");
                }
            }
        }

        /// <summary>
        /// Cross Docking: Relevant for Collective Numbering
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 90)]
        public string SUBMI_RELEVANT
        {
            get
            {
                return this.sUBMI_RELEVANTField;
            }
            set
            {
                if ((this.sUBMI_RELEVANTField != null))
                {
                    if ((sUBMI_RELEVANTField.Equals(value) != true))
                    {
                        this.sUBMI_RELEVANTField = value;
                        this.OnPropertyChanged("SUBMI_RELEVANT");
                    }
                }
                else
                {
                    this.sUBMI_RELEVANTField = value;
                    this.OnPropertyChanged("SUBMI_RELEVANT");
                }
            }
        }

        /// <summary>
        /// Scheduling Procedure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 91)]
        public string SCHEDULING_TYPE
        {
            get
            {
                return this.sCHEDULING_TYPEField;
            }
            set
            {
                if ((this.sCHEDULING_TYPEField != null))
                {
                    if ((sCHEDULING_TYPEField.Equals(value) != true))
                    {
                        this.sCHEDULING_TYPEField = value;
                        this.OnPropertyChanged("SCHEDULING_TYPE");
                    }
                }
                else
                {
                    this.sCHEDULING_TYPEField = value;
                    this.OnPropertyChanged("SCHEDULING_TYPE");
                }
            }
        }

        /// <summary>
        /// Segment for CCR Vendor Data
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 92)]
        public CREMAS05IDOCE1LFA1ME1LFA1B E1LFA1B
        {
            get
            {
                return this.e1LFA1BField;
            }
            set
            {
                if ((this.e1LFA1BField != null))
                {
                    if ((e1LFA1BField.Equals(value) != true))
                    {
                        this.e1LFA1BField = value;
                        this.OnPropertyChanged("E1LFA1B");
                    }
                }
                else
                {
                    this.e1LFA1BField = value;
                    this.OnPropertyChanged("E1LFA1B");
                }
            }
        }

        /// <summary>
        /// Segment for standard vendor data -  enhancement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 93)]
        public CREMAS05IDOCE1LFA1ME1LFA1A E1LFA1A
        {
            get
            {
                return this.e1LFA1AField;
            }
            set
            {
                if ((this.e1LFA1AField != null))
                {
                    if ((e1LFA1AField.Equals(value) != true))
                    {
                        this.e1LFA1AField = value;
                        this.OnPropertyChanged("E1LFA1A");
                    }
                }
                else
                {
                    this.e1LFA1AField = value;
                    this.OnPropertyChanged("E1LFA1A");
                }
            }
        }

        /// <summary>
        /// Vendor Master Basic Data: Texts, Header
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFA1H", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 94)]
        public List<CREMAS05IDOCE1LFA1ME1LFA1H> E1LFA1H
        {
            get
            {
                return this.e1LFA1HField;
            }
            set
            {
                if ((this.e1LFA1HField != null))
                {
                    if ((e1LFA1HField.Equals(value) != true))
                    {
                        this.e1LFA1HField = value;
                        this.OnPropertyChanged("E1LFA1H");
                    }
                }
                else
                {
                    this.e1LFA1HField = value;
                    this.OnPropertyChanged("E1LFA1H");
                }
            }
        }

        /// <summary>
        /// Segment for company code data for vendors SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFB1M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 95)]
        public List<CREMAS05IDOCE1LFA1ME1LFB1M> E1LFB1M
        {
            get
            {
                return this.e1LFB1MField;
            }
            set
            {
                if ((this.e1LFB1MField != null))
                {
                    if ((e1LFB1MField.Equals(value) != true))
                    {
                        this.e1LFB1MField = value;
                        this.OnPropertyChanged("E1LFB1M");
                    }
                }
                else
                {
                    this.e1LFB1MField = value;
                    this.OnPropertyChanged("E1LFB1M");
                }
            }
        }

        /// <summary>
        /// Segment for purchasing organization data vendor SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFM1M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 96)]
        public List<CREMAS05IDOCE1LFA1ME1LFM1M> E1LFM1M
        {
            get
            {
                return this.e1LFM1MField;
            }
            set
            {
                if ((this.e1LFM1MField != null))
                {
                    if ((e1LFM1MField.Equals(value) != true))
                    {
                        this.e1LFM1MField = value;
                        this.OnPropertyChanged("E1LFM1M");
                    }
                }
                else
                {
                    this.e1LFM1MField = value;
                    this.OnPropertyChanged("E1LFM1M");
                }
            }
        }

        /// <summary>
        /// Segment for bank details of vendor SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFBKM", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 97)]
        public List<CREMAS05IDOCE1LFA1ME1LFBKM> E1LFBKM
        {
            get
            {
                return this.e1LFBKMField;
            }
            set
            {
                if ((this.e1LFBKMField != null))
                {
                    if ((e1LFBKMField.Equals(value) != true))
                    {
                        this.e1LFBKMField = value;
                        this.OnPropertyChanged("E1LFBKM");
                    }
                }
                else
                {
                    this.e1LFBKMField = value;
                    this.OnPropertyChanged("E1LFBKM");
                }
            }
        }

        /// <summary>
        /// Segment for EU tax numbers vendors
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFASM", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 98)]
        public List<CREMAS05IDOCE1LFA1ME1LFASM> E1LFASM
        {
            get
            {
                return this.e1LFASMField;
            }
            set
            {
                if ((this.e1LFASMField != null))
                {
                    if ((e1LFASMField.Equals(value) != true))
                    {
                        this.e1LFASMField = value;
                        this.OnPropertyChanged("E1LFASM");
                    }
                }
                else
                {
                    this.e1LFASMField = value;
                    this.OnPropertyChanged("E1LFASM");
                }
            }
        }

        /// <summary>
        /// Segment for vendor sub-range MMS SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1WYT1M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 99)]
        public List<CREMAS05IDOCE1LFA1ME1WYT1M> E1WYT1M
        {
            get
            {
                return this.e1WYT1MField;
            }
            set
            {
                if ((this.e1WYT1MField != null))
                {
                    if ((e1WYT1MField.Equals(value) != true))
                    {
                        this.e1WYT1MField = value;
                        this.OnPropertyChanged("E1WYT1M");
                    }
                }
                else
                {
                    this.e1WYT1MField = value;
                    this.OnPropertyChanged("E1WYT1M");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Segment for CCR Vendor Data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFA1B : System.ComponentModel.INotifyPropertyChanged
    {

        private string dUNSField;

        private string dUNS4Field;

        private string cAGEField;

        private string rENDATEField;

        private string rEG_INDField;

        private string rEG_STATField;

        private CREMAS05IDOCE1LFA1ME1LFA1BSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Character field of 9 digits
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string DUNS
        {
            get
            {
                return this.dUNSField;
            }
            set
            {
                if ((this.dUNSField != null))
                {
                    if ((dUNSField.Equals(value) != true))
                    {
                        this.dUNSField = value;
                        this.OnPropertyChanged("DUNS");
                    }
                }
                else
                {
                    this.dUNSField = value;
                    this.OnPropertyChanged("DUNS");
                }
            }
        }

        /// <summary>
        /// Not More Closely Defined Area, Possibly Used for Patchlevels
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string DUNS4
        {
            get
            {
                return this.dUNS4Field;
            }
            set
            {
                if ((this.dUNS4Field != null))
                {
                    if ((dUNS4Field.Equals(value) != true))
                    {
                        this.dUNS4Field = value;
                        this.OnPropertyChanged("DUNS4");
                    }
                }
                else
                {
                    this.dUNS4Field = value;
                    this.OnPropertyChanged("DUNS4");
                }
            }
        }

        /// <summary>
        /// R/2 table
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string CAGE
        {
            get
            {
                return this.cAGEField;
            }
            set
            {
                if ((this.cAGEField != null))
                {
                    if ((cAGEField.Equals(value) != true))
                    {
                        this.cAGEField = value;
                        this.OnPropertyChanged("CAGE");
                    }
                }
                else
                {
                    this.cAGEField = value;
                    this.OnPropertyChanged("CAGE");
                }
            }
        }

        /// <summary>
        /// Date (batch input)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string RENDATE
        {
            get
            {
                return this.rENDATEField;
            }
            set
            {
                if ((this.rENDATEField != null))
                {
                    if ((rENDATEField.Equals(value) != true))
                    {
                        this.rENDATEField = value;
                        this.OnPropertyChanged("RENDATE");
                    }
                }
                else
                {
                    this.rENDATEField = value;
                    this.OnPropertyChanged("RENDATE");
                }
            }
        }

        /// <summary>
        /// Single-Character Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string REG_IND
        {
            get
            {
                return this.rEG_INDField;
            }
            set
            {
                if ((this.rEG_INDField != null))
                {
                    if ((rEG_INDField.Equals(value) != true))
                    {
                        this.rEG_INDField = value;
                        this.OnPropertyChanged("REG_IND");
                    }
                }
                else
                {
                    this.rEG_INDField = value;
                    this.OnPropertyChanged("REG_IND");
                }
            }
        }

        /// <summary>
        /// Single-Character Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string REG_STAT
        {
            get
            {
                return this.rEG_STATField;
            }
            set
            {
                if ((this.rEG_STATField != null))
                {
                    if ((rEG_STATField.Equals(value) != true))
                    {
                        this.rEG_STATField = value;
                        this.OnPropertyChanged("REG_STAT");
                    }
                }
                else
                {
                    this.rEG_STATField = value;
                    this.OnPropertyChanged("REG_STAT");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFA1BSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFA1B));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1B object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFA1B object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1B object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1B obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1B);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1B obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1B Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFA1B)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1B object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFA1B object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1B object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFA1B obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1B);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1B obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1B obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1B LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1B LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFA1BSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for standard vendor data -  enhancement
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFA1A : System.ComponentModel.INotifyPropertyChanged
    {

        private string lFURLField;

        private string j_1KFREPREField;

        private string j_1KFTBUSField;

        private string j_1KFTINDField;

        private string qSSYSDATField;

        private string pODKZBField;

        private string fISKUField;

        private string sTENRField;

        private string pSOISField;

        private string pSON1Field;

        private string pSON2Field;

        private string pSON3Field;

        private string pSOVNField;

        private string pSOTLField;

        private CREMAS05IDOCE1LFA1ME1LFA1ASEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Uniform Resource Locator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string LFURL
        {
            get
            {
                return this.lFURLField;
            }
            set
            {
                if ((this.lFURLField != null))
                {
                    if ((lFURLField.Equals(value) != true))
                    {
                        this.lFURLField = value;
                        this.OnPropertyChanged("LFURL");
                    }
                }
                else
                {
                    this.lFURLField = value;
                    this.OnPropertyChanged("LFURL");
                }
            }
        }

        /// <summary>
        /// Name of Representative
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string J_1KFREPRE
        {
            get
            {
                return this.j_1KFREPREField;
            }
            set
            {
                if ((this.j_1KFREPREField != null))
                {
                    if ((j_1KFREPREField.Equals(value) != true))
                    {
                        this.j_1KFREPREField = value;
                        this.OnPropertyChanged("J_1KFREPRE");
                    }
                }
                else
                {
                    this.j_1KFREPREField = value;
                    this.OnPropertyChanged("J_1KFREPRE");
                }
            }
        }

        /// <summary>
        /// Type of Business
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string J_1KFTBUS
        {
            get
            {
                return this.j_1KFTBUSField;
            }
            set
            {
                if ((this.j_1KFTBUSField != null))
                {
                    if ((j_1KFTBUSField.Equals(value) != true))
                    {
                        this.j_1KFTBUSField = value;
                        this.OnPropertyChanged("J_1KFTBUS");
                    }
                }
                else
                {
                    this.j_1KFTBUSField = value;
                    this.OnPropertyChanged("J_1KFTBUS");
                }
            }
        }

        /// <summary>
        /// Type of Industry
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string J_1KFTIND
        {
            get
            {
                return this.j_1KFTINDField;
            }
            set
            {
                if ((this.j_1KFTINDField != null))
                {
                    if ((j_1KFTINDField.Equals(value) != true))
                    {
                        this.j_1KFTINDField = value;
                        this.OnPropertyChanged("J_1KFTIND");
                    }
                }
                else
                {
                    this.j_1KFTINDField = value;
                    this.OnPropertyChanged("J_1KFTIND");
                }
            }
        }

        /// <summary>
        /// Validity date of certification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string QSSYSDAT
        {
            get
            {
                return this.qSSYSDATField;
            }
            set
            {
                if ((this.qSSYSDATField != null))
                {
                    if ((qSSYSDATField.Equals(value) != true))
                    {
                        this.qSSYSDATField = value;
                        this.OnPropertyChanged("QSSYSDAT");
                    }
                }
                else
                {
                    this.qSSYSDATField = value;
                    this.OnPropertyChanged("QSSYSDAT");
                }
            }
        }

        /// <summary>
        /// Vendor indicator relevant for proof of delivery
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string PODKZB
        {
            get
            {
                return this.pODKZBField;
            }
            set
            {
                if ((this.pODKZBField != null))
                {
                    if ((pODKZBField.Equals(value) != true))
                    {
                        this.pODKZBField = value;
                        this.OnPropertyChanged("PODKZB");
                    }
                }
                else
                {
                    this.pODKZBField = value;
                    this.OnPropertyChanged("PODKZB");
                }
            }
        }

        /// <summary>
        /// Account Number of Master Record of Tax Office Responsible
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string FISKU
        {
            get
            {
                return this.fISKUField;
            }
            set
            {
                if ((this.fISKUField != null))
                {
                    if ((fISKUField.Equals(value) != true))
                    {
                        this.fISKUField = value;
                        this.OnPropertyChanged("FISKU");
                    }
                }
                else
                {
                    this.fISKUField = value;
                    this.OnPropertyChanged("FISKU");
                }
            }
        }

        /// <summary>
        /// Tax Number at Responsible Tax Authority
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string STENR
        {
            get
            {
                return this.sTENRField;
            }
            set
            {
                if ((this.sTENRField != null))
                {
                    if ((sTENRField.Equals(value) != true))
                    {
                        this.sTENRField = value;
                        this.OnPropertyChanged("STENR");
                    }
                }
                else
                {
                    this.sTENRField = value;
                    this.OnPropertyChanged("STENR");
                }
            }
        }

        /// <summary>
        /// Subledger acct preprocessing procedure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string PSOIS
        {
            get
            {
                return this.pSOISField;
            }
            set
            {
                if ((this.pSOISField != null))
                {
                    if ((pSOISField.Equals(value) != true))
                    {
                        this.pSOISField = value;
                        this.OnPropertyChanged("PSOIS");
                    }
                }
                else
                {
                    this.pSOISField = value;
                    this.OnPropertyChanged("PSOIS");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string PSON1
        {
            get
            {
                return this.pSON1Field;
            }
            set
            {
                if ((this.pSON1Field != null))
                {
                    if ((pSON1Field.Equals(value) != true))
                    {
                        this.pSON1Field = value;
                        this.OnPropertyChanged("PSON1");
                    }
                }
                else
                {
                    this.pSON1Field = value;
                    this.OnPropertyChanged("PSON1");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string PSON2
        {
            get
            {
                return this.pSON2Field;
            }
            set
            {
                if ((this.pSON2Field != null))
                {
                    if ((pSON2Field.Equals(value) != true))
                    {
                        this.pSON2Field = value;
                        this.OnPropertyChanged("PSON2");
                    }
                }
                else
                {
                    this.pSON2Field = value;
                    this.OnPropertyChanged("PSON2");
                }
            }
        }

        /// <summary>
        /// Name 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string PSON3
        {
            get
            {
                return this.pSON3Field;
            }
            set
            {
                if ((this.pSON3Field != null))
                {
                    if ((pSON3Field.Equals(value) != true))
                    {
                        this.pSON3Field = value;
                        this.OnPropertyChanged("PSON3");
                    }
                }
                else
                {
                    this.pSON3Field = value;
                    this.OnPropertyChanged("PSON3");
                }
            }
        }

        /// <summary>
        /// First Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string PSOVN
        {
            get
            {
                return this.pSOVNField;
            }
            set
            {
                if ((this.pSOVNField != null))
                {
                    if ((pSOVNField.Equals(value) != true))
                    {
                        this.pSOVNField = value;
                        this.OnPropertyChanged("PSOVN");
                    }
                }
                else
                {
                    this.pSOVNField = value;
                    this.OnPropertyChanged("PSOVN");
                }
            }
        }

        /// <summary>
        /// Title
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string PSOTL
        {
            get
            {
                return this.pSOTLField;
            }
            set
            {
                if ((this.pSOTLField != null))
                {
                    if ((pSOTLField.Equals(value) != true))
                    {
                        this.pSOTLField = value;
                        this.OnPropertyChanged("PSOTL");
                    }
                }
                else
                {
                    this.pSOTLField = value;
                    this.OnPropertyChanged("PSOTL");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFA1ASEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFA1A));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1A object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFA1A object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1A object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1A obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1A);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1A obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1A Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFA1A)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1A object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFA1A object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1A object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFA1A obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1A);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1A obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1A obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1A LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1A LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFA1ASEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Vendor Master Basic Data: Texts, Header
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFA1H : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDOBJECTField;

        private string tDNAMEField;

        private string tDIDField;

        private string tDSPRASField;

        private string tDTEXTTYPEField;

        private string tDSPRASISOField;

        private List<CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L> e1LFA1LField;

        private CREMAS05IDOCE1LFA1ME1LFA1HSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1LFA1H class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1LFA1H()
        {
            this.e1LFA1LField = new List<CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Texts: Application Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDOBJECT
        {
            get
            {
                return this.tDOBJECTField;
            }
            set
            {
                if ((this.tDOBJECTField != null))
                {
                    if ((tDOBJECTField.Equals(value) != true))
                    {
                        this.tDOBJECTField = value;
                        this.OnPropertyChanged("TDOBJECT");
                    }
                }
                else
                {
                    this.tDOBJECTField = value;
                    this.OnPropertyChanged("TDOBJECT");
                }
            }
        }

        /// <summary>
        /// Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDNAME
        {
            get
            {
                return this.tDNAMEField;
            }
            set
            {
                if ((this.tDNAMEField != null))
                {
                    if ((tDNAMEField.Equals(value) != true))
                    {
                        this.tDNAMEField = value;
                        this.OnPropertyChanged("TDNAME");
                    }
                }
                else
                {
                    this.tDNAMEField = value;
                    this.OnPropertyChanged("TDNAME");
                }
            }
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string TDSPRAS
        {
            get
            {
                return this.tDSPRASField;
            }
            set
            {
                if ((this.tDSPRASField != null))
                {
                    if ((tDSPRASField.Equals(value) != true))
                    {
                        this.tDSPRASField = value;
                        this.OnPropertyChanged("TDSPRAS");
                    }
                }
                else
                {
                    this.tDSPRASField = value;
                    this.OnPropertyChanged("TDSPRAS");
                }
            }
        }

        /// <summary>
        /// SAPscript: Format of Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string TDTEXTTYPE
        {
            get
            {
                return this.tDTEXTTYPEField;
            }
            set
            {
                if ((this.tDTEXTTYPEField != null))
                {
                    if ((tDTEXTTYPEField.Equals(value) != true))
                    {
                        this.tDTEXTTYPEField = value;
                        this.OnPropertyChanged("TDTEXTTYPE");
                    }
                }
                else
                {
                    this.tDTEXTTYPEField = value;
                    this.OnPropertyChanged("TDTEXTTYPE");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string TDSPRASISO
        {
            get
            {
                return this.tDSPRASISOField;
            }
            set
            {
                if ((this.tDSPRASISOField != null))
                {
                    if ((tDSPRASISOField.Equals(value) != true))
                    {
                        this.tDSPRASISOField = value;
                        this.OnPropertyChanged("TDSPRASISO");
                    }
                }
                else
                {
                    this.tDSPRASISOField = value;
                    this.OnPropertyChanged("TDSPRASISO");
                }
            }
        }

        /// <summary>
        /// Vendor Master Basic Data: Text Lines
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFA1L", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L> E1LFA1L
        {
            get
            {
                return this.e1LFA1LField;
            }
            set
            {
                if ((this.e1LFA1LField != null))
                {
                    if ((e1LFA1LField.Equals(value) != true))
                    {
                        this.e1LFA1LField = value;
                        this.OnPropertyChanged("E1LFA1L");
                    }
                }
                else
                {
                    this.e1LFA1LField = value;
                    this.OnPropertyChanged("E1LFA1L");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFA1HSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFA1H));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1H object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFA1H object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1H);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1H obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1H Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFA1H)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1H object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFA1H object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFA1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1H);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1H obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1H obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1H LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1H LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Vendor Master Basic Data: Text Lines
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDFORMATField;

        private string tDLINEField;

        private CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1LSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        /// <summary>
        /// Text Line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1LSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1L LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFA1HE1LFA1LSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFA1HSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for company code data for vendors SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFB1M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string bUKRSField;

        private string eRDATField;

        private string eRNAMField;

        private string sPERRField;

        private string lOEVMField;

        private string zUAWAField;

        private string aKONTField;

        private string bEGRUField;

        private string vZSKZField;

        private string zWELSField;

        private string xVERRField;

        private string zAHLSField;

        private string zTERMField;

        private string eIKTOField;

        private string zSABEField;

        private string kVERMField;

        private string fDGRVField;

        private string bUSABField;

        private string lNRZEField;

        private string lNRZBField;

        private string zINDTField;

        private string zINRTField;

        private string dATLZField;

        private string xDEZVField;

        private string wEBTRField;

        private string kULTGField;

        private string rEPRFField;

        private string tOGRUField;

        private string hBKIDField;

        private string xPOREField;

        private string qSZNRField;

        private string qSZDTField;

        private string qSSKZField;

        private string bLNKZField;

        private string mINDKField;

        private string aLTKNField;

        private string zGRUPField;

        private string mGRUPField;

        private string uZAWEField;

        private string qSRECField;

        private string qSBGRField;

        private string qLANDField;

        private string xEDIPField;

        private string fRGRPField;

        private string tLFXSField;

        private string iNTADField;

        private string gUZTEField;

        private string gRICDField;

        private string gRIDTField;

        private string xAUSZField;

        private string cERDTField;

        private string tOGRRField;

        private string pERNRField;

        private string nODELField;

        private string tLFNSField;

        private string gMVKZKField;

        private string pREPAY_RELEVANTField;

        private string aSSIGN_TESTField;

        private List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM> e1LFBWMField;

        private List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M> e1LFB5MField;

        private List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H> e1LFB1HField;

        private CREMAS05IDOCE1LFA1ME1LFB1MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1LFB1M class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1LFB1M()
        {
            this.e1LFB1HField = new List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H>();
            this.e1LFB5MField = new List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M>();
            this.e1LFBWMField = new List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string BUKRS
        {
            get
            {
                return this.bUKRSField;
            }
            set
            {
                if ((this.bUKRSField != null))
                {
                    if ((bUKRSField.Equals(value) != true))
                    {
                        this.bUKRSField = value;
                        this.OnPropertyChanged("BUKRS");
                    }
                }
                else
                {
                    this.bUKRSField = value;
                    this.OnPropertyChanged("BUKRS");
                }
            }
        }

        /// <summary>
        /// Date on which the Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Posting block for company code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string SPERR
        {
            get
            {
                return this.sPERRField;
            }
            set
            {
                if ((this.sPERRField != null))
                {
                    if ((sPERRField.Equals(value) != true))
                    {
                        this.sPERRField = value;
                        this.OnPropertyChanged("SPERR");
                    }
                }
                else
                {
                    this.sPERRField = value;
                    this.OnPropertyChanged("SPERR");
                }
            }
        }

        /// <summary>
        /// Deletion Flag for Master Record (Company Code Level)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string LOEVM
        {
            get
            {
                return this.lOEVMField;
            }
            set
            {
                if ((this.lOEVMField != null))
                {
                    if ((lOEVMField.Equals(value) != true))
                    {
                        this.lOEVMField = value;
                        this.OnPropertyChanged("LOEVM");
                    }
                }
                else
                {
                    this.lOEVMField = value;
                    this.OnPropertyChanged("LOEVM");
                }
            }
        }

        /// <summary>
        /// Key for sorting according to assignment numbers
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string ZUAWA
        {
            get
            {
                return this.zUAWAField;
            }
            set
            {
                if ((this.zUAWAField != null))
                {
                    if ((zUAWAField.Equals(value) != true))
                    {
                        this.zUAWAField = value;
                        this.OnPropertyChanged("ZUAWA");
                    }
                }
                else
                {
                    this.zUAWAField = value;
                    this.OnPropertyChanged("ZUAWA");
                }
            }
        }

        /// <summary>
        /// Reconciliation Account in General Ledger
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string AKONT
        {
            get
            {
                return this.aKONTField;
            }
            set
            {
                if ((this.aKONTField != null))
                {
                    if ((aKONTField.Equals(value) != true))
                    {
                        this.aKONTField = value;
                        this.OnPropertyChanged("AKONT");
                    }
                }
                else
                {
                    this.aKONTField = value;
                    this.OnPropertyChanged("AKONT");
                }
            }
        }

        /// <summary>
        /// Authorization Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string BEGRU
        {
            get
            {
                return this.bEGRUField;
            }
            set
            {
                if ((this.bEGRUField != null))
                {
                    if ((bEGRUField.Equals(value) != true))
                    {
                        this.bEGRUField = value;
                        this.OnPropertyChanged("BEGRU");
                    }
                }
                else
                {
                    this.bEGRUField = value;
                    this.OnPropertyChanged("BEGRU");
                }
            }
        }

        /// <summary>
        /// Interest calculation indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string VZSKZ
        {
            get
            {
                return this.vZSKZField;
            }
            set
            {
                if ((this.vZSKZField != null))
                {
                    if ((vZSKZField.Equals(value) != true))
                    {
                        this.vZSKZField = value;
                        this.OnPropertyChanged("VZSKZ");
                    }
                }
                else
                {
                    this.vZSKZField = value;
                    this.OnPropertyChanged("VZSKZ");
                }
            }
        }

        /// <summary>
        /// List of the Payment Methods to be Considered
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string ZWELS
        {
            get
            {
                return this.zWELSField;
            }
            set
            {
                if ((this.zWELSField != null))
                {
                    if ((zWELSField.Equals(value) != true))
                    {
                        this.zWELSField = value;
                        this.OnPropertyChanged("ZWELS");
                    }
                }
                else
                {
                    this.zWELSField = value;
                    this.OnPropertyChanged("ZWELS");
                }
            }
        }

        /// <summary>
        /// Indicator: Clearing between customer and vendor?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string XVERR
        {
            get
            {
                return this.xVERRField;
            }
            set
            {
                if ((this.xVERRField != null))
                {
                    if ((xVERRField.Equals(value) != true))
                    {
                        this.xVERRField = value;
                        this.OnPropertyChanged("XVERR");
                    }
                }
                else
                {
                    this.xVERRField = value;
                    this.OnPropertyChanged("XVERR");
                }
            }
        }

        /// <summary>
        /// Block key for payment
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string ZAHLS
        {
            get
            {
                return this.zAHLSField;
            }
            set
            {
                if ((this.zAHLSField != null))
                {
                    if ((zAHLSField.Equals(value) != true))
                    {
                        this.zAHLSField = value;
                        this.OnPropertyChanged("ZAHLS");
                    }
                }
                else
                {
                    this.zAHLSField = value;
                    this.OnPropertyChanged("ZAHLS");
                }
            }
        }

        /// <summary>
        /// Terms of Payment Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string ZTERM
        {
            get
            {
                return this.zTERMField;
            }
            set
            {
                if ((this.zTERMField != null))
                {
                    if ((zTERMField.Equals(value) != true))
                    {
                        this.zTERMField = value;
                        this.OnPropertyChanged("ZTERM");
                    }
                }
                else
                {
                    this.zTERMField = value;
                    this.OnPropertyChanged("ZTERM");
                }
            }
        }

        /// <summary>
        /// Shipper's (Our) Account Number at the Customer or Vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string EIKTO
        {
            get
            {
                return this.eIKTOField;
            }
            set
            {
                if ((this.eIKTOField != null))
                {
                    if ((eIKTOField.Equals(value) != true))
                    {
                        this.eIKTOField = value;
                        this.OnPropertyChanged("EIKTO");
                    }
                }
                else
                {
                    this.eIKTOField = value;
                    this.OnPropertyChanged("EIKTO");
                }
            }
        }

        /// <summary>
        /// Clerk at vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string ZSABE
        {
            get
            {
                return this.zSABEField;
            }
            set
            {
                if ((this.zSABEField != null))
                {
                    if ((zSABEField.Equals(value) != true))
                    {
                        this.zSABEField = value;
                        this.OnPropertyChanged("ZSABE");
                    }
                }
                else
                {
                    this.zSABEField = value;
                    this.OnPropertyChanged("ZSABE");
                }
            }
        }

        /// <summary>
        /// Memo
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string KVERM
        {
            get
            {
                return this.kVERMField;
            }
            set
            {
                if ((this.kVERMField != null))
                {
                    if ((kVERMField.Equals(value) != true))
                    {
                        this.kVERMField = value;
                        this.OnPropertyChanged("KVERM");
                    }
                }
                else
                {
                    this.kVERMField = value;
                    this.OnPropertyChanged("KVERM");
                }
            }
        }

        /// <summary>
        /// Planning group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string FDGRV
        {
            get
            {
                return this.fDGRVField;
            }
            set
            {
                if ((this.fDGRVField != null))
                {
                    if ((fDGRVField.Equals(value) != true))
                    {
                        this.fDGRVField = value;
                        this.OnPropertyChanged("FDGRV");
                    }
                }
                else
                {
                    this.fDGRVField = value;
                    this.OnPropertyChanged("FDGRV");
                }
            }
        }

        /// <summary>
        /// Accounting clerk
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string BUSAB
        {
            get
            {
                return this.bUSABField;
            }
            set
            {
                if ((this.bUSABField != null))
                {
                    if ((bUSABField.Equals(value) != true))
                    {
                        this.bUSABField = value;
                        this.OnPropertyChanged("BUSAB");
                    }
                }
                else
                {
                    this.bUSABField = value;
                    this.OnPropertyChanged("BUSAB");
                }
            }
        }

        /// <summary>
        /// Head office account number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string LNRZE
        {
            get
            {
                return this.lNRZEField;
            }
            set
            {
                if ((this.lNRZEField != null))
                {
                    if ((lNRZEField.Equals(value) != true))
                    {
                        this.lNRZEField = value;
                        this.OnPropertyChanged("LNRZE");
                    }
                }
                else
                {
                    this.lNRZEField = value;
                    this.OnPropertyChanged("LNRZE");
                }
            }
        }

        /// <summary>
        /// Account number of the alternative payee
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string LNRZB
        {
            get
            {
                return this.lNRZBField;
            }
            set
            {
                if ((this.lNRZBField != null))
                {
                    if ((lNRZBField.Equals(value) != true))
                    {
                        this.lNRZBField = value;
                        this.OnPropertyChanged("LNRZB");
                    }
                }
                else
                {
                    this.lNRZBField = value;
                    this.OnPropertyChanged("LNRZB");
                }
            }
        }

        /// <summary>
        /// Key date of the last interest calculation
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string ZINDT
        {
            get
            {
                return this.zINDTField;
            }
            set
            {
                if ((this.zINDTField != null))
                {
                    if ((zINDTField.Equals(value) != true))
                    {
                        this.zINDTField = value;
                        this.OnPropertyChanged("ZINDT");
                    }
                }
                else
                {
                    this.zINDTField = value;
                    this.OnPropertyChanged("ZINDT");
                }
            }
        }

        /// <summary>
        /// Interest calculation frequency in months
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string ZINRT
        {
            get
            {
                return this.zINRTField;
            }
            set
            {
                if ((this.zINRTField != null))
                {
                    if ((zINRTField.Equals(value) != true))
                    {
                        this.zINRTField = value;
                        this.OnPropertyChanged("ZINRT");
                    }
                }
                else
                {
                    this.zINRTField = value;
                    this.OnPropertyChanged("ZINRT");
                }
            }
        }

        /// <summary>
        /// Date of the last interest calculation run
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string DATLZ
        {
            get
            {
                return this.dATLZField;
            }
            set
            {
                if ((this.dATLZField != null))
                {
                    if ((dATLZField.Equals(value) != true))
                    {
                        this.dATLZField = value;
                        this.OnPropertyChanged("DATLZ");
                    }
                }
                else
                {
                    this.dATLZField = value;
                    this.OnPropertyChanged("DATLZ");
                }
            }
        }

        /// <summary>
        /// Indicator: Local processing?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string XDEZV
        {
            get
            {
                return this.xDEZVField;
            }
            set
            {
                if ((this.xDEZVField != null))
                {
                    if ((xDEZVField.Equals(value) != true))
                    {
                        this.xDEZVField = value;
                        this.OnPropertyChanged("XDEZV");
                    }
                }
                else
                {
                    this.xDEZVField = value;
                    this.OnPropertyChanged("XDEZV");
                }
            }
        }

        /// <summary>
        /// Bill of exchange limit (in local currency)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string WEBTR
        {
            get
            {
                return this.wEBTRField;
            }
            set
            {
                if ((this.wEBTRField != null))
                {
                    if ((wEBTRField.Equals(value) != true))
                    {
                        this.wEBTRField = value;
                        this.OnPropertyChanged("WEBTR");
                    }
                }
                else
                {
                    this.wEBTRField = value;
                    this.OnPropertyChanged("WEBTR");
                }
            }
        }

        /// <summary>
        /// Probable time until check is paid
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string KULTG
        {
            get
            {
                return this.kULTGField;
            }
            set
            {
                if ((this.kULTGField != null))
                {
                    if ((kULTGField.Equals(value) != true))
                    {
                        this.kULTGField = value;
                        this.OnPropertyChanged("KULTG");
                    }
                }
                else
                {
                    this.kULTGField = value;
                    this.OnPropertyChanged("KULTG");
                }
            }
        }

        /// <summary>
        /// Check Flag for Double Invoices or Credit Memos
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string REPRF
        {
            get
            {
                return this.rEPRFField;
            }
            set
            {
                if ((this.rEPRFField != null))
                {
                    if ((rEPRFField.Equals(value) != true))
                    {
                        this.rEPRFField = value;
                        this.OnPropertyChanged("REPRF");
                    }
                }
                else
                {
                    this.rEPRFField = value;
                    this.OnPropertyChanged("REPRF");
                }
            }
        }

        /// <summary>
        /// Tolerance group for the business partner/G/L account
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string TOGRU
        {
            get
            {
                return this.tOGRUField;
            }
            set
            {
                if ((this.tOGRUField != null))
                {
                    if ((tOGRUField.Equals(value) != true))
                    {
                        this.tOGRUField = value;
                        this.OnPropertyChanged("TOGRU");
                    }
                }
                else
                {
                    this.tOGRUField = value;
                    this.OnPropertyChanged("TOGRU");
                }
            }
        }

        /// <summary>
        /// Short Key for a House Bank
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string HBKID
        {
            get
            {
                return this.hBKIDField;
            }
            set
            {
                if ((this.hBKIDField != null))
                {
                    if ((hBKIDField.Equals(value) != true))
                    {
                        this.hBKIDField = value;
                        this.OnPropertyChanged("HBKID");
                    }
                }
                else
                {
                    this.hBKIDField = value;
                    this.OnPropertyChanged("HBKID");
                }
            }
        }

        /// <summary>
        /// Indicator: Pay all items separately ?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string XPORE
        {
            get
            {
                return this.xPOREField;
            }
            set
            {
                if ((this.xPOREField != null))
                {
                    if ((xPOREField.Equals(value) != true))
                    {
                        this.xPOREField = value;
                        this.OnPropertyChanged("XPORE");
                    }
                }
                else
                {
                    this.xPOREField = value;
                    this.OnPropertyChanged("XPORE");
                }
            }
        }

        /// <summary>
        /// Certificate Number of the Withholding Tax Exemption
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string QSZNR
        {
            get
            {
                return this.qSZNRField;
            }
            set
            {
                if ((this.qSZNRField != null))
                {
                    if ((qSZNRField.Equals(value) != true))
                    {
                        this.qSZNRField = value;
                        this.OnPropertyChanged("QSZNR");
                    }
                }
                else
                {
                    this.qSZNRField = value;
                    this.OnPropertyChanged("QSZNR");
                }
            }
        }

        /// <summary>
        /// Validity Date for Withholding Tax Exemption Certificate
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string QSZDT
        {
            get
            {
                return this.qSZDTField;
            }
            set
            {
                if ((this.qSZDTField != null))
                {
                    if ((qSZDTField.Equals(value) != true))
                    {
                        this.qSZDTField = value;
                        this.OnPropertyChanged("QSZDT");
                    }
                }
                else
                {
                    this.qSZDTField = value;
                    this.OnPropertyChanged("QSZDT");
                }
            }
        }

        /// <summary>
        /// Withholding Tax Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string QSSKZ
        {
            get
            {
                return this.qSSKZField;
            }
            set
            {
                if ((this.qSSKZField != null))
                {
                    if ((qSSKZField.Equals(value) != true))
                    {
                        this.qSSKZField = value;
                        this.OnPropertyChanged("QSSKZ");
                    }
                }
                else
                {
                    this.qSSKZField = value;
                    this.OnPropertyChanged("QSSKZ");
                }
            }
        }

        /// <summary>
        /// Subsidy indicator for determining the reduction rates
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string BLNKZ
        {
            get
            {
                return this.bLNKZField;
            }
            set
            {
                if ((this.bLNKZField != null))
                {
                    if ((bLNKZField.Equals(value) != true))
                    {
                        this.bLNKZField = value;
                        this.OnPropertyChanged("BLNKZ");
                    }
                }
                else
                {
                    this.bLNKZField = value;
                    this.OnPropertyChanged("BLNKZ");
                }
            }
        }

        /// <summary>
        /// Minority Indicators
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string MINDK
        {
            get
            {
                return this.mINDKField;
            }
            set
            {
                if ((this.mINDKField != null))
                {
                    if ((mINDKField.Equals(value) != true))
                    {
                        this.mINDKField = value;
                        this.OnPropertyChanged("MINDK");
                    }
                }
                else
                {
                    this.mINDKField = value;
                    this.OnPropertyChanged("MINDK");
                }
            }
        }

        /// <summary>
        /// Previous Master Record Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string ALTKN
        {
            get
            {
                return this.aLTKNField;
            }
            set
            {
                if ((this.aLTKNField != null))
                {
                    if ((aLTKNField.Equals(value) != true))
                    {
                        this.aLTKNField = value;
                        this.OnPropertyChanged("ALTKN");
                    }
                }
                else
                {
                    this.aLTKNField = value;
                    this.OnPropertyChanged("ALTKN");
                }
            }
        }

        /// <summary>
        /// Key for Payment Grouping
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string ZGRUP
        {
            get
            {
                return this.zGRUPField;
            }
            set
            {
                if ((this.zGRUPField != null))
                {
                    if ((zGRUPField.Equals(value) != true))
                    {
                        this.zGRUPField = value;
                        this.OnPropertyChanged("ZGRUP");
                    }
                }
                else
                {
                    this.zGRUPField = value;
                    this.OnPropertyChanged("ZGRUP");
                }
            }
        }

        /// <summary>
        /// Key for dunning notice grouping
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string MGRUP
        {
            get
            {
                return this.mGRUPField;
            }
            set
            {
                if ((this.mGRUPField != null))
                {
                    if ((mGRUPField.Equals(value) != true))
                    {
                        this.mGRUPField = value;
                        this.OnPropertyChanged("MGRUP");
                    }
                }
                else
                {
                    this.mGRUPField = value;
                    this.OnPropertyChanged("MGRUP");
                }
            }
        }

        /// <summary>
        /// Payment Method Supplement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string UZAWE
        {
            get
            {
                return this.uZAWEField;
            }
            set
            {
                if ((this.uZAWEField != null))
                {
                    if ((uZAWEField.Equals(value) != true))
                    {
                        this.uZAWEField = value;
                        this.OnPropertyChanged("UZAWE");
                    }
                }
                else
                {
                    this.uZAWEField = value;
                    this.OnPropertyChanged("UZAWE");
                }
            }
        }

        /// <summary>
        /// Vendor Recipient Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string QSREC
        {
            get
            {
                return this.qSRECField;
            }
            set
            {
                if ((this.qSRECField != null))
                {
                    if ((qSRECField.Equals(value) != true))
                    {
                        this.qSRECField = value;
                        this.OnPropertyChanged("QSREC");
                    }
                }
                else
                {
                    this.qSRECField = value;
                    this.OnPropertyChanged("QSREC");
                }
            }
        }

        /// <summary>
        /// Authority for Exemption from Withholding Tax
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string QSBGR
        {
            get
            {
                return this.qSBGRField;
            }
            set
            {
                if ((this.qSBGRField != null))
                {
                    if ((qSBGRField.Equals(value) != true))
                    {
                        this.qSBGRField = value;
                        this.OnPropertyChanged("QSBGR");
                    }
                }
                else
                {
                    this.qSBGRField = value;
                    this.OnPropertyChanged("QSBGR");
                }
            }
        }

        /// <summary>
        /// Withholding Tax Country Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string QLAND
        {
            get
            {
                return this.qLANDField;
            }
            set
            {
                if ((this.qLANDField != null))
                {
                    if ((qLANDField.Equals(value) != true))
                    {
                        this.qLANDField = value;
                        this.OnPropertyChanged("QLAND");
                    }
                }
                else
                {
                    this.qLANDField = value;
                    this.OnPropertyChanged("QLAND");
                }
            }
        }

        /// <summary>
        /// Indicator: Send Payment Advices by EDI
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string XEDIP
        {
            get
            {
                return this.xEDIPField;
            }
            set
            {
                if ((this.xEDIPField != null))
                {
                    if ((xEDIPField.Equals(value) != true))
                    {
                        this.xEDIPField = value;
                        this.OnPropertyChanged("XEDIP");
                    }
                }
                else
                {
                    this.xEDIPField = value;
                    this.OnPropertyChanged("XEDIP");
                }
            }
        }

        /// <summary>
        /// Release Approval Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string FRGRP
        {
            get
            {
                return this.fRGRPField;
            }
            set
            {
                if ((this.fRGRPField != null))
                {
                    if ((fRGRPField.Equals(value) != true))
                    {
                        this.fRGRPField = value;
                        this.OnPropertyChanged("FRGRP");
                    }
                }
                else
                {
                    this.fRGRPField = value;
                    this.OnPropertyChanged("FRGRP");
                }
            }
        }

        /// <summary>
        /// Accounting clerk's fax number at the customer/vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public string TLFXS
        {
            get
            {
                return this.tLFXSField;
            }
            set
            {
                if ((this.tLFXSField != null))
                {
                    if ((tLFXSField.Equals(value) != true))
                    {
                        this.tLFXSField = value;
                        this.OnPropertyChanged("TLFXS");
                    }
                }
                else
                {
                    this.tLFXSField = value;
                    this.OnPropertyChanged("TLFXS");
                }
            }
        }

        /// <summary>
        /// Internet address of partner company clerk
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public string INTAD
        {
            get
            {
                return this.iNTADField;
            }
            set
            {
                if ((this.iNTADField != null))
                {
                    if ((iNTADField.Equals(value) != true))
                    {
                        this.iNTADField = value;
                        this.OnPropertyChanged("INTAD");
                    }
                }
                else
                {
                    this.iNTADField = value;
                    this.OnPropertyChanged("INTAD");
                }
            }
        }

        /// <summary>
        /// Payment Terms Key for Credit Memos
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public string GUZTE
        {
            get
            {
                return this.gUZTEField;
            }
            set
            {
                if ((this.gUZTEField != null))
                {
                    if ((gUZTEField.Equals(value) != true))
                    {
                        this.gUZTEField = value;
                        this.OnPropertyChanged("GUZTE");
                    }
                }
                else
                {
                    this.gUZTEField = value;
                    this.OnPropertyChanged("GUZTE");
                }
            }
        }

        /// <summary>
        /// Activity Code for Gross Income Tax
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 49)]
        public string GRICD
        {
            get
            {
                return this.gRICDField;
            }
            set
            {
                if ((this.gRICDField != null))
                {
                    if ((gRICDField.Equals(value) != true))
                    {
                        this.gRICDField = value;
                        this.OnPropertyChanged("GRICD");
                    }
                }
                else
                {
                    this.gRICDField = value;
                    this.OnPropertyChanged("GRICD");
                }
            }
        }

        /// <summary>
        /// Distribution Type for Employment Tax
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 50)]
        public string GRIDT
        {
            get
            {
                return this.gRIDTField;
            }
            set
            {
                if ((this.gRIDTField != null))
                {
                    if ((gRIDTField.Equals(value) != true))
                    {
                        this.gRIDTField = value;
                        this.OnPropertyChanged("GRIDT");
                    }
                }
                else
                {
                    this.gRIDTField = value;
                    this.OnPropertyChanged("GRIDT");
                }
            }
        }

        /// <summary>
        /// Indicator for periodic account statements
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 51)]
        public string XAUSZ
        {
            get
            {
                return this.xAUSZField;
            }
            set
            {
                if ((this.xAUSZField != null))
                {
                    if ((xAUSZField.Equals(value) != true))
                    {
                        this.xAUSZField = value;
                        this.OnPropertyChanged("XAUSZ");
                    }
                }
                else
                {
                    this.xAUSZField = value;
                    this.OnPropertyChanged("XAUSZ");
                }
            }
        }

        /// <summary>
        /// Certification date
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 52)]
        public string CERDT
        {
            get
            {
                return this.cERDTField;
            }
            set
            {
                if ((this.cERDTField != null))
                {
                    if ((cERDTField.Equals(value) != true))
                    {
                        this.cERDTField = value;
                        this.OnPropertyChanged("CERDT");
                    }
                }
                else
                {
                    this.cERDTField = value;
                    this.OnPropertyChanged("CERDT");
                }
            }
        }

        /// <summary>
        /// Tolerance group; Invoice Verification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 53)]
        public string TOGRR
        {
            get
            {
                return this.tOGRRField;
            }
            set
            {
                if ((this.tOGRRField != null))
                {
                    if ((tOGRRField.Equals(value) != true))
                    {
                        this.tOGRRField = value;
                        this.OnPropertyChanged("TOGRR");
                    }
                }
                else
                {
                    this.tOGRRField = value;
                    this.OnPropertyChanged("TOGRR");
                }
            }
        }

        /// <summary>
        /// Personnel Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 54)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        /// <summary>
        /// Deletion bock for master record (company code level)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 55)]
        public string NODEL
        {
            get
            {
                return this.nODELField;
            }
            set
            {
                if ((this.nODELField != null))
                {
                    if ((nODELField.Equals(value) != true))
                    {
                        this.nODELField = value;
                        this.OnPropertyChanged("NODEL");
                    }
                }
                else
                {
                    this.nODELField = value;
                    this.OnPropertyChanged("NODEL");
                }
            }
        }

        /// <summary>
        /// Accounting clerk's telephone number at business partner
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 56)]
        public string TLFNS
        {
            get
            {
                return this.tLFNSField;
            }
            set
            {
                if ((this.tLFNSField != null))
                {
                    if ((tLFNSField.Equals(value) != true))
                    {
                        this.tLFNSField = value;
                        this.OnPropertyChanged("TLFNS");
                    }
                }
                else
                {
                    this.tLFNSField = value;
                    this.OnPropertyChanged("TLFNS");
                }
            }
        }

        /// <summary>
        /// Vendor is in execution
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 57)]
        public string GMVKZK
        {
            get
            {
                return this.gMVKZKField;
            }
            set
            {
                if ((this.gMVKZKField != null))
                {
                    if ((gMVKZKField.Equals(value) != true))
                    {
                        this.gMVKZKField = value;
                        this.OnPropertyChanged("GMVKZK");
                    }
                }
                else
                {
                    this.gMVKZKField = value;
                    this.OnPropertyChanged("GMVKZK");
                }
            }
        }

        /// <summary>
        /// Prepayment Relevance (Vendor Master)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 58)]
        public string PREPAY_RELEVANT
        {
            get
            {
                return this.pREPAY_RELEVANTField;
            }
            set
            {
                if ((this.pREPAY_RELEVANTField != null))
                {
                    if ((pREPAY_RELEVANTField.Equals(value) != true))
                    {
                        this.pREPAY_RELEVANTField = value;
                        this.OnPropertyChanged("PREPAY_RELEVANT");
                    }
                }
                else
                {
                    this.pREPAY_RELEVANTField = value;
                    this.OnPropertyChanged("PREPAY_RELEVANT");
                }
            }
        }

        /// <summary>
        /// Assignment Test Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 59)]
        public string ASSIGN_TEST
        {
            get
            {
                return this.aSSIGN_TESTField;
            }
            set
            {
                if ((this.aSSIGN_TESTField != null))
                {
                    if ((aSSIGN_TESTField.Equals(value) != true))
                    {
                        this.aSSIGN_TESTField = value;
                        this.OnPropertyChanged("ASSIGN_TEST");
                    }
                }
                else
                {
                    this.aSSIGN_TESTField = value;
                    this.OnPropertyChanged("ASSIGN_TEST");
                }
            }
        }

        /// <summary>
        /// Segment for withholding tax types in vendor master
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFBWM", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 60)]
        public List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM> E1LFBWM
        {
            get
            {
                return this.e1LFBWMField;
            }
            set
            {
                if ((this.e1LFBWMField != null))
                {
                    if ((e1LFBWMField.Equals(value) != true))
                    {
                        this.e1LFBWMField = value;
                        this.OnPropertyChanged("E1LFBWM");
                    }
                }
                else
                {
                    this.e1LFBWMField = value;
                    this.OnPropertyChanged("E1LFBWM");
                }
            }
        }

        /// <summary>
        /// Reminder data for vendor SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFB5M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 61)]
        public List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M> E1LFB5M
        {
            get
            {
                return this.e1LFB5MField;
            }
            set
            {
                if ((this.e1LFB5MField != null))
                {
                    if ((e1LFB5MField.Equals(value) != true))
                    {
                        this.e1LFB5MField = value;
                        this.OnPropertyChanged("E1LFB5M");
                    }
                }
                else
                {
                    this.e1LFB5MField = value;
                    this.OnPropertyChanged("E1LFB5M");
                }
            }
        }

        /// <summary>
        /// Vendor Master Company Code: Texts, Header
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFB1H", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 62)]
        public List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H> E1LFB1H
        {
            get
            {
                return this.e1LFB1HField;
            }
            set
            {
                if ((this.e1LFB1HField != null))
                {
                    if ((e1LFB1HField.Equals(value) != true))
                    {
                        this.e1LFB1HField = value;
                        this.OnPropertyChanged("E1LFB1H");
                    }
                }
                else
                {
                    this.e1LFB1HField = value;
                    this.OnPropertyChanged("E1LFB1H");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFB1MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFB1M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFB1M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFB1M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFB1M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFB1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Segment for withholding tax types in vendor master
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string bUKRSField;

        private string wITHTField;

        private string wT_SUBJCTField;

        private string qSRECField;

        private string wT_WTSTCDField;

        private string wT_WITHCDField;

        private string wT_EXNRField;

        private string wT_EXRTField;

        private string wT_EXDFField;

        private string wT_EXDTField;

        private string wT_WTEXRSField;

        private string bUKRS_GLField;

        private CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWMSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string BUKRS
        {
            get
            {
                return this.bUKRSField;
            }
            set
            {
                if ((this.bUKRSField != null))
                {
                    if ((bUKRSField.Equals(value) != true))
                    {
                        this.bUKRSField = value;
                        this.OnPropertyChanged("BUKRS");
                    }
                }
                else
                {
                    this.bUKRSField = value;
                    this.OnPropertyChanged("BUKRS");
                }
            }
        }

        /// <summary>
        /// Indicator for withholding tax type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string WITHT
        {
            get
            {
                return this.wITHTField;
            }
            set
            {
                if ((this.wITHTField != null))
                {
                    if ((wITHTField.Equals(value) != true))
                    {
                        this.wITHTField = value;
                        this.OnPropertyChanged("WITHT");
                    }
                }
                else
                {
                    this.wITHTField = value;
                    this.OnPropertyChanged("WITHT");
                }
            }
        }

        /// <summary>
        /// Indicator: Subject to withholding tax?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string WT_SUBJCT
        {
            get
            {
                return this.wT_SUBJCTField;
            }
            set
            {
                if ((this.wT_SUBJCTField != null))
                {
                    if ((wT_SUBJCTField.Equals(value) != true))
                    {
                        this.wT_SUBJCTField = value;
                        this.OnPropertyChanged("WT_SUBJCT");
                    }
                }
                else
                {
                    this.wT_SUBJCTField = value;
                    this.OnPropertyChanged("WT_SUBJCT");
                }
            }
        }

        /// <summary>
        /// Type of recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string QSREC
        {
            get
            {
                return this.qSRECField;
            }
            set
            {
                if ((this.qSRECField != null))
                {
                    if ((qSRECField.Equals(value) != true))
                    {
                        this.qSRECField = value;
                        this.OnPropertyChanged("QSREC");
                    }
                }
                else
                {
                    this.qSRECField = value;
                    this.OnPropertyChanged("QSREC");
                }
            }
        }

        /// <summary>
        /// Withholding tax identification number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string WT_WTSTCD
        {
            get
            {
                return this.wT_WTSTCDField;
            }
            set
            {
                if ((this.wT_WTSTCDField != null))
                {
                    if ((wT_WTSTCDField.Equals(value) != true))
                    {
                        this.wT_WTSTCDField = value;
                        this.OnPropertyChanged("WT_WTSTCD");
                    }
                }
                else
                {
                    this.wT_WTSTCDField = value;
                    this.OnPropertyChanged("WT_WTSTCD");
                }
            }
        }

        /// <summary>
        /// Withholding tax code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string WT_WITHCD
        {
            get
            {
                return this.wT_WITHCDField;
            }
            set
            {
                if ((this.wT_WITHCDField != null))
                {
                    if ((wT_WITHCDField.Equals(value) != true))
                    {
                        this.wT_WITHCDField = value;
                        this.OnPropertyChanged("WT_WITHCD");
                    }
                }
                else
                {
                    this.wT_WITHCDField = value;
                    this.OnPropertyChanged("WT_WITHCD");
                }
            }
        }

        /// <summary>
        /// Exemption certificate number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string WT_EXNR
        {
            get
            {
                return this.wT_EXNRField;
            }
            set
            {
                if ((this.wT_EXNRField != null))
                {
                    if ((wT_EXNRField.Equals(value) != true))
                    {
                        this.wT_EXNRField = value;
                        this.OnPropertyChanged("WT_EXNR");
                    }
                }
                else
                {
                    this.wT_EXNRField = value;
                    this.OnPropertyChanged("WT_EXNR");
                }
            }
        }

        /// <summary>
        /// Exemption Rate (Extended Withholding Tax) for ALE
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string WT_EXRT
        {
            get
            {
                return this.wT_EXRTField;
            }
            set
            {
                if ((this.wT_EXRTField != null))
                {
                    if ((wT_EXRTField.Equals(value) != true))
                    {
                        this.wT_EXRTField = value;
                        this.OnPropertyChanged("WT_EXRT");
                    }
                }
                else
                {
                    this.wT_EXRTField = value;
                    this.OnPropertyChanged("WT_EXRT");
                }
            }
        }

        /// <summary>
        /// Date (batch input)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string WT_EXDF
        {
            get
            {
                return this.wT_EXDFField;
            }
            set
            {
                if ((this.wT_EXDFField != null))
                {
                    if ((wT_EXDFField.Equals(value) != true))
                    {
                        this.wT_EXDFField = value;
                        this.OnPropertyChanged("WT_EXDF");
                    }
                }
                else
                {
                    this.wT_EXDFField = value;
                    this.OnPropertyChanged("WT_EXDF");
                }
            }
        }

        /// <summary>
        /// Date (batch input)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string WT_EXDT
        {
            get
            {
                return this.wT_EXDTField;
            }
            set
            {
                if ((this.wT_EXDTField != null))
                {
                    if ((wT_EXDTField.Equals(value) != true))
                    {
                        this.wT_EXDTField = value;
                        this.OnPropertyChanged("WT_EXDT");
                    }
                }
                else
                {
                    this.wT_EXDTField = value;
                    this.OnPropertyChanged("WT_EXDT");
                }
            }
        }

        /// <summary>
        /// Reason for exemption
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string WT_WTEXRS
        {
            get
            {
                return this.wT_WTEXRSField;
            }
            set
            {
                if ((this.wT_WTEXRSField != null))
                {
                    if ((wT_WTEXRSField.Equals(value) != true))
                    {
                        this.wT_WTEXRSField = value;
                        this.OnPropertyChanged("WT_WTEXRS");
                    }
                }
                else
                {
                    this.wT_WTEXRSField = value;
                    this.OnPropertyChanged("WT_WTEXRS");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string BUKRS_GL
        {
            get
            {
                return this.bUKRS_GLField;
            }
            set
            {
                if ((this.bUKRS_GLField != null))
                {
                    if ((bUKRS_GLField.Equals(value) != true))
                    {
                        this.bUKRS_GLField = value;
                        this.OnPropertyChanged("BUKRS_GL");
                    }
                }
                else
                {
                    this.bUKRS_GLField = value;
                    this.OnPropertyChanged("BUKRS_GL");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWMSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWM LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFB1ME1LFBWMSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Reminder data for vendor SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string bUKRSField;

        private string mABERField;

        private string mAHNAField;

        private string mANSPField;

        private string mADATField;

        private string mAHNSField;

        private string lFRMAField;

        private string gMVDTField;

        private string bUSABField;

        private CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string BUKRS
        {
            get
            {
                return this.bUKRSField;
            }
            set
            {
                if ((this.bUKRSField != null))
                {
                    if ((bUKRSField.Equals(value) != true))
                    {
                        this.bUKRSField = value;
                        this.OnPropertyChanged("BUKRS");
                    }
                }
                else
                {
                    this.bUKRSField = value;
                    this.OnPropertyChanged("BUKRS");
                }
            }
        }

        /// <summary>
        /// Dunning Area
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string MABER
        {
            get
            {
                return this.mABERField;
            }
            set
            {
                if ((this.mABERField != null))
                {
                    if ((mABERField.Equals(value) != true))
                    {
                        this.mABERField = value;
                        this.OnPropertyChanged("MABER");
                    }
                }
                else
                {
                    this.mABERField = value;
                    this.OnPropertyChanged("MABER");
                }
            }
        }

        /// <summary>
        /// Dunning Procedure
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string MAHNA
        {
            get
            {
                return this.mAHNAField;
            }
            set
            {
                if ((this.mAHNAField != null))
                {
                    if ((mAHNAField.Equals(value) != true))
                    {
                        this.mAHNAField = value;
                        this.OnPropertyChanged("MAHNA");
                    }
                }
                else
                {
                    this.mAHNAField = value;
                    this.OnPropertyChanged("MAHNA");
                }
            }
        }

        /// <summary>
        /// Dunning block
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string MANSP
        {
            get
            {
                return this.mANSPField;
            }
            set
            {
                if ((this.mANSPField != null))
                {
                    if ((mANSPField.Equals(value) != true))
                    {
                        this.mANSPField = value;
                        this.OnPropertyChanged("MANSP");
                    }
                }
                else
                {
                    this.mANSPField = value;
                    this.OnPropertyChanged("MANSP");
                }
            }
        }

        /// <summary>
        /// Last dunned on
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string MADAT
        {
            get
            {
                return this.mADATField;
            }
            set
            {
                if ((this.mADATField != null))
                {
                    if ((mADATField.Equals(value) != true))
                    {
                        this.mADATField = value;
                        this.OnPropertyChanged("MADAT");
                    }
                }
                else
                {
                    this.mADATField = value;
                    this.OnPropertyChanged("MADAT");
                }
            }
        }

        /// <summary>
        /// Character field of length 1
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string MAHNS
        {
            get
            {
                return this.mAHNSField;
            }
            set
            {
                if ((this.mAHNSField != null))
                {
                    if ((mAHNSField.Equals(value) != true))
                    {
                        this.mAHNSField = value;
                        this.OnPropertyChanged("MAHNS");
                    }
                }
                else
                {
                    this.mAHNSField = value;
                    this.OnPropertyChanged("MAHNS");
                }
            }
        }

        /// <summary>
        /// Account number of the dunning recipient
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string LFRMA
        {
            get
            {
                return this.lFRMAField;
            }
            set
            {
                if ((this.lFRMAField != null))
                {
                    if ((lFRMAField.Equals(value) != true))
                    {
                        this.lFRMAField = value;
                        this.OnPropertyChanged("LFRMA");
                    }
                }
                else
                {
                    this.lFRMAField = value;
                    this.OnPropertyChanged("LFRMA");
                }
            }
        }

        /// <summary>
        /// Date of the legal dunning proceedings
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string GMVDT
        {
            get
            {
                return this.gMVDTField;
            }
            set
            {
                if ((this.gMVDTField != null))
                {
                    if ((gMVDTField.Equals(value) != true))
                    {
                        this.gMVDTField = value;
                        this.OnPropertyChanged("GMVDT");
                    }
                }
                else
                {
                    this.gMVDTField = value;
                    this.OnPropertyChanged("GMVDT");
                }
            }
        }

        /// <summary>
        /// Accounting clerk
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string BUSAB
        {
            get
            {
                return this.bUSABField;
            }
            set
            {
                if ((this.bUSABField != null))
                {
                    if ((bUSABField.Equals(value) != true))
                    {
                        this.bUSABField = value;
                        this.OnPropertyChanged("BUSAB");
                    }
                }
                else
                {
                    this.bUSABField = value;
                    this.OnPropertyChanged("BUSAB");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFB1ME1LFB5MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Vendor Master Company Code: Texts, Header
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDOBJECTField;

        private string tDNAMEField;

        private string tDIDField;

        private string tDSPRASField;

        private string tDTEXTTYPEField;

        private string tDSPRASISOField;

        private List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L> e1LFB1LField;

        private CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H()
        {
            this.e1LFB1LField = new List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Texts: Application Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDOBJECT
        {
            get
            {
                return this.tDOBJECTField;
            }
            set
            {
                if ((this.tDOBJECTField != null))
                {
                    if ((tDOBJECTField.Equals(value) != true))
                    {
                        this.tDOBJECTField = value;
                        this.OnPropertyChanged("TDOBJECT");
                    }
                }
                else
                {
                    this.tDOBJECTField = value;
                    this.OnPropertyChanged("TDOBJECT");
                }
            }
        }

        /// <summary>
        /// Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDNAME
        {
            get
            {
                return this.tDNAMEField;
            }
            set
            {
                if ((this.tDNAMEField != null))
                {
                    if ((tDNAMEField.Equals(value) != true))
                    {
                        this.tDNAMEField = value;
                        this.OnPropertyChanged("TDNAME");
                    }
                }
                else
                {
                    this.tDNAMEField = value;
                    this.OnPropertyChanged("TDNAME");
                }
            }
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string TDSPRAS
        {
            get
            {
                return this.tDSPRASField;
            }
            set
            {
                if ((this.tDSPRASField != null))
                {
                    if ((tDSPRASField.Equals(value) != true))
                    {
                        this.tDSPRASField = value;
                        this.OnPropertyChanged("TDSPRAS");
                    }
                }
                else
                {
                    this.tDSPRASField = value;
                    this.OnPropertyChanged("TDSPRAS");
                }
            }
        }

        /// <summary>
        /// SAPscript: Format of Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string TDTEXTTYPE
        {
            get
            {
                return this.tDTEXTTYPEField;
            }
            set
            {
                if ((this.tDTEXTTYPEField != null))
                {
                    if ((tDTEXTTYPEField.Equals(value) != true))
                    {
                        this.tDTEXTTYPEField = value;
                        this.OnPropertyChanged("TDTEXTTYPE");
                    }
                }
                else
                {
                    this.tDTEXTTYPEField = value;
                    this.OnPropertyChanged("TDTEXTTYPE");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string TDSPRASISO
        {
            get
            {
                return this.tDSPRASISOField;
            }
            set
            {
                if ((this.tDSPRASISOField != null))
                {
                    if ((tDSPRASISOField.Equals(value) != true))
                    {
                        this.tDSPRASISOField = value;
                        this.OnPropertyChanged("TDSPRASISO");
                    }
                }
                else
                {
                    this.tDSPRASISOField = value;
                    this.OnPropertyChanged("TDSPRASISO");
                }
            }
        }

        /// <summary>
        /// Vendor Master Company Code: Text Lines
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFB1L", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L> E1LFB1L
        {
            get
            {
                return this.e1LFB1LField;
            }
            set
            {
                if ((this.e1LFB1LField != null))
                {
                    if ((e1LFB1LField.Equals(value) != true))
                    {
                        this.e1LFB1LField = value;
                        this.OnPropertyChanged("E1LFB1L");
                    }
                }
                else
                {
                    this.e1LFB1LField = value;
                    this.OnPropertyChanged("E1LFB1L");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1H LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Vendor Master Company Code: Text Lines
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDFORMATField;

        private string tDLINEField;

        private CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1LSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        /// <summary>
        /// Text Line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1LSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1L LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HE1LFB1LSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFB1ME1LFB1HSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFB1MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for purchasing organization data vendor SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFM1M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string eKORGField;

        private string eRDATField;

        private string eRNAMField;

        private string sPERMField;

        private string lOEVMField;

        private string lFABCField;

        private string wAERSField;

        private string vERKFField;

        private string tELF1Field;

        private string mINBWField;

        private string zTERMField;

        private string iNCO1Field;

        private string iNCO2Field;

        private string wEBREField;

        private string kZABSField;

        private string kALSKField;

        private string kZAUTField;

        private string eXPVZField;

        private string zOLLAField;

        private string mEPRFField;

        private string eKGRPField;

        private string bOLREField;

        private string uMSAEField;

        private string xERSYField;

        private string pLIFZField;

        private string mRPPPField;

        private string lFRHYField;

        private string lIEFRField;

        private string lIBESField;

        private string lIPREField;

        private string lISERField;

        private string bOINDField;

        private string pRFREField;

        private string nRGEWField;

        private string bLINDField;

        private string kZRETField;

        private string sKRITField;

        private string bSTAEField;

        private string rDPRFField;

        private string mEGRUField;

        private string vENSLField;

        private string bOPNRField;

        private string xERSRField;

        private string eIKTOField;

        private string pAPRFField;

        private string aGRELField;

        private string xNBWYField;

        private string vSBEDField;

        private string lEBREField;

        private string mINBW2Field;

        private string aCTIVITY_PROFILField;

        private List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M> e1LFM2MField;

        private List<CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M> e1WYT3MField;

        private List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H> e1LFM1HField;

        private CREMAS05IDOCE1LFA1ME1LFM1MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1LFM1M class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1LFM1M()
        {
            this.e1LFM1HField = new List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H>();
            this.e1WYT3MField = new List<CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M>();
            this.e1LFM2MField = new List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Vendor Account Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Purchasing Organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string EKORG
        {
            get
            {
                return this.eKORGField;
            }
            set
            {
                if ((this.eKORGField != null))
                {
                    if ((eKORGField.Equals(value) != true))
                    {
                        this.eKORGField = value;
                        this.OnPropertyChanged("EKORG");
                    }
                }
                else
                {
                    this.eKORGField = value;
                    this.OnPropertyChanged("EKORG");
                }
            }
        }

        /// <summary>
        /// Date on Which Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Purchasing block at purchasing organization level
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string SPERM
        {
            get
            {
                return this.sPERMField;
            }
            set
            {
                if ((this.sPERMField != null))
                {
                    if ((sPERMField.Equals(value) != true))
                    {
                        this.sPERMField = value;
                        this.OnPropertyChanged("SPERM");
                    }
                }
                else
                {
                    this.sPERMField = value;
                    this.OnPropertyChanged("SPERM");
                }
            }
        }

        /// <summary>
        /// Delete flag for vendor at purchasing level
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string LOEVM
        {
            get
            {
                return this.lOEVMField;
            }
            set
            {
                if ((this.lOEVMField != null))
                {
                    if ((lOEVMField.Equals(value) != true))
                    {
                        this.lOEVMField = value;
                        this.OnPropertyChanged("LOEVM");
                    }
                }
                else
                {
                    this.lOEVMField = value;
                    this.OnPropertyChanged("LOEVM");
                }
            }
        }

        /// <summary>
        /// ABC indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string LFABC
        {
            get
            {
                return this.lFABCField;
            }
            set
            {
                if ((this.lFABCField != null))
                {
                    if ((lFABCField.Equals(value) != true))
                    {
                        this.lFABCField = value;
                        this.OnPropertyChanged("LFABC");
                    }
                }
                else
                {
                    this.lFABCField = value;
                    this.OnPropertyChanged("LFABC");
                }
            }
        }

        /// <summary>
        /// Purchase order currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string WAERS
        {
            get
            {
                return this.wAERSField;
            }
            set
            {
                if ((this.wAERSField != null))
                {
                    if ((wAERSField.Equals(value) != true))
                    {
                        this.wAERSField = value;
                        this.OnPropertyChanged("WAERS");
                    }
                }
                else
                {
                    this.wAERSField = value;
                    this.OnPropertyChanged("WAERS");
                }
            }
        }

        /// <summary>
        /// Responsible Salesperson at Vendor's Office
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string VERKF
        {
            get
            {
                return this.vERKFField;
            }
            set
            {
                if ((this.vERKFField != null))
                {
                    if ((vERKFField.Equals(value) != true))
                    {
                        this.vERKFField = value;
                        this.OnPropertyChanged("VERKF");
                    }
                }
                else
                {
                    this.vERKFField = value;
                    this.OnPropertyChanged("VERKF");
                }
            }
        }

        /// <summary>
        /// Vendor's telephone number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// Minimum order value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string MINBW
        {
            get
            {
                return this.mINBWField;
            }
            set
            {
                if ((this.mINBWField != null))
                {
                    if ((mINBWField.Equals(value) != true))
                    {
                        this.mINBWField = value;
                        this.OnPropertyChanged("MINBW");
                    }
                }
                else
                {
                    this.mINBWField = value;
                    this.OnPropertyChanged("MINBW");
                }
            }
        }

        /// <summary>
        /// Terms of Payment Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string ZTERM
        {
            get
            {
                return this.zTERMField;
            }
            set
            {
                if ((this.zTERMField != null))
                {
                    if ((zTERMField.Equals(value) != true))
                    {
                        this.zTERMField = value;
                        this.OnPropertyChanged("ZTERM");
                    }
                }
                else
                {
                    this.zTERMField = value;
                    this.OnPropertyChanged("ZTERM");
                }
            }
        }

        /// <summary>
        /// Incoterms (Part 1)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string INCO1
        {
            get
            {
                return this.iNCO1Field;
            }
            set
            {
                if ((this.iNCO1Field != null))
                {
                    if ((iNCO1Field.Equals(value) != true))
                    {
                        this.iNCO1Field = value;
                        this.OnPropertyChanged("INCO1");
                    }
                }
                else
                {
                    this.iNCO1Field = value;
                    this.OnPropertyChanged("INCO1");
                }
            }
        }

        /// <summary>
        /// Incoterms (Part 2)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string INCO2
        {
            get
            {
                return this.iNCO2Field;
            }
            set
            {
                if ((this.iNCO2Field != null))
                {
                    if ((iNCO2Field.Equals(value) != true))
                    {
                        this.iNCO2Field = value;
                        this.OnPropertyChanged("INCO2");
                    }
                }
                else
                {
                    this.iNCO2Field = value;
                    this.OnPropertyChanged("INCO2");
                }
            }
        }

        /// <summary>
        /// Indicator: GR-Based Invoice Verification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string WEBRE
        {
            get
            {
                return this.wEBREField;
            }
            set
            {
                if ((this.wEBREField != null))
                {
                    if ((wEBREField.Equals(value) != true))
                    {
                        this.wEBREField = value;
                        this.OnPropertyChanged("WEBRE");
                    }
                }
                else
                {
                    this.wEBREField = value;
                    this.OnPropertyChanged("WEBRE");
                }
            }
        }

        /// <summary>
        /// Order Acknowledgment Requirement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string KZABS
        {
            get
            {
                return this.kZABSField;
            }
            set
            {
                if ((this.kZABSField != null))
                {
                    if ((kZABSField.Equals(value) != true))
                    {
                        this.kZABSField = value;
                        this.OnPropertyChanged("KZABS");
                    }
                }
                else
                {
                    this.kZABSField = value;
                    this.OnPropertyChanged("KZABS");
                }
            }
        }

        /// <summary>
        /// Group for Calculation Schema (Vendor)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string KALSK
        {
            get
            {
                return this.kALSKField;
            }
            set
            {
                if ((this.kALSKField != null))
                {
                    if ((kALSKField.Equals(value) != true))
                    {
                        this.kALSKField = value;
                        this.OnPropertyChanged("KALSK");
                    }
                }
                else
                {
                    this.kALSKField = value;
                    this.OnPropertyChanged("KALSK");
                }
            }
        }

        /// <summary>
        /// Automatic Generation of Purchase Order Allowed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string KZAUT
        {
            get
            {
                return this.kZAUTField;
            }
            set
            {
                if ((this.kZAUTField != null))
                {
                    if ((kZAUTField.Equals(value) != true))
                    {
                        this.kZAUTField = value;
                        this.OnPropertyChanged("KZAUT");
                    }
                }
                else
                {
                    this.kZAUTField = value;
                    this.OnPropertyChanged("KZAUT");
                }
            }
        }

        /// <summary>
        /// Mode of Transport for Foreign Trade
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string EXPVZ
        {
            get
            {
                return this.eXPVZField;
            }
            set
            {
                if ((this.eXPVZField != null))
                {
                    if ((eXPVZField.Equals(value) != true))
                    {
                        this.eXPVZField = value;
                        this.OnPropertyChanged("EXPVZ");
                    }
                }
                else
                {
                    this.eXPVZField = value;
                    this.OnPropertyChanged("EXPVZ");
                }
            }
        }

        /// <summary>
        /// Customs Office: Office of Exit/Entry for Foreign Trade
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string ZOLLA
        {
            get
            {
                return this.zOLLAField;
            }
            set
            {
                if ((this.zOLLAField != null))
                {
                    if ((zOLLAField.Equals(value) != true))
                    {
                        this.zOLLAField = value;
                        this.OnPropertyChanged("ZOLLA");
                    }
                }
                else
                {
                    this.zOLLAField = value;
                    this.OnPropertyChanged("ZOLLA");
                }
            }
        }

        /// <summary>
        /// Price Determination (Pricing) Date Control
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string MEPRF
        {
            get
            {
                return this.mEPRFField;
            }
            set
            {
                if ((this.mEPRFField != null))
                {
                    if ((mEPRFField.Equals(value) != true))
                    {
                        this.mEPRFField = value;
                        this.OnPropertyChanged("MEPRF");
                    }
                }
                else
                {
                    this.mEPRFField = value;
                    this.OnPropertyChanged("MEPRF");
                }
            }
        }

        /// <summary>
        /// Purchasing Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string EKGRP
        {
            get
            {
                return this.eKGRPField;
            }
            set
            {
                if ((this.eKGRPField != null))
                {
                    if ((eKGRPField.Equals(value) != true))
                    {
                        this.eKGRPField = value;
                        this.OnPropertyChanged("EKGRP");
                    }
                }
                else
                {
                    this.eKGRPField = value;
                    this.OnPropertyChanged("EKGRP");
                }
            }
        }

        /// <summary>
        /// Indicator: vendor subject to subseq. settlement accounting
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string BOLRE
        {
            get
            {
                return this.bOLREField;
            }
            set
            {
                if ((this.bOLREField != null))
                {
                    if ((bOLREField.Equals(value) != true))
                    {
                        this.bOLREField = value;
                        this.OnPropertyChanged("BOLRE");
                    }
                }
                else
                {
                    this.bOLREField = value;
                    this.OnPropertyChanged("BOLRE");
                }
            }
        }

        /// <summary>
        /// Comparison/agreement of business volumes necessary
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string UMSAE
        {
            get
            {
                return this.uMSAEField;
            }
            set
            {
                if ((this.uMSAEField != null))
                {
                    if ((uMSAEField.Equals(value) != true))
                    {
                        this.uMSAEField = value;
                        this.OnPropertyChanged("UMSAE");
                    }
                }
                else
                {
                    this.uMSAEField = value;
                    this.OnPropertyChanged("UMSAE");
                }
            }
        }

        /// <summary>
        /// Evaluated Receipt Settlement (ERS)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string XERSY
        {
            get
            {
                return this.xERSYField;
            }
            set
            {
                if ((this.xERSYField != null))
                {
                    if ((xERSYField.Equals(value) != true))
                    {
                        this.xERSYField = value;
                        this.OnPropertyChanged("XERSY");
                    }
                }
                else
                {
                    this.xERSYField = value;
                    this.OnPropertyChanged("XERSY");
                }
            }
        }

        /// <summary>
        /// Planned Delivery Time in Days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string PLIFZ
        {
            get
            {
                return this.pLIFZField;
            }
            set
            {
                if ((this.pLIFZField != null))
                {
                    if ((pLIFZField.Equals(value) != true))
                    {
                        this.pLIFZField = value;
                        this.OnPropertyChanged("PLIFZ");
                    }
                }
                else
                {
                    this.pLIFZField = value;
                    this.OnPropertyChanged("PLIFZ");
                }
            }
        }

        /// <summary>
        /// Planning calendar
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string MRPPP
        {
            get
            {
                return this.mRPPPField;
            }
            set
            {
                if ((this.mRPPPField != null))
                {
                    if ((mRPPPField.Equals(value) != true))
                    {
                        this.mRPPPField = value;
                        this.OnPropertyChanged("MRPPP");
                    }
                }
                else
                {
                    this.mRPPPField = value;
                    this.OnPropertyChanged("MRPPP");
                }
            }
        }

        /// <summary>
        /// Planning cycle
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string LFRHY
        {
            get
            {
                return this.lFRHYField;
            }
            set
            {
                if ((this.lFRHYField != null))
                {
                    if ((lFRHYField.Equals(value) != true))
                    {
                        this.lFRHYField = value;
                        this.OnPropertyChanged("LFRHY");
                    }
                }
                else
                {
                    this.lFRHYField = value;
                    this.OnPropertyChanged("LFRHY");
                }
            }
        }

        /// <summary>
        /// Delivery cycle
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string LIEFR
        {
            get
            {
                return this.lIEFRField;
            }
            set
            {
                if ((this.lIEFRField != null))
                {
                    if ((lIEFRField.Equals(value) != true))
                    {
                        this.lIEFRField = value;
                        this.OnPropertyChanged("LIEFR");
                    }
                }
                else
                {
                    this.lIEFRField = value;
                    this.OnPropertyChanged("LIEFR");
                }
            }
        }

        /// <summary>
        /// Order entry by vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string LIBES
        {
            get
            {
                return this.lIBESField;
            }
            set
            {
                if ((this.lIBESField != null))
                {
                    if ((lIBESField.Equals(value) != true))
                    {
                        this.lIBESField = value;
                        this.OnPropertyChanged("LIBES");
                    }
                }
                else
                {
                    this.lIBESField = value;
                    this.OnPropertyChanged("LIBES");
                }
            }
        }

        /// <summary>
        /// Price marking, vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string LIPRE
        {
            get
            {
                return this.lIPREField;
            }
            set
            {
                if ((this.lIPREField != null))
                {
                    if ((lIPREField.Equals(value) != true))
                    {
                        this.lIPREField = value;
                        this.OnPropertyChanged("LIPRE");
                    }
                }
                else
                {
                    this.lIPREField = value;
                    this.OnPropertyChanged("LIPRE");
                }
            }
        }

        /// <summary>
        /// Rack-jobbing: vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string LISER
        {
            get
            {
                return this.lISERField;
            }
            set
            {
                if ((this.lISERField != null))
                {
                    if ((lISERField.Equals(value) != true))
                    {
                        this.lISERField = value;
                        this.OnPropertyChanged("LISER");
                    }
                }
                else
                {
                    this.lISERField = value;
                    this.OnPropertyChanged("LISER");
                }
            }
        }

        /// <summary>
        /// Indicator: index compilation for subseq. settlement active
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string BOIND
        {
            get
            {
                return this.bOINDField;
            }
            set
            {
                if ((this.bOINDField != null))
                {
                    if ((bOINDField.Equals(value) != true))
                    {
                        this.bOINDField = value;
                        this.OnPropertyChanged("BOIND");
                    }
                }
                else
                {
                    this.bOINDField = value;
                    this.OnPropertyChanged("BOIND");
                }
            }
        }

        /// <summary>
        /// Indicator: "relev. to price determination (vend. hierarchy)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string PRFRE
        {
            get
            {
                return this.pRFREField;
            }
            set
            {
                if ((this.pRFREField != null))
                {
                    if ((pRFREField.Equals(value) != true))
                    {
                        this.pRFREField = value;
                        this.OnPropertyChanged("PRFRE");
                    }
                }
                else
                {
                    this.pRFREField = value;
                    this.OnPropertyChanged("PRFRE");
                }
            }
        }

        /// <summary>
        /// Indicator whether discount in kind granted
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string NRGEW
        {
            get
            {
                return this.nRGEWField;
            }
            set
            {
                if ((this.nRGEWField != null))
                {
                    if ((nRGEWField.Equals(value) != true))
                    {
                        this.nRGEWField = value;
                        this.OnPropertyChanged("NRGEW");
                    }
                }
                else
                {
                    this.nRGEWField = value;
                    this.OnPropertyChanged("NRGEW");
                }
            }
        }

        /// <summary>
        /// Indicator: Doc. index compilation active for purchase orders
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string BLIND
        {
            get
            {
                return this.bLINDField;
            }
            set
            {
                if ((this.bLINDField != null))
                {
                    if ((bLINDField.Equals(value) != true))
                    {
                        this.bLINDField = value;
                        this.OnPropertyChanged("BLIND");
                    }
                }
                else
                {
                    this.bLINDField = value;
                    this.OnPropertyChanged("BLIND");
                }
            }
        }

        /// <summary>
        /// Indicates whether vendor is returns vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string KZRET
        {
            get
            {
                return this.kZRETField;
            }
            set
            {
                if ((this.kZRETField != null))
                {
                    if ((kZRETField.Equals(value) != true))
                    {
                        this.kZRETField = value;
                        this.OnPropertyChanged("KZRET");
                    }
                }
                else
                {
                    this.kZRETField = value;
                    this.OnPropertyChanged("KZRET");
                }
            }
        }

        /// <summary>
        /// Vendor sort criterion for materials
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string SKRIT
        {
            get
            {
                return this.sKRITField;
            }
            set
            {
                if ((this.sKRITField != null))
                {
                    if ((sKRITField.Equals(value) != true))
                    {
                        this.sKRITField = value;
                        this.OnPropertyChanged("SKRIT");
                    }
                }
                else
                {
                    this.sKRITField = value;
                    this.OnPropertyChanged("SKRIT");
                }
            }
        }

        /// <summary>
        /// Confirmation Control Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string BSTAE
        {
            get
            {
                return this.bSTAEField;
            }
            set
            {
                if ((this.bSTAEField != null))
                {
                    if ((bSTAEField.Equals(value) != true))
                    {
                        this.bSTAEField = value;
                        this.OnPropertyChanged("BSTAE");
                    }
                }
                else
                {
                    this.bSTAEField = value;
                    this.OnPropertyChanged("BSTAE");
                }
            }
        }

        /// <summary>
        /// Rounding Profile
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string RDPRF
        {
            get
            {
                return this.rDPRFField;
            }
            set
            {
                if ((this.rDPRFField != null))
                {
                    if ((rDPRFField.Equals(value) != true))
                    {
                        this.rDPRFField = value;
                        this.OnPropertyChanged("RDPRF");
                    }
                }
                else
                {
                    this.rDPRFField = value;
                    this.OnPropertyChanged("RDPRF");
                }
            }
        }

        /// <summary>
        /// Unit of Measure Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string MEGRU
        {
            get
            {
                return this.mEGRUField;
            }
            set
            {
                if ((this.mEGRUField != null))
                {
                    if ((mEGRUField.Equals(value) != true))
                    {
                        this.mEGRUField = value;
                        this.OnPropertyChanged("MEGRU");
                    }
                }
                else
                {
                    this.mEGRUField = value;
                    this.OnPropertyChanged("MEGRU");
                }
            }
        }

        /// <summary>
        /// Vendor service level
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string VENSL
        {
            get
            {
                return this.vENSLField;
            }
            set
            {
                if ((this.vENSLField != null))
                {
                    if ((vENSLField.Equals(value) != true))
                    {
                        this.vENSLField = value;
                        this.OnPropertyChanged("VENSL");
                    }
                }
                else
                {
                    this.vENSLField = value;
                    this.OnPropertyChanged("VENSL");
                }
            }
        }

        /// <summary>
        /// Restriction Profile for PO-Based Load Building
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string BOPNR
        {
            get
            {
                return this.bOPNRField;
            }
            set
            {
                if ((this.bOPNRField != null))
                {
                    if ((bOPNRField.Equals(value) != true))
                    {
                        this.bOPNRField = value;
                        this.OnPropertyChanged("BOPNR");
                    }
                }
                else
                {
                    this.bOPNRField = value;
                    this.OnPropertyChanged("BOPNR");
                }
            }
        }

        /// <summary>
        /// Automatic evaluated receipt settlement for return items
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string XERSR
        {
            get
            {
                return this.xERSRField;
            }
            set
            {
                if ((this.xERSRField != null))
                {
                    if ((xERSRField.Equals(value) != true))
                    {
                        this.xERSRField = value;
                        this.OnPropertyChanged("XERSR");
                    }
                }
                else
                {
                    this.xERSRField = value;
                    this.OnPropertyChanged("XERSR");
                }
            }
        }

        /// <summary>
        /// Our account number with the vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string EIKTO
        {
            get
            {
                return this.eIKTOField;
            }
            set
            {
                if ((this.eIKTOField != null))
                {
                    if ((eIKTOField.Equals(value) != true))
                    {
                        this.eIKTOField = value;
                        this.OnPropertyChanged("EIKTO");
                    }
                }
                else
                {
                    this.eIKTOField = value;
                    this.OnPropertyChanged("EIKTO");
                }
            }
        }

        /// <summary>
        /// Profile for transferring material data via IDoc PROACT
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 46)]
        public string PAPRF
        {
            get
            {
                return this.pAPRFField;
            }
            set
            {
                if ((this.pAPRFField != null))
                {
                    if ((pAPRFField.Equals(value) != true))
                    {
                        this.pAPRFField = value;
                        this.OnPropertyChanged("PAPRF");
                    }
                }
                else
                {
                    this.pAPRFField = value;
                    this.OnPropertyChanged("PAPRF");
                }
            }
        }

        /// <summary>
        /// Indicator: Relevant for agency business
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 47)]
        public string AGREL
        {
            get
            {
                return this.aGRELField;
            }
            set
            {
                if ((this.aGRELField != null))
                {
                    if ((aGRELField.Equals(value) != true))
                    {
                        this.aGRELField = value;
                        this.OnPropertyChanged("AGREL");
                    }
                }
                else
                {
                    this.aGRELField = value;
                    this.OnPropertyChanged("AGREL");
                }
            }
        }

        /// <summary>
        /// Revaluation allowed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 48)]
        public string XNBWY
        {
            get
            {
                return this.xNBWYField;
            }
            set
            {
                if ((this.xNBWYField != null))
                {
                    if ((xNBWYField.Equals(value) != true))
                    {
                        this.xNBWYField = value;
                        this.OnPropertyChanged("XNBWY");
                    }
                }
                else
                {
                    this.xNBWYField = value;
                    this.OnPropertyChanged("XNBWY");
                }
            }
        }

        /// <summary>
        /// Shipping Conditions
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 49)]
        public string VSBED
        {
            get
            {
                return this.vSBEDField;
            }
            set
            {
                if ((this.vSBEDField != null))
                {
                    if ((vSBEDField.Equals(value) != true))
                    {
                        this.vSBEDField = value;
                        this.OnPropertyChanged("VSBED");
                    }
                }
                else
                {
                    this.vSBEDField = value;
                    this.OnPropertyChanged("VSBED");
                }
            }
        }

        /// <summary>
        /// Indicator for Service-Based Invoice Verification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 50)]
        public string LEBRE
        {
            get
            {
                return this.lEBREField;
            }
            set
            {
                if ((this.lEBREField != null))
                {
                    if ((lEBREField.Equals(value) != true))
                    {
                        this.lEBREField = value;
                        this.OnPropertyChanged("LEBRE");
                    }
                }
                else
                {
                    this.lEBREField = value;
                    this.OnPropertyChanged("LEBRE");
                }
            }
        }

        /// <summary>
        /// Minimum order value (batch input field)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 51)]
        public string MINBW2
        {
            get
            {
                return this.mINBW2Field;
            }
            set
            {
                if ((this.mINBW2Field != null))
                {
                    if ((mINBW2Field.Equals(value) != true))
                    {
                        this.mINBW2Field = value;
                        this.OnPropertyChanged("MINBW2");
                    }
                }
                else
                {
                    this.mINBW2Field = value;
                    this.OnPropertyChanged("MINBW2");
                }
            }
        }

        /// <summary>
        /// Activity Profile for PO Controlling
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 52)]
        public string ACTIVITY_PROFIL
        {
            get
            {
                return this.aCTIVITY_PROFILField;
            }
            set
            {
                if ((this.aCTIVITY_PROFILField != null))
                {
                    if ((aCTIVITY_PROFILField.Equals(value) != true))
                    {
                        this.aCTIVITY_PROFILField = value;
                        this.OnPropertyChanged("ACTIVITY_PROFIL");
                    }
                }
                else
                {
                    this.aCTIVITY_PROFILField = value;
                    this.OnPropertyChanged("ACTIVITY_PROFIL");
                }
            }
        }

        /// <summary>
        /// Segment purchasing data for vendor MMS SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFM2M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 53)]
        public List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M> E1LFM2M
        {
            get
            {
                return this.e1LFM2MField;
            }
            set
            {
                if ((this.e1LFM2MField != null))
                {
                    if ((e1LFM2MField.Equals(value) != true))
                    {
                        this.e1LFM2MField = value;
                        this.OnPropertyChanged("E1LFM2M");
                    }
                }
                else
                {
                    this.e1LFM2MField = value;
                    this.OnPropertyChanged("E1LFM2M");
                }
            }
        }

        /// <summary>
        /// Segment for addresses of vendors MMS SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1WYT3M", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 54)]
        public List<CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M> E1WYT3M
        {
            get
            {
                return this.e1WYT3MField;
            }
            set
            {
                if ((this.e1WYT3MField != null))
                {
                    if ((e1WYT3MField.Equals(value) != true))
                    {
                        this.e1WYT3MField = value;
                        this.OnPropertyChanged("E1WYT3M");
                    }
                }
                else
                {
                    this.e1WYT3MField = value;
                    this.OnPropertyChanged("E1WYT3M");
                }
            }
        }

        /// <summary>
        /// Vendor Master Purchasing Organization: Texts, Header
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFM1H", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 55)]
        public List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H> E1LFM1H
        {
            get
            {
                return this.e1LFM1HField;
            }
            set
            {
                if ((this.e1LFM1HField != null))
                {
                    if ((e1LFM1HField.Equals(value) != true))
                    {
                        this.e1LFM1HField = value;
                        this.OnPropertyChanged("E1LFM1H");
                    }
                }
                else
                {
                    this.e1LFM1HField = value;
                    this.OnPropertyChanged("E1LFM1H");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFM1MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFM1M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFM1M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFM1M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFM1M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFM1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Segment purchasing data for vendor MMS SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string eKORGField;

        private string lTSNRField;

        private string wERKSField;

        private string eRDATField;

        private string eRNAMField;

        private string sPERMField;

        private string lOEVMField;

        private string lFABCField;

        private string wAERSField;

        private string vERKFField;

        private string tELF1Field;

        private string mINBWField;

        private string zTERMField;

        private string iNCO1Field;

        private string iNCO2Field;

        private string wEBREField;

        private string kZABSField;

        private string kALSKField;

        private string kZAUTField;

        private string eXPVZField;

        private string zOLLAField;

        private string mEPRFField;

        private string eKGRPField;

        private string bOLREField;

        private string uMSAEField;

        private string xERSYField;

        private string pLIFZField;

        private string mRPPPField;

        private string lFRHYField;

        private string lIEFRField;

        private string lIBESField;

        private string lIPREField;

        private string lISERField;

        private string dISPOField;

        private string bSTAEField;

        private string rDPRFField;

        private string mEGRUField;

        private string bOPNRField;

        private string xERSRField;

        private string aBUEBField;

        private string pAPRFField;

        private string xNBWYField;

        private string lEBREField;

        private string mINBW2Field;

        private CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Purchasing Organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string EKORG
        {
            get
            {
                return this.eKORGField;
            }
            set
            {
                if ((this.eKORGField != null))
                {
                    if ((eKORGField.Equals(value) != true))
                    {
                        this.eKORGField = value;
                        this.OnPropertyChanged("EKORG");
                    }
                }
                else
                {
                    this.eKORGField = value;
                    this.OnPropertyChanged("EKORG");
                }
            }
        }

        /// <summary>
        /// Vendor Subrange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string LTSNR
        {
            get
            {
                return this.lTSNRField;
            }
            set
            {
                if ((this.lTSNRField != null))
                {
                    if ((lTSNRField.Equals(value) != true))
                    {
                        this.lTSNRField = value;
                        this.OnPropertyChanged("LTSNR");
                    }
                }
                else
                {
                    this.lTSNRField = value;
                    this.OnPropertyChanged("LTSNR");
                }
            }
        }

        /// <summary>
        /// Plant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string WERKS
        {
            get
            {
                return this.wERKSField;
            }
            set
            {
                if ((this.wERKSField != null))
                {
                    if ((wERKSField.Equals(value) != true))
                    {
                        this.wERKSField = value;
                        this.OnPropertyChanged("WERKS");
                    }
                }
                else
                {
                    this.wERKSField = value;
                    this.OnPropertyChanged("WERKS");
                }
            }
        }

        /// <summary>
        /// Date on Which Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Purchasing block at purchasing organization level
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string SPERM
        {
            get
            {
                return this.sPERMField;
            }
            set
            {
                if ((this.sPERMField != null))
                {
                    if ((sPERMField.Equals(value) != true))
                    {
                        this.sPERMField = value;
                        this.OnPropertyChanged("SPERM");
                    }
                }
                else
                {
                    this.sPERMField = value;
                    this.OnPropertyChanged("SPERM");
                }
            }
        }

        /// <summary>
        /// Deletion Indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string LOEVM
        {
            get
            {
                return this.lOEVMField;
            }
            set
            {
                if ((this.lOEVMField != null))
                {
                    if ((lOEVMField.Equals(value) != true))
                    {
                        this.lOEVMField = value;
                        this.OnPropertyChanged("LOEVM");
                    }
                }
                else
                {
                    this.lOEVMField = value;
                    this.OnPropertyChanged("LOEVM");
                }
            }
        }

        /// <summary>
        /// ABC indicator
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string LFABC
        {
            get
            {
                return this.lFABCField;
            }
            set
            {
                if ((this.lFABCField != null))
                {
                    if ((lFABCField.Equals(value) != true))
                    {
                        this.lFABCField = value;
                        this.OnPropertyChanged("LFABC");
                    }
                }
                else
                {
                    this.lFABCField = value;
                    this.OnPropertyChanged("LFABC");
                }
            }
        }

        /// <summary>
        /// Purchase order currency
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string WAERS
        {
            get
            {
                return this.wAERSField;
            }
            set
            {
                if ((this.wAERSField != null))
                {
                    if ((wAERSField.Equals(value) != true))
                    {
                        this.wAERSField = value;
                        this.OnPropertyChanged("WAERS");
                    }
                }
                else
                {
                    this.wAERSField = value;
                    this.OnPropertyChanged("WAERS");
                }
            }
        }

        /// <summary>
        /// Responsible Salesperson at Vendor's Office
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string VERKF
        {
            get
            {
                return this.vERKFField;
            }
            set
            {
                if ((this.vERKFField != null))
                {
                    if ((vERKFField.Equals(value) != true))
                    {
                        this.vERKFField = value;
                        this.OnPropertyChanged("VERKF");
                    }
                }
                else
                {
                    this.vERKFField = value;
                    this.OnPropertyChanged("VERKF");
                }
            }
        }

        /// <summary>
        /// Vendor's telephone number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string TELF1
        {
            get
            {
                return this.tELF1Field;
            }
            set
            {
                if ((this.tELF1Field != null))
                {
                    if ((tELF1Field.Equals(value) != true))
                    {
                        this.tELF1Field = value;
                        this.OnPropertyChanged("TELF1");
                    }
                }
                else
                {
                    this.tELF1Field = value;
                    this.OnPropertyChanged("TELF1");
                }
            }
        }

        /// <summary>
        /// Minimum order value
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string MINBW
        {
            get
            {
                return this.mINBWField;
            }
            set
            {
                if ((this.mINBWField != null))
                {
                    if ((mINBWField.Equals(value) != true))
                    {
                        this.mINBWField = value;
                        this.OnPropertyChanged("MINBW");
                    }
                }
                else
                {
                    this.mINBWField = value;
                    this.OnPropertyChanged("MINBW");
                }
            }
        }

        /// <summary>
        /// Terms of Payment Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string ZTERM
        {
            get
            {
                return this.zTERMField;
            }
            set
            {
                if ((this.zTERMField != null))
                {
                    if ((zTERMField.Equals(value) != true))
                    {
                        this.zTERMField = value;
                        this.OnPropertyChanged("ZTERM");
                    }
                }
                else
                {
                    this.zTERMField = value;
                    this.OnPropertyChanged("ZTERM");
                }
            }
        }

        /// <summary>
        /// Incoterms (Part 1)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string INCO1
        {
            get
            {
                return this.iNCO1Field;
            }
            set
            {
                if ((this.iNCO1Field != null))
                {
                    if ((iNCO1Field.Equals(value) != true))
                    {
                        this.iNCO1Field = value;
                        this.OnPropertyChanged("INCO1");
                    }
                }
                else
                {
                    this.iNCO1Field = value;
                    this.OnPropertyChanged("INCO1");
                }
            }
        }

        /// <summary>
        /// Incoterms (Part 2)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string INCO2
        {
            get
            {
                return this.iNCO2Field;
            }
            set
            {
                if ((this.iNCO2Field != null))
                {
                    if ((iNCO2Field.Equals(value) != true))
                    {
                        this.iNCO2Field = value;
                        this.OnPropertyChanged("INCO2");
                    }
                }
                else
                {
                    this.iNCO2Field = value;
                    this.OnPropertyChanged("INCO2");
                }
            }
        }

        /// <summary>
        /// Indicator: GR-Based Invoice Verification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string WEBRE
        {
            get
            {
                return this.wEBREField;
            }
            set
            {
                if ((this.wEBREField != null))
                {
                    if ((wEBREField.Equals(value) != true))
                    {
                        this.wEBREField = value;
                        this.OnPropertyChanged("WEBRE");
                    }
                }
                else
                {
                    this.wEBREField = value;
                    this.OnPropertyChanged("WEBRE");
                }
            }
        }

        /// <summary>
        /// Order Acknowledgment Requirement
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string KZABS
        {
            get
            {
                return this.kZABSField;
            }
            set
            {
                if ((this.kZABSField != null))
                {
                    if ((kZABSField.Equals(value) != true))
                    {
                        this.kZABSField = value;
                        this.OnPropertyChanged("KZABS");
                    }
                }
                else
                {
                    this.kZABSField = value;
                    this.OnPropertyChanged("KZABS");
                }
            }
        }

        /// <summary>
        /// Group for Calculation Schema (Vendor)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string KALSK
        {
            get
            {
                return this.kALSKField;
            }
            set
            {
                if ((this.kALSKField != null))
                {
                    if ((kALSKField.Equals(value) != true))
                    {
                        this.kALSKField = value;
                        this.OnPropertyChanged("KALSK");
                    }
                }
                else
                {
                    this.kALSKField = value;
                    this.OnPropertyChanged("KALSK");
                }
            }
        }

        /// <summary>
        /// Automatic Generation of Purchase Order Allowed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string KZAUT
        {
            get
            {
                return this.kZAUTField;
            }
            set
            {
                if ((this.kZAUTField != null))
                {
                    if ((kZAUTField.Equals(value) != true))
                    {
                        this.kZAUTField = value;
                        this.OnPropertyChanged("KZAUT");
                    }
                }
                else
                {
                    this.kZAUTField = value;
                    this.OnPropertyChanged("KZAUT");
                }
            }
        }

        /// <summary>
        /// Mode of Transport for Foreign Trade
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string EXPVZ
        {
            get
            {
                return this.eXPVZField;
            }
            set
            {
                if ((this.eXPVZField != null))
                {
                    if ((eXPVZField.Equals(value) != true))
                    {
                        this.eXPVZField = value;
                        this.OnPropertyChanged("EXPVZ");
                    }
                }
                else
                {
                    this.eXPVZField = value;
                    this.OnPropertyChanged("EXPVZ");
                }
            }
        }

        /// <summary>
        /// Customs Office: Office of Exit/Entry for Foreign Trade
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string ZOLLA
        {
            get
            {
                return this.zOLLAField;
            }
            set
            {
                if ((this.zOLLAField != null))
                {
                    if ((zOLLAField.Equals(value) != true))
                    {
                        this.zOLLAField = value;
                        this.OnPropertyChanged("ZOLLA");
                    }
                }
                else
                {
                    this.zOLLAField = value;
                    this.OnPropertyChanged("ZOLLA");
                }
            }
        }

        /// <summary>
        /// Price Determination (Pricing) Date Control
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string MEPRF
        {
            get
            {
                return this.mEPRFField;
            }
            set
            {
                if ((this.mEPRFField != null))
                {
                    if ((mEPRFField.Equals(value) != true))
                    {
                        this.mEPRFField = value;
                        this.OnPropertyChanged("MEPRF");
                    }
                }
                else
                {
                    this.mEPRFField = value;
                    this.OnPropertyChanged("MEPRF");
                }
            }
        }

        /// <summary>
        /// Purchasing Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string EKGRP
        {
            get
            {
                return this.eKGRPField;
            }
            set
            {
                if ((this.eKGRPField != null))
                {
                    if ((eKGRPField.Equals(value) != true))
                    {
                        this.eKGRPField = value;
                        this.OnPropertyChanged("EKGRP");
                    }
                }
                else
                {
                    this.eKGRPField = value;
                    this.OnPropertyChanged("EKGRP");
                }
            }
        }

        /// <summary>
        /// Indicator: vendor subject to subseq. settlement accounting
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 25)]
        public string BOLRE
        {
            get
            {
                return this.bOLREField;
            }
            set
            {
                if ((this.bOLREField != null))
                {
                    if ((bOLREField.Equals(value) != true))
                    {
                        this.bOLREField = value;
                        this.OnPropertyChanged("BOLRE");
                    }
                }
                else
                {
                    this.bOLREField = value;
                    this.OnPropertyChanged("BOLRE");
                }
            }
        }

        /// <summary>
        /// Comparison/agreement of business volumes necessary
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 26)]
        public string UMSAE
        {
            get
            {
                return this.uMSAEField;
            }
            set
            {
                if ((this.uMSAEField != null))
                {
                    if ((uMSAEField.Equals(value) != true))
                    {
                        this.uMSAEField = value;
                        this.OnPropertyChanged("UMSAE");
                    }
                }
                else
                {
                    this.uMSAEField = value;
                    this.OnPropertyChanged("UMSAE");
                }
            }
        }

        /// <summary>
        /// Evaluated Receipt Settlement (ERS)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 27)]
        public string XERSY
        {
            get
            {
                return this.xERSYField;
            }
            set
            {
                if ((this.xERSYField != null))
                {
                    if ((xERSYField.Equals(value) != true))
                    {
                        this.xERSYField = value;
                        this.OnPropertyChanged("XERSY");
                    }
                }
                else
                {
                    this.xERSYField = value;
                    this.OnPropertyChanged("XERSY");
                }
            }
        }

        /// <summary>
        /// Planned Delivery Time in Days
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 28)]
        public string PLIFZ
        {
            get
            {
                return this.pLIFZField;
            }
            set
            {
                if ((this.pLIFZField != null))
                {
                    if ((pLIFZField.Equals(value) != true))
                    {
                        this.pLIFZField = value;
                        this.OnPropertyChanged("PLIFZ");
                    }
                }
                else
                {
                    this.pLIFZField = value;
                    this.OnPropertyChanged("PLIFZ");
                }
            }
        }

        /// <summary>
        /// Planning calendar
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 29)]
        public string MRPPP
        {
            get
            {
                return this.mRPPPField;
            }
            set
            {
                if ((this.mRPPPField != null))
                {
                    if ((mRPPPField.Equals(value) != true))
                    {
                        this.mRPPPField = value;
                        this.OnPropertyChanged("MRPPP");
                    }
                }
                else
                {
                    this.mRPPPField = value;
                    this.OnPropertyChanged("MRPPP");
                }
            }
        }

        /// <summary>
        /// Planning cycle
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 30)]
        public string LFRHY
        {
            get
            {
                return this.lFRHYField;
            }
            set
            {
                if ((this.lFRHYField != null))
                {
                    if ((lFRHYField.Equals(value) != true))
                    {
                        this.lFRHYField = value;
                        this.OnPropertyChanged("LFRHY");
                    }
                }
                else
                {
                    this.lFRHYField = value;
                    this.OnPropertyChanged("LFRHY");
                }
            }
        }

        /// <summary>
        /// Delivery cycle
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 31)]
        public string LIEFR
        {
            get
            {
                return this.lIEFRField;
            }
            set
            {
                if ((this.lIEFRField != null))
                {
                    if ((lIEFRField.Equals(value) != true))
                    {
                        this.lIEFRField = value;
                        this.OnPropertyChanged("LIEFR");
                    }
                }
                else
                {
                    this.lIEFRField = value;
                    this.OnPropertyChanged("LIEFR");
                }
            }
        }

        /// <summary>
        /// Order entry by vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 32)]
        public string LIBES
        {
            get
            {
                return this.lIBESField;
            }
            set
            {
                if ((this.lIBESField != null))
                {
                    if ((lIBESField.Equals(value) != true))
                    {
                        this.lIBESField = value;
                        this.OnPropertyChanged("LIBES");
                    }
                }
                else
                {
                    this.lIBESField = value;
                    this.OnPropertyChanged("LIBES");
                }
            }
        }

        /// <summary>
        /// Price marking, vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 33)]
        public string LIPRE
        {
            get
            {
                return this.lIPREField;
            }
            set
            {
                if ((this.lIPREField != null))
                {
                    if ((lIPREField.Equals(value) != true))
                    {
                        this.lIPREField = value;
                        this.OnPropertyChanged("LIPRE");
                    }
                }
                else
                {
                    this.lIPREField = value;
                    this.OnPropertyChanged("LIPRE");
                }
            }
        }

        /// <summary>
        /// Rack-jobbing: vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 34)]
        public string LISER
        {
            get
            {
                return this.lISERField;
            }
            set
            {
                if ((this.lISERField != null))
                {
                    if ((lISERField.Equals(value) != true))
                    {
                        this.lISERField = value;
                        this.OnPropertyChanged("LISER");
                    }
                }
                else
                {
                    this.lISERField = value;
                    this.OnPropertyChanged("LISER");
                }
            }
        }

        /// <summary>
        /// MRP Controller (Materials Planner)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 35)]
        public string DISPO
        {
            get
            {
                return this.dISPOField;
            }
            set
            {
                if ((this.dISPOField != null))
                {
                    if ((dISPOField.Equals(value) != true))
                    {
                        this.dISPOField = value;
                        this.OnPropertyChanged("DISPO");
                    }
                }
                else
                {
                    this.dISPOField = value;
                    this.OnPropertyChanged("DISPO");
                }
            }
        }

        /// <summary>
        /// Confirmation Control Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 36)]
        public string BSTAE
        {
            get
            {
                return this.bSTAEField;
            }
            set
            {
                if ((this.bSTAEField != null))
                {
                    if ((bSTAEField.Equals(value) != true))
                    {
                        this.bSTAEField = value;
                        this.OnPropertyChanged("BSTAE");
                    }
                }
                else
                {
                    this.bSTAEField = value;
                    this.OnPropertyChanged("BSTAE");
                }
            }
        }

        /// <summary>
        /// Rounding Profile
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 37)]
        public string RDPRF
        {
            get
            {
                return this.rDPRFField;
            }
            set
            {
                if ((this.rDPRFField != null))
                {
                    if ((rDPRFField.Equals(value) != true))
                    {
                        this.rDPRFField = value;
                        this.OnPropertyChanged("RDPRF");
                    }
                }
                else
                {
                    this.rDPRFField = value;
                    this.OnPropertyChanged("RDPRF");
                }
            }
        }

        /// <summary>
        /// Unit of Measure Group
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 38)]
        public string MEGRU
        {
            get
            {
                return this.mEGRUField;
            }
            set
            {
                if ((this.mEGRUField != null))
                {
                    if ((mEGRUField.Equals(value) != true))
                    {
                        this.mEGRUField = value;
                        this.OnPropertyChanged("MEGRU");
                    }
                }
                else
                {
                    this.mEGRUField = value;
                    this.OnPropertyChanged("MEGRU");
                }
            }
        }

        /// <summary>
        /// Restriction Profile for PO-Based Load Building
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 39)]
        public string BOPNR
        {
            get
            {
                return this.bOPNRField;
            }
            set
            {
                if ((this.bOPNRField != null))
                {
                    if ((bOPNRField.Equals(value) != true))
                    {
                        this.bOPNRField = value;
                        this.OnPropertyChanged("BOPNR");
                    }
                }
                else
                {
                    this.bOPNRField = value;
                    this.OnPropertyChanged("BOPNR");
                }
            }
        }

        /// <summary>
        /// Automatic evaluated receipt settlement for return items
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 40)]
        public string XERSR
        {
            get
            {
                return this.xERSRField;
            }
            set
            {
                if ((this.xERSRField != null))
                {
                    if ((xERSRField.Equals(value) != true))
                    {
                        this.xERSRField = value;
                        this.OnPropertyChanged("XERSR");
                    }
                }
                else
                {
                    this.xERSRField = value;
                    this.OnPropertyChanged("XERSR");
                }
            }
        }

        /// <summary>
        /// Release Creation Profile
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 41)]
        public string ABUEB
        {
            get
            {
                return this.aBUEBField;
            }
            set
            {
                if ((this.aBUEBField != null))
                {
                    if ((aBUEBField.Equals(value) != true))
                    {
                        this.aBUEBField = value;
                        this.OnPropertyChanged("ABUEB");
                    }
                }
                else
                {
                    this.aBUEBField = value;
                    this.OnPropertyChanged("ABUEB");
                }
            }
        }

        /// <summary>
        /// Profile for transferring material data via IDoc PROACT
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 42)]
        public string PAPRF
        {
            get
            {
                return this.pAPRFField;
            }
            set
            {
                if ((this.pAPRFField != null))
                {
                    if ((pAPRFField.Equals(value) != true))
                    {
                        this.pAPRFField = value;
                        this.OnPropertyChanged("PAPRF");
                    }
                }
                else
                {
                    this.pAPRFField = value;
                    this.OnPropertyChanged("PAPRF");
                }
            }
        }

        /// <summary>
        /// Revaluation allowed
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 43)]
        public string XNBWY
        {
            get
            {
                return this.xNBWYField;
            }
            set
            {
                if ((this.xNBWYField != null))
                {
                    if ((xNBWYField.Equals(value) != true))
                    {
                        this.xNBWYField = value;
                        this.OnPropertyChanged("XNBWY");
                    }
                }
                else
                {
                    this.xNBWYField = value;
                    this.OnPropertyChanged("XNBWY");
                }
            }
        }

        /// <summary>
        /// Indicator for Service-Based Invoice Verification
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 44)]
        public string LEBRE
        {
            get
            {
                return this.lEBREField;
            }
            set
            {
                if ((this.lEBREField != null))
                {
                    if ((lEBREField.Equals(value) != true))
                    {
                        this.lEBREField = value;
                        this.OnPropertyChanged("LEBRE");
                    }
                }
                else
                {
                    this.lEBREField = value;
                    this.OnPropertyChanged("LEBRE");
                }
            }
        }

        /// <summary>
        /// Minimum order value (batch input field)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 45)]
        public string MINBW2
        {
            get
            {
                return this.mINBW2Field;
            }
            set
            {
                if ((this.mINBW2Field != null))
                {
                    if ((mINBW2Field.Equals(value) != true))
                    {
                        this.mINBW2Field = value;
                        this.OnPropertyChanged("MINBW2");
                    }
                }
                else
                {
                    this.mINBW2Field = value;
                    this.OnPropertyChanged("MINBW2");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFM1ME1LFM2MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for addresses of vendors MMS SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string eKORGField;

        private string lTSNRField;

        private string wERKSField;

        private string pARVWField;

        private string pARZAField;

        private string eRNAMField;

        private string eRDATField;

        private string lIFN2Field;

        private string dEFPAField;

        private string pERNRField;

        private CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Purchasing Organization
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string EKORG
        {
            get
            {
                return this.eKORGField;
            }
            set
            {
                if ((this.eKORGField != null))
                {
                    if ((eKORGField.Equals(value) != true))
                    {
                        this.eKORGField = value;
                        this.OnPropertyChanged("EKORG");
                    }
                }
                else
                {
                    this.eKORGField = value;
                    this.OnPropertyChanged("EKORG");
                }
            }
        }

        /// <summary>
        /// Vendor Subrange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string LTSNR
        {
            get
            {
                return this.lTSNRField;
            }
            set
            {
                if ((this.lTSNRField != null))
                {
                    if ((lTSNRField.Equals(value) != true))
                    {
                        this.lTSNRField = value;
                        this.OnPropertyChanged("LTSNR");
                    }
                }
                else
                {
                    this.lTSNRField = value;
                    this.OnPropertyChanged("LTSNR");
                }
            }
        }

        /// <summary>
        /// Plant
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string WERKS
        {
            get
            {
                return this.wERKSField;
            }
            set
            {
                if ((this.wERKSField != null))
                {
                    if ((wERKSField.Equals(value) != true))
                    {
                        this.wERKSField = value;
                        this.OnPropertyChanged("WERKS");
                    }
                }
                else
                {
                    this.wERKSField = value;
                    this.OnPropertyChanged("WERKS");
                }
            }
        }

        /// <summary>
        /// Partner Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string PARVW
        {
            get
            {
                return this.pARVWField;
            }
            set
            {
                if ((this.pARVWField != null))
                {
                    if ((pARVWField.Equals(value) != true))
                    {
                        this.pARVWField = value;
                        this.OnPropertyChanged("PARVW");
                    }
                }
                else
                {
                    this.pARVWField = value;
                    this.OnPropertyChanged("PARVW");
                }
            }
        }

        /// <summary>
        /// Partner counter
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string PARZA
        {
            get
            {
                return this.pARZAField;
            }
            set
            {
                if ((this.pARZAField != null))
                {
                    if ((pARZAField.Equals(value) != true))
                    {
                        this.pARZAField = value;
                        this.OnPropertyChanged("PARZA");
                    }
                }
                else
                {
                    this.pARZAField = value;
                    this.OnPropertyChanged("PARZA");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Date on Which Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Reference to other vendor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string LIFN2
        {
            get
            {
                return this.lIFN2Field;
            }
            set
            {
                if ((this.lIFN2Field != null))
                {
                    if ((lIFN2Field.Equals(value) != true))
                    {
                        this.lIFN2Field = value;
                        this.OnPropertyChanged("LIFN2");
                    }
                }
                else
                {
                    this.lIFN2Field = value;
                    this.OnPropertyChanged("LIFN2");
                }
            }
        }

        /// <summary>
        /// Default Partner
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string DEFPA
        {
            get
            {
                return this.dEFPAField;
            }
            set
            {
                if ((this.dEFPAField != null))
                {
                    if ((dEFPAField.Equals(value) != true))
                    {
                        this.dEFPAField = value;
                        this.OnPropertyChanged("DEFPA");
                    }
                }
                else
                {
                    this.dEFPAField = value;
                    this.OnPropertyChanged("DEFPA");
                }
            }
        }

        /// <summary>
        /// Personnel Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string PERNR
        {
            get
            {
                return this.pERNRField;
            }
            set
            {
                if ((this.pERNRField != null))
                {
                    if ((pERNRField.Equals(value) != true))
                    {
                        this.pERNRField = value;
                        this.OnPropertyChanged("PERNR");
                    }
                }
                else
                {
                    this.pERNRField = value;
                    this.OnPropertyChanged("PERNR");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFM1ME1WYT3MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Vendor Master Purchasing Organization: Texts, Header
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDOBJECTField;

        private string tDNAMEField;

        private string tDIDField;

        private string tDSPRASField;

        private string tDTEXTTYPEField;

        private string tDSPRASISOField;

        private List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L> e1LFM1LField;

        private CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H()
        {
            this.e1LFM1LField = new List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Texts: Application Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDOBJECT
        {
            get
            {
                return this.tDOBJECTField;
            }
            set
            {
                if ((this.tDOBJECTField != null))
                {
                    if ((tDOBJECTField.Equals(value) != true))
                    {
                        this.tDOBJECTField = value;
                        this.OnPropertyChanged("TDOBJECT");
                    }
                }
                else
                {
                    this.tDOBJECTField = value;
                    this.OnPropertyChanged("TDOBJECT");
                }
            }
        }

        /// <summary>
        /// Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDNAME
        {
            get
            {
                return this.tDNAMEField;
            }
            set
            {
                if ((this.tDNAMEField != null))
                {
                    if ((tDNAMEField.Equals(value) != true))
                    {
                        this.tDNAMEField = value;
                        this.OnPropertyChanged("TDNAME");
                    }
                }
                else
                {
                    this.tDNAMEField = value;
                    this.OnPropertyChanged("TDNAME");
                }
            }
        }

        /// <summary>
        /// Text ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string TDID
        {
            get
            {
                return this.tDIDField;
            }
            set
            {
                if ((this.tDIDField != null))
                {
                    if ((tDIDField.Equals(value) != true))
                    {
                        this.tDIDField = value;
                        this.OnPropertyChanged("TDID");
                    }
                }
                else
                {
                    this.tDIDField = value;
                    this.OnPropertyChanged("TDID");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string TDSPRAS
        {
            get
            {
                return this.tDSPRASField;
            }
            set
            {
                if ((this.tDSPRASField != null))
                {
                    if ((tDSPRASField.Equals(value) != true))
                    {
                        this.tDSPRASField = value;
                        this.OnPropertyChanged("TDSPRAS");
                    }
                }
                else
                {
                    this.tDSPRASField = value;
                    this.OnPropertyChanged("TDSPRAS");
                }
            }
        }

        /// <summary>
        /// SAPscript: Format of Text
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string TDTEXTTYPE
        {
            get
            {
                return this.tDTEXTTYPEField;
            }
            set
            {
                if ((this.tDTEXTTYPEField != null))
                {
                    if ((tDTEXTTYPEField.Equals(value) != true))
                    {
                        this.tDTEXTTYPEField = value;
                        this.OnPropertyChanged("TDTEXTTYPE");
                    }
                }
                else
                {
                    this.tDTEXTTYPEField = value;
                    this.OnPropertyChanged("TDTEXTTYPE");
                }
            }
        }

        /// <summary>
        /// Language according to ISO 639
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string TDSPRASISO
        {
            get
            {
                return this.tDSPRASISOField;
            }
            set
            {
                if ((this.tDSPRASISOField != null))
                {
                    if ((tDSPRASISOField.Equals(value) != true))
                    {
                        this.tDSPRASISOField = value;
                        this.OnPropertyChanged("TDSPRASISO");
                    }
                }
                else
                {
                    this.tDSPRASISOField = value;
                    this.OnPropertyChanged("TDSPRASISO");
                }
            }
        }

        /// <summary>
        /// Vendor Master Purchasing Organization: Text Line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1LFM1L", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L> E1LFM1L
        {
            get
            {
                return this.e1LFM1LField;
            }
            set
            {
                if ((this.e1LFM1LField != null))
                {
                    if ((e1LFM1LField.Equals(value) != true))
                    {
                        this.e1LFM1LField = value;
                        this.OnPropertyChanged("E1LFM1L");
                    }
                }
                else
                {
                    this.e1LFM1LField = value;
                    this.OnPropertyChanged("E1LFM1L");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1H LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Vendor Master Purchasing Organization: Text Line
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string tDFORMATField;

        private string tDLINEField;

        private CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1LSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Tag column
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string TDFORMAT
        {
            get
            {
                return this.tDFORMATField;
            }
            set
            {
                if ((this.tDFORMATField != null))
                {
                    if ((tDFORMATField.Equals(value) != true))
                    {
                        this.tDFORMATField = value;
                        this.OnPropertyChanged("TDFORMAT");
                    }
                }
                else
                {
                    this.tDFORMATField = value;
                    this.OnPropertyChanged("TDFORMAT");
                }
            }
        }

        /// <summary>
        /// Text Line
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string TDLINE
        {
            get
            {
                return this.tDLINEField;
            }
            set
            {
                if ((this.tDLINEField != null))
                {
                    if ((tDLINEField.Equals(value) != true))
                    {
                        this.tDLINEField = value;
                        this.OnPropertyChanged("TDLINE");
                    }
                }
                else
                {
                    this.tDLINEField = value;
                    this.OnPropertyChanged("TDLINE");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1LSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1L LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HE1LFM1LSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFM1ME1LFM1HSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFM1MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for bank details of vendor SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFBKM : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string bANKSField;

        private string bANKLField;

        private string bANKNField;

        private string bKONTField;

        private string bVTYPField;

        private string xEZERField;

        private string bANKAField;

        private string pROVZField;

        private string sTRASField;

        private string oRT01Field;

        private string sWIFTField;

        private string bGRUPField;

        private string xPGROField;

        private string bNKLZField;

        private string pSKTOField;

        private string bKREFField;

        private string bRNCHField;

        private string pROV2Field;

        private string sTRA2Field;

        private string oRT02Field;

        private string kOINHField;

        private string kOVONField;

        private string kOBISField;

        private CREMAS05IDOCE1LFA1ME1LFBKMSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Bank country key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string BANKS
        {
            get
            {
                return this.bANKSField;
            }
            set
            {
                if ((this.bANKSField != null))
                {
                    if ((bANKSField.Equals(value) != true))
                    {
                        this.bANKSField = value;
                        this.OnPropertyChanged("BANKS");
                    }
                }
                else
                {
                    this.bANKSField = value;
                    this.OnPropertyChanged("BANKS");
                }
            }
        }

        /// <summary>
        /// Bank Keys
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string BANKL
        {
            get
            {
                return this.bANKLField;
            }
            set
            {
                if ((this.bANKLField != null))
                {
                    if ((bANKLField.Equals(value) != true))
                    {
                        this.bANKLField = value;
                        this.OnPropertyChanged("BANKL");
                    }
                }
                else
                {
                    this.bANKLField = value;
                    this.OnPropertyChanged("BANKL");
                }
            }
        }

        /// <summary>
        /// Bank account number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string BANKN
        {
            get
            {
                return this.bANKNField;
            }
            set
            {
                if ((this.bANKNField != null))
                {
                    if ((bANKNField.Equals(value) != true))
                    {
                        this.bANKNField = value;
                        this.OnPropertyChanged("BANKN");
                    }
                }
                else
                {
                    this.bANKNField = value;
                    this.OnPropertyChanged("BANKN");
                }
            }
        }

        /// <summary>
        /// Bank Control Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string BKONT
        {
            get
            {
                return this.bKONTField;
            }
            set
            {
                if ((this.bKONTField != null))
                {
                    if ((bKONTField.Equals(value) != true))
                    {
                        this.bKONTField = value;
                        this.OnPropertyChanged("BKONT");
                    }
                }
                else
                {
                    this.bKONTField = value;
                    this.OnPropertyChanged("BKONT");
                }
            }
        }

        /// <summary>
        /// Partner Bank Type
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string BVTYP
        {
            get
            {
                return this.bVTYPField;
            }
            set
            {
                if ((this.bVTYPField != null))
                {
                    if ((bVTYPField.Equals(value) != true))
                    {
                        this.bVTYPField = value;
                        this.OnPropertyChanged("BVTYP");
                    }
                }
                else
                {
                    this.bVTYPField = value;
                    this.OnPropertyChanged("BVTYP");
                }
            }
        }

        /// <summary>
        /// Indicator: Is there collection authorization ?
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public string XEZER
        {
            get
            {
                return this.xEZERField;
            }
            set
            {
                if ((this.xEZERField != null))
                {
                    if ((xEZERField.Equals(value) != true))
                    {
                        this.xEZERField = value;
                        this.OnPropertyChanged("XEZER");
                    }
                }
                else
                {
                    this.xEZERField = value;
                    this.OnPropertyChanged("XEZER");
                }
            }
        }

        /// <summary>
        /// Name of bank
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 8)]
        public string BANKA
        {
            get
            {
                return this.bANKAField;
            }
            set
            {
                if ((this.bANKAField != null))
                {
                    if ((bANKAField.Equals(value) != true))
                    {
                        this.bANKAField = value;
                        this.OnPropertyChanged("BANKA");
                    }
                }
                else
                {
                    this.bANKAField = value;
                    this.OnPropertyChanged("BANKA");
                }
            }
        }

        /// <summary>
        /// Region (no longer used as of release 3.0D!!!)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 9)]
        public string PROVZ
        {
            get
            {
                return this.pROVZField;
            }
            set
            {
                if ((this.pROVZField != null))
                {
                    if ((pROVZField.Equals(value) != true))
                    {
                        this.pROVZField = value;
                        this.OnPropertyChanged("PROVZ");
                    }
                }
                else
                {
                    this.pROVZField = value;
                    this.OnPropertyChanged("PROVZ");
                }
            }
        }

        /// <summary>
        /// Street (no longer used as of release 3.0D!!!)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 10)]
        public string STRAS
        {
            get
            {
                return this.sTRASField;
            }
            set
            {
                if ((this.sTRASField != null))
                {
                    if ((sTRASField.Equals(value) != true))
                    {
                        this.sTRASField = value;
                        this.OnPropertyChanged("STRAS");
                    }
                }
                else
                {
                    this.sTRASField = value;
                    this.OnPropertyChanged("STRAS");
                }
            }
        }

        /// <summary>
        /// Location
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 11)]
        public string ORT01
        {
            get
            {
                return this.oRT01Field;
            }
            set
            {
                if ((this.oRT01Field != null))
                {
                    if ((oRT01Field.Equals(value) != true))
                    {
                        this.oRT01Field = value;
                        this.OnPropertyChanged("ORT01");
                    }
                }
                else
                {
                    this.oRT01Field = value;
                    this.OnPropertyChanged("ORT01");
                }
            }
        }

        /// <summary>
        /// SWIFT Code for International Payments
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 12)]
        public string SWIFT
        {
            get
            {
                return this.sWIFTField;
            }
            set
            {
                if ((this.sWIFTField != null))
                {
                    if ((sWIFTField.Equals(value) != true))
                    {
                        this.sWIFTField = value;
                        this.OnPropertyChanged("SWIFT");
                    }
                }
                else
                {
                    this.sWIFTField = value;
                    this.OnPropertyChanged("SWIFT");
                }
            }
        }

        /// <summary>
        /// Bank group (bank network)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 13)]
        public string BGRUP
        {
            get
            {
                return this.bGRUPField;
            }
            set
            {
                if ((this.bGRUPField != null))
                {
                    if ((bGRUPField.Equals(value) != true))
                    {
                        this.bGRUPField = value;
                        this.OnPropertyChanged("BGRUP");
                    }
                }
                else
                {
                    this.bGRUPField = value;
                    this.OnPropertyChanged("BGRUP");
                }
            }
        }

        /// <summary>
        /// Checkbox
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 14)]
        public string XPGRO
        {
            get
            {
                return this.xPGROField;
            }
            set
            {
                if ((this.xPGROField != null))
                {
                    if ((xPGROField.Equals(value) != true))
                    {
                        this.xPGROField = value;
                        this.OnPropertyChanged("XPGRO");
                    }
                }
                else
                {
                    this.xPGROField = value;
                    this.OnPropertyChanged("XPGRO");
                }
            }
        }

        /// <summary>
        /// Bank number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 15)]
        public string BNKLZ
        {
            get
            {
                return this.bNKLZField;
            }
            set
            {
                if ((this.bNKLZField != null))
                {
                    if ((bNKLZField.Equals(value) != true))
                    {
                        this.bNKLZField = value;
                        this.OnPropertyChanged("BNKLZ");
                    }
                }
                else
                {
                    this.bNKLZField = value;
                    this.OnPropertyChanged("BNKLZ");
                }
            }
        }

        /// <summary>
        /// Account Number of Bank Account At Post Office
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 16)]
        public string PSKTO
        {
            get
            {
                return this.pSKTOField;
            }
            set
            {
                if ((this.pSKTOField != null))
                {
                    if ((pSKTOField.Equals(value) != true))
                    {
                        this.pSKTOField = value;
                        this.OnPropertyChanged("PSKTO");
                    }
                }
                else
                {
                    this.pSKTOField = value;
                    this.OnPropertyChanged("PSKTO");
                }
            }
        }

        /// <summary>
        /// Reference specifications for bank details
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 17)]
        public string BKREF
        {
            get
            {
                return this.bKREFField;
            }
            set
            {
                if ((this.bKREFField != null))
                {
                    if ((bKREFField.Equals(value) != true))
                    {
                        this.bKREFField = value;
                        this.OnPropertyChanged("BKREF");
                    }
                }
                else
                {
                    this.bKREFField = value;
                    this.OnPropertyChanged("BKREF");
                }
            }
        }

        /// <summary>
        /// Bank Branch
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 18)]
        public string BRNCH
        {
            get
            {
                return this.bRNCHField;
            }
            set
            {
                if ((this.bRNCHField != null))
                {
                    if ((bRNCHField.Equals(value) != true))
                    {
                        this.bRNCHField = value;
                        this.OnPropertyChanged("BRNCH");
                    }
                }
                else
                {
                    this.bRNCHField = value;
                    this.OnPropertyChanged("BRNCH");
                }
            }
        }

        /// <summary>
        /// Region (State, Province, County)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 19)]
        public string PROV2
        {
            get
            {
                return this.pROV2Field;
            }
            set
            {
                if ((this.pROV2Field != null))
                {
                    if ((pROV2Field.Equals(value) != true))
                    {
                        this.pROV2Field = value;
                        this.OnPropertyChanged("PROV2");
                    }
                }
                else
                {
                    this.pROV2Field = value;
                    this.OnPropertyChanged("PROV2");
                }
            }
        }

        /// <summary>
        /// House number and street
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 20)]
        public string STRA2
        {
            get
            {
                return this.sTRA2Field;
            }
            set
            {
                if ((this.sTRA2Field != null))
                {
                    if ((sTRA2Field.Equals(value) != true))
                    {
                        this.sTRA2Field = value;
                        this.OnPropertyChanged("STRA2");
                    }
                }
                else
                {
                    this.sTRA2Field = value;
                    this.OnPropertyChanged("STRA2");
                }
            }
        }

        /// <summary>
        /// City
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 21)]
        public string ORT02
        {
            get
            {
                return this.oRT02Field;
            }
            set
            {
                if ((this.oRT02Field != null))
                {
                    if ((oRT02Field.Equals(value) != true))
                    {
                        this.oRT02Field = value;
                        this.OnPropertyChanged("ORT02");
                    }
                }
                else
                {
                    this.oRT02Field = value;
                    this.OnPropertyChanged("ORT02");
                }
            }
        }

        /// <summary>
        /// Account Holder Name
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 22)]
        public string KOINH
        {
            get
            {
                return this.kOINHField;
            }
            set
            {
                if ((this.kOINHField != null))
                {
                    if ((kOINHField.Equals(value) != true))
                    {
                        this.kOINHField = value;
                        this.OnPropertyChanged("KOINH");
                    }
                }
                else
                {
                    this.kOINHField = value;
                    this.OnPropertyChanged("KOINH");
                }
            }
        }

        /// <summary>
        /// Date (batch input)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 23)]
        public string KOVON
        {
            get
            {
                return this.kOVONField;
            }
            set
            {
                if ((this.kOVONField != null))
                {
                    if ((kOVONField.Equals(value) != true))
                    {
                        this.kOVONField = value;
                        this.OnPropertyChanged("KOVON");
                    }
                }
                else
                {
                    this.kOVONField = value;
                    this.OnPropertyChanged("KOVON");
                }
            }
        }

        /// <summary>
        /// Date (batch input)
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 24)]
        public string KOBIS
        {
            get
            {
                return this.kOBISField;
            }
            set
            {
                if ((this.kOBISField != null))
                {
                    if ((kOBISField.Equals(value) != true))
                    {
                        this.kOBISField = value;
                        this.OnPropertyChanged("KOBIS");
                    }
                }
                else
                {
                    this.kOBISField = value;
                    this.OnPropertyChanged("KOBIS");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFBKMSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFBKM));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFBKM object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFBKM object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFBKM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFBKM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFBKM);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFBKM obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFBKM Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFBKM)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFBKM object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFBKM object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFBKM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFBKM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFBKM);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFBKM obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFBKM obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFBKM LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFBKM LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFBKMSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for EU tax numbers vendors
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1LFASM : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string lAND1Field;

        private string sTCEGField;

        private CREMAS05IDOCE1LFA1ME1LFASMSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Country Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LAND1
        {
            get
            {
                return this.lAND1Field;
            }
            set
            {
                if ((this.lAND1Field != null))
                {
                    if ((lAND1Field.Equals(value) != true))
                    {
                        this.lAND1Field = value;
                        this.OnPropertyChanged("LAND1");
                    }
                }
                else
                {
                    this.lAND1Field = value;
                    this.OnPropertyChanged("LAND1");
                }
            }
        }

        /// <summary>
        /// VAT Registration Number
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string STCEG
        {
            get
            {
                return this.sTCEGField;
            }
            set
            {
                if ((this.sTCEGField != null))
                {
                    if ((sTCEGField.Equals(value) != true))
                    {
                        this.sTCEGField = value;
                        this.OnPropertyChanged("STCEG");
                    }
                }
                else
                {
                    this.sTCEGField = value;
                    this.OnPropertyChanged("STCEG");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1LFASMSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1LFASM));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFASM object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1LFASM object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFASM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFASM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFASM);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1LFASM obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFASM Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1LFASM)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1LFASM object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1LFASM object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1LFASM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1LFASM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1LFASM);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFASM obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1LFASM obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1LFASM LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1LFASM LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1LFASMSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    /// <summary>
    /// Segment for vendor sub-range MMS SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1WYT1M : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string lIFNRField;

        private string lTSNRField;

        private string eRNAMField;

        private string eRDATField;

        private string sPRASField;

        private string lTSBZField;

        private List<CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM> e1WYTTMField;

        private CREMAS05IDOCE1LFA1ME1WYT1MSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CREMAS05IDOCE1LFA1ME1WYT1M class constructor
        /// </summary>
        public CREMAS05IDOCE1LFA1ME1WYT1M()
        {
            this.e1WYTTMField = new List<CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM>();
        }

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Vendor Subrange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LTSNR
        {
            get
            {
                return this.lTSNRField;
            }
            set
            {
                if ((this.lTSNRField != null))
                {
                    if ((lTSNRField.Equals(value) != true))
                    {
                        this.lTSNRField = value;
                        this.OnPropertyChanged("LTSNR");
                    }
                }
                else
                {
                    this.lTSNRField = value;
                    this.OnPropertyChanged("LTSNR");
                }
            }
        }

        /// <summary>
        /// Name of Person who Created the Object
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string ERNAM
        {
            get
            {
                return this.eRNAMField;
            }
            set
            {
                if ((this.eRNAMField != null))
                {
                    if ((eRNAMField.Equals(value) != true))
                    {
                        this.eRNAMField = value;
                        this.OnPropertyChanged("ERNAM");
                    }
                }
                else
                {
                    this.eRNAMField = value;
                    this.OnPropertyChanged("ERNAM");
                }
            }
        }

        /// <summary>
        /// Date on Which Record Was Created
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string ERDAT
        {
            get
            {
                return this.eRDATField;
            }
            set
            {
                if ((this.eRDATField != null))
                {
                    if ((eRDATField.Equals(value) != true))
                    {
                        this.eRDATField = value;
                        this.OnPropertyChanged("ERDAT");
                    }
                }
                else
                {
                    this.eRDATField = value;
                    this.OnPropertyChanged("ERDAT");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        public string LTSBZ
        {
            get
            {
                return this.lTSBZField;
            }
            set
            {
                if ((this.lTSBZField != null))
                {
                    if ((lTSBZField.Equals(value) != true))
                    {
                        this.lTSBZField = value;
                        this.OnPropertyChanged("LTSBZ");
                    }
                }
                else
                {
                    this.lTSBZField = value;
                    this.OnPropertyChanged("LTSBZ");
                }
            }
        }

        /// <summary>
        /// Segment for vendor sub-range identification SMD
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("E1WYTTM", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 7)]
        public List<CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM> E1WYTTM
        {
            get
            {
                return this.e1WYTTMField;
            }
            set
            {
                if ((this.e1WYTTMField != null))
                {
                    if ((e1WYTTMField.Equals(value) != true))
                    {
                        this.e1WYTTMField = value;
                        this.OnPropertyChanged("E1WYTTM");
                    }
                }
                else
                {
                    this.e1WYTTMField = value;
                    this.OnPropertyChanged("E1WYTTM");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1WYT1MSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1WYT1M));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1WYT1M object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1WYT1M object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1WYT1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1WYT1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1WYT1M);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1WYT1M obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1M Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1WYT1M)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1WYT1M object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1WYT1M object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1WYT1M object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1WYT1M obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1WYT1M);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1WYT1M obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1WYT1M obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1M LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1M LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// Segment for vendor sub-range identification SMD
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM : System.ComponentModel.INotifyPropertyChanged
    {

        private string mSGFNField;

        private string sPRASField;

        private string lIFNRField;

        private string lTSNRField;

        private string lTSBZField;

        private CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTMSEGMENT sEGMENTField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// Function
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string MSGFN
        {
            get
            {
                return this.mSGFNField;
            }
            set
            {
                if ((this.mSGFNField != null))
                {
                    if ((mSGFNField.Equals(value) != true))
                    {
                        this.mSGFNField = value;
                        this.OnPropertyChanged("MSGFN");
                    }
                }
                else
                {
                    this.mSGFNField = value;
                    this.OnPropertyChanged("MSGFN");
                }
            }
        }

        /// <summary>
        /// Language Key
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string SPRAS
        {
            get
            {
                return this.sPRASField;
            }
            set
            {
                if ((this.sPRASField != null))
                {
                    if ((sPRASField.Equals(value) != true))
                    {
                        this.sPRASField = value;
                        this.OnPropertyChanged("SPRAS");
                    }
                }
                else
                {
                    this.sPRASField = value;
                    this.OnPropertyChanged("SPRAS");
                }
            }
        }

        /// <summary>
        /// Account Number of Vendor or Creditor
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string LIFNR
        {
            get
            {
                return this.lIFNRField;
            }
            set
            {
                if ((this.lIFNRField != null))
                {
                    if ((lIFNRField.Equals(value) != true))
                    {
                        this.lIFNRField = value;
                        this.OnPropertyChanged("LIFNR");
                    }
                }
                else
                {
                    this.lIFNRField = value;
                    this.OnPropertyChanged("LIFNR");
                }
            }
        }

        /// <summary>
        /// Vendor Subrange
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public string LTSNR
        {
            get
            {
                return this.lTSNRField;
            }
            set
            {
                if ((this.lTSNRField != null))
                {
                    if ((lTSNRField.Equals(value) != true))
                    {
                        this.lTSNRField = value;
                        this.OnPropertyChanged("LTSNR");
                    }
                }
                else
                {
                    this.lTSNRField = value;
                    this.OnPropertyChanged("LTSNR");
                }
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public string LTSBZ
        {
            get
            {
                return this.lTSBZField;
            }
            set
            {
                if ((this.lTSBZField != null))
                {
                    if ((lTSBZField.Equals(value) != true))
                    {
                        this.lTSBZField = value;
                        this.OnPropertyChanged("LTSBZ");
                    }
                }
                else
                {
                    this.lTSBZField = value;
                    this.OnPropertyChanged("LTSBZ");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTMSEGMENT SEGMENT
        {
            get
            {
                return this.sEGMENTField;
            }
            set
            {
                if ((sEGMENTField.Equals(value) != true))
                {
                    this.sEGMENTField = value;
                    this.OnPropertyChanged("SEGMENT");
                }
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTM LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1WYT1ME1WYTTMSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1ME1WYT1MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCE1LFA1MSEGMENT
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum CREMAS05IDOCBEGIN
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }
}
