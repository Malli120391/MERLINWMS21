//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MRLWMSC21WCF.PODImageUpload {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PODImageUpload.PODUploadSoap")]
    public interface PODUploadSoap {
        
        // CODEGEN: Parameter 'FileControl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MRLWMSC21WCF.PODImageUpload.UploadFileResponse UploadFile(MRLWMSC21WCF.PODImageUpload.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadFile", ReplyAction="*")]
        System.Threading.Tasks.Task<MRLWMSC21WCF.PODImageUpload.UploadFileResponse> UploadFileAsync(MRLWMSC21WCF.PODImageUpload.UploadFileRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PathName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileControl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string FileName;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(string PathName, byte[] FileControl, string FileName) {
            this.PathName = PathName;
            this.FileControl = FileControl;
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UploadFileResult;
        
        public UploadFileResponse() {
        }
        
        public UploadFileResponse(bool UploadFileResult) {
            this.UploadFileResult = UploadFileResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PODUploadSoapChannel : MRLWMSC21WCF.PODImageUpload.PODUploadSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PODUploadSoapClient : System.ServiceModel.ClientBase<MRLWMSC21WCF.PODImageUpload.PODUploadSoap>, MRLWMSC21WCF.PODImageUpload.PODUploadSoap {
        
        public PODUploadSoapClient() {
        }
        
        public PODUploadSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PODUploadSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PODUploadSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PODUploadSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MRLWMSC21WCF.PODImageUpload.UploadFileResponse MRLWMSC21WCF.PODImageUpload.PODUploadSoap.UploadFile(MRLWMSC21WCF.PODImageUpload.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public bool UploadFile(string PathName, byte[] FileControl, string FileName) {
            MRLWMSC21WCF.PODImageUpload.UploadFileRequest inValue = new MRLWMSC21WCF.PODImageUpload.UploadFileRequest();
            inValue.PathName = PathName;
            inValue.FileControl = FileControl;
            inValue.FileName = FileName;
            MRLWMSC21WCF.PODImageUpload.UploadFileResponse retVal = ((MRLWMSC21WCF.PODImageUpload.PODUploadSoap)(this)).UploadFile(inValue);
            return retVal.UploadFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MRLWMSC21WCF.PODImageUpload.UploadFileResponse> MRLWMSC21WCF.PODImageUpload.PODUploadSoap.UploadFileAsync(MRLWMSC21WCF.PODImageUpload.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<MRLWMSC21WCF.PODImageUpload.UploadFileResponse> UploadFileAsync(string PathName, byte[] FileControl, string FileName) {
            MRLWMSC21WCF.PODImageUpload.UploadFileRequest inValue = new MRLWMSC21WCF.PODImageUpload.UploadFileRequest();
            inValue.PathName = PathName;
            inValue.FileControl = FileControl;
            inValue.FileName = FileName;
            return ((MRLWMSC21WCF.PODImageUpload.PODUploadSoap)(this)).UploadFileAsync(inValue);
        }
    }
}
